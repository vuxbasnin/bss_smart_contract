/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BSSCrowdSale,
  BSSCrowdSaleInterface,
} from "../../../contracts/BSSCrowdSale.sol/BSSCrowdSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bnbRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_usdtRate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_icoToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByBNB",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByUSDT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
    ],
    name: "SetBNBRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
    ],
    name: "SetUSDTRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "SetUSDTToken",
    type: "event",
  },
  {
    inputs: [],
    name: "BNB_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokenByBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usdtAmount",
        type: "uint256",
      },
    ],
    name: "buyTokenByUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
    ],
    name: "setBNBRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
    ],
    name: "setUSDTRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "setUSDTToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a4c38038062001a4c83398181016040528101906200003791906200031b565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200039e565b60405180910390fd5b620000be816200015960201b60201c565b50836002819055508260038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620003bb565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620002378162000222565b81146200024357600080fd5b50565b60008151905062000257816200022c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200028a826200025d565b9050919050565b6200029c816200027d565b8114620002a857600080fd5b50565b600081519050620002bc8162000291565b92915050565b6000620002cf826200025d565b9050919050565b6000620002e382620002c2565b9050919050565b620002f581620002d6565b81146200030157600080fd5b50565b6000815190506200031581620002ea565b92915050565b600080600080608085870312156200033857620003376200021d565b5b6000620003488782880162000246565b94505060206200035b8782880162000246565b93505060406200036e87828801620002ab565b9250506060620003818782880162000304565b91505092959194509250565b6200039881620002c2565b82525050565b6000602082019050620003b560008301846200038d565b92915050565b61168180620003cb6000396000f3fe6080604052600436106100fe5760003560e01c8063592a00e411610095578063a98ad46c11610064578063a98ad46c146102b6578063acb03d43146102e1578063c5d156511461031e578063f2fde38b14610347578063fc0c546a14610370576100fe565b8063592a00e41461022057806366e226bd1461024b578063715018a6146102745780638da5cb5b1461028b576100fe565b806331927737116100d157806331927737146101bd5780633ccfd60b146101c75780633e3f2359146101de578063521eb273146101f5576100fe565b8063157fc821146101035780631832d8b61461012e5780631b4622d61461016b5780632be8629914610194575b600080fd5b34801561010f57600080fd5b5061011861039b565b6040516101259190611113565b60405180910390f35b34801561013a57600080fd5b506101556004803603810190610150919061115f565b6103a1565b6040516101629190611113565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d919061115f565b6103b8565b005b3480156101a057600080fd5b506101bb60048036038101906101b6919061115f565b610401565b005b6101c561044a565b005b3480156101d357600080fd5b506101dc6106aa565b005b3480156101ea57600080fd5b506101f36106fb565b005b34801561020157600080fd5b5061020a610841565b60405161021791906111cd565b60405180910390f35b34801561022c57600080fd5b50610235610867565b6040516102429190611113565b60405180910390f35b34801561025757600080fd5b50610272600480360381019061026d9190611238565b61086d565b005b34801561028057600080fd5b506102896108f0565b005b34801561029757600080fd5b506102a0610904565b6040516102ad9190611274565b60405180910390f35b3480156102c257600080fd5b506102cb61092d565b6040516102d891906112ee565b60405180910390f35b3480156102ed57600080fd5b506103086004803603810190610303919061115f565b610953565b6040516103159190611113565b60405180910390f35b34801561032a57600080fd5b506103456004803603810190610340919061115f565b61096a565b005b34801561035357600080fd5b5061036e60048036038101906103699190611335565b610bac565b005b34801561037c57600080fd5b50610385610c32565b60405161039291906112ee565b60405180910390f35b60025481565b6000600354826103b19190611391565b9050919050565b6103c0610c58565b806003819055507fbdaa37e3f6679857d8c3e80d172bd45af732a8658cf1d690c81ca96f5a443b5b816040516103f69190611113565b60405180910390a150565b610409610c58565b806002819055507fb0cc740bbbfcd5af22ee3956c6b44d2d6f499e2a86cb11d915fcce88dca2113a8160405161043f9190611113565b60405180910390a150565b6000349050600061045a82610953565b90506000811161049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690611430565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104fb9190611274565b602060405180830381865afa158015610518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053c9190611465565b101561057d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610574906114de565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff163110156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce906114de565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561063f573d6000803e3d6000fd5b5061066d600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610cdf565b7ff695091b71a5c3ea41510251da89a66470bbcf1ee118f820a1bab8739e29ea50338260405161069e9291906114fe565b60405180910390a15050565b6106b2610c58565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156106f8573d6000803e3d6000fd5b50565b610703610c58565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161079d9190611274565b602060405180830381865afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190611465565b6040518363ffffffff1660e01b81526004016107fb9291906114fe565b6020604051808303816000875af115801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e919061155f565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b610875610c58565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f43036333e58a6f9255617b54ec9f5825590c8ee695a222dc35e5001927f07151816040516108e591906112ee565b60405180910390a150565b6108f8610c58565b6109026000610d5e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254826109639190611391565b9050919050565b6000610975826103a1565b9050813373ffffffffffffffffffffffffffffffffffffffff163110156109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c8906114de565b60405180910390fd5b60008111610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b90611430565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a709190611274565b602060405180830381865afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab19190611465565b1015610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae9906114de565b60405180910390fd5b610b42600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610e22565b610b6f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610cdf565b7f5c0161fad3fa89cfebd4a74115d9f81661cdd1b9008d05a238ea9d65088e20643382604051610ba09291906114fe565b60405180910390a15050565b610bb4610c58565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c265760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c1d9190611274565b60405180910390fd5b610c2f81610d5e565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c60610ea4565b73ffffffffffffffffffffffffffffffffffffffff16610c7e610904565b73ffffffffffffffffffffffffffffffffffffffff1614610cdd57610ca1610ea4565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cd49190611274565b60405180910390fd5b565b610d59838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d129291906114fe565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610eac565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e9e848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610e579392919061158c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610eac565b50505050565b600033905090565b6000610ed7828473ffffffffffffffffffffffffffffffffffffffff16610f4390919063ffffffff16565b90506000815114158015610efc575080806020019051810190610efa919061155f565b155b15610f3e57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f359190611274565b60405180910390fd5b505050565b6060610f5183836000610f59565b905092915050565b606081471015610fa057306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610f979190611274565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610fc99190611634565b60006040518083038185875af1925050503d8060008114611006576040519150601f19603f3d011682016040523d82523d6000602084013e61100b565b606091505b509150915061101b868383611026565b925050509392505050565b60608261103b57611036826110b5565b6110ad565b60008251148015611063575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156110a557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161109c9190611274565b60405180910390fd5b8190506110ae565b5b9392505050565b6000815111156110c85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b61110d816110fa565b82525050565b60006020820190506111286000830184611104565b92915050565b600080fd5b61113c816110fa565b811461114757600080fd5b50565b60008135905061115981611133565b92915050565b6000602082840312156111755761117461112e565b5b60006111838482850161114a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111b78261118c565b9050919050565b6111c7816111ac565b82525050565b60006020820190506111e260008301846111be565b92915050565b60006111f38261118c565b9050919050565b6000611205826111e8565b9050919050565b611215816111fa565b811461122057600080fd5b50565b6000813590506112328161120c565b92915050565b60006020828403121561124e5761124d61112e565b5b600061125c84828501611223565b91505092915050565b61126e816111e8565b82525050565b60006020820190506112896000830184611265565b92915050565b6000819050919050565b60006112b46112af6112aa8461118c565b61128f565b61118c565b9050919050565b60006112c682611299565b9050919050565b60006112d8826112bb565b9050919050565b6112e8816112cd565b82525050565b600060208201905061130360008301846112df565b92915050565b611312816111e8565b811461131d57600080fd5b50565b60008135905061132f81611309565b92915050565b60006020828403121561134b5761134a61112e565b5b600061135984828501611320565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061139c826110fa565b91506113a7836110fa565b92508282026113b5816110fa565b915082820484148315176113cc576113cb611362565b5b5092915050565b600082825260208201905092915050565b7f416d6f756e74206973207a65726f210000000000000000000000000000000000600082015250565b600061141a600f836113d3565b9150611425826113e4565b602082019050919050565b600060208201905081810360008301526114498161140d565b9050919050565b60008151905061145f81611133565b92915050565b60006020828403121561147b5761147a61112e565b5b600061148984828501611450565b91505092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636521000000600082015250565b60006114c8601d836113d3565b91506114d382611492565b602082019050919050565b600060208201905081810360008301526114f7816114bb565b9050919050565b60006040820190506115136000830185611265565b6115206020830184611104565b9392505050565b60008115159050919050565b61153c81611527565b811461154757600080fd5b50565b60008151905061155981611533565b92915050565b6000602082840312156115755761157461112e565b5b60006115838482850161154a565b91505092915050565b60006060820190506115a16000830186611265565b6115ae6020830185611265565b6115bb6040830184611104565b949350505050565b600081519050919050565b600081905092915050565b60005b838110156115f75780820151818401526020810190506115dc565b60008484015250505050565b600061160e826115c3565b61161881856115ce565b93506116288185602086016115d9565b80840191505092915050565b60006116408284611603565b91508190509291505056fea2646970667358221220b2f31906d1e79008feb5f3ae7c4e7e6b4a26ab4e1a1b0c3eeae99b08d742503564736f6c63430008150033";

type BSSCrowdSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BSSCrowdSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BSSCrowdSale__factory extends ContractFactory {
  constructor(...args: BSSCrowdSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _bnbRate: BigNumberish,
    _usdtRate: BigNumberish,
    _wallet: AddressLike,
    _icoToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _bnbRate,
      _usdtRate,
      _wallet,
      _icoToken,
      overrides || {}
    );
  }
  override deploy(
    _bnbRate: BigNumberish,
    _usdtRate: BigNumberish,
    _wallet: AddressLike,
    _icoToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _bnbRate,
      _usdtRate,
      _wallet,
      _icoToken,
      overrides || {}
    ) as Promise<
      BSSCrowdSale & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BSSCrowdSale__factory {
    return super.connect(runner) as BSSCrowdSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BSSCrowdSaleInterface {
    return new Interface(_abi) as BSSCrowdSaleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BSSCrowdSale {
    return new Contract(address, _abi, runner) as unknown as BSSCrowdSale;
  }
}
