{"id":"149346aaa2107656ecb8ae644e915959","_format":"hh-sol-build-info-1","solcVersion":"0.8.21","solcLongVersion":"0.8.21+commit.d9974bed","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"./IAccessControlEnumerable.sol\";\nimport {AccessControl} from \"../AccessControl.sol\";\nimport {EnumerableSet} from \"../../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 role => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            _roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            _roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/BSSToken.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\n\r\ncontract BSSToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit {\r\n    constructor()\r\n        ERC20(\"BSSToken\", \"BSS\")\r\n        Ownable(msg.sender)\r\n        ERC20Permit(\"BSSToken\")\r\n    {\r\n        _mint(msg.sender, 1000000000 * 10 ** decimals());\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function _update(address from, address to, uint256 value)\r\n        internal\r\n        override(ERC20, ERC20Pausable)\r\n    {\r\n        super._update(from, to, value);\r\n    }\r\n}"},"contracts/Vault.sol":{"content":"pragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\r\n\r\ncontract Vault is Ownable, AccessControlEnumerable {\r\n    \r\n    constructor() Ownable(_msgSender()) {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n    }\r\n\r\n    IERC20 private token; //set token can deposit or withdraw\r\n    uint256 public maxWithdrawAmount;\r\n    bool public withdrawEnabled;\r\n    bytes32 public constant WITHDRAWER_ROLE = keccak256(\"WITHDRAWER_ROLE\"); //access role\r\n\r\n    modifier onlyWithdrawer() {\r\n        require(\r\n            owner() == _msgSender() || hasRole(WITHDRAWER_ROLE, _msgSender()),\r\n            \"Caller is not a withdrawer\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function setWithdrawEnable(bool _isEnable) public onlyOwner {\r\n        withdrawEnabled = _isEnable;\r\n    }\r\n\r\n    function setMaxWithdrawAmount(uint256 _maxAmount) public onlyOwner {\r\n        maxWithdrawAmount = _maxAmount;\r\n    }\r\n\r\n    function setToken(IERC20 _token) public onlyOwner {\r\n        token = _token;\r\n    }\r\n\r\n    function withdraw(address _to, uint256 _amount) external onlyWithdrawer {\r\n        require(withdrawEnabled, \"Withdraw is not available\");\r\n        require(_amount <= maxWithdrawAmount, \"Exceed maximum amount\");\r\n        token.transfer(_to, _amount);\r\n    }\r\n\r\n    function deposit(uint256 _amount) external {\r\n        require(\r\n            token.balanceOf(msg.sender) >= _amount,\r\n            \"Insufficient account balance\"\r\n        );\r\n        SafeERC20.safeTransferFrom(token, msg.sender, address(this), _amount);\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Vault.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Vault.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[2318],"ERC165":[3758],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2319,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3759,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3758,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,3758,3770,378,2318],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3757],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"235:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"256:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"364:7:1","nodeType":"VariableDeclaration","scope":305,"src":"356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:1","nodeType":"VariableDeclaration","scope":305,"src":"373:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:1"},"src":"317:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"399:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"558:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"586:2:1"},"src":"552:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"595:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"860:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:1","nodeType":"VariableDeclaration","scope":317,"src":"877:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:1","nodeType":"VariableDeclaration","scope":317,"src":"899:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:1","nodeType":"VariableDeclaration","scope":317,"src":"934:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:1"},"src":"854:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"970:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1193:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1205:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1227:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1252:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:1"},"src":"1187:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1282:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1568:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1580:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1602:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1627:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:1"},"src":"1562:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1657:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1763:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1755:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1777:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1769:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1809:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:1"},"scope":378,"src":"1738:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1821:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2040:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2032:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:1"},"scope":378,"src":"2010:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2084:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2355:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2347:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2369:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2361:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2386:0:1"},"scope":378,"src":"2328:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2393:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2649:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2641:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2663:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2655:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2680:0:1"},"scope":378,"src":"2621:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2687:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3213:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3205:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3219:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3255:0:1"},"scope":378,"src":"3183:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"225:3033:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3150:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2318],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":2319,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,2318],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[668],"EnumerableSet":[5542],"IAccessControlEnumerable":[694]},"id":669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:3"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":669,"sourceUnit":695,"src":"155:72:3","symbolAliases":[{"foreign":{"id":529,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"163:24:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"../AccessControl.sol","id":532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":669,"sourceUnit":296,"src":"228:51:3","symbolAliases":[{"foreign":{"id":531,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"236:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../../utils/structs/EnumerableSet.sol","id":534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":669,"sourceUnit":5543,"src":"280:68:3","symbolAliases":[{"foreign":{"id":533,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"288:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":536,"name":"IAccessControlEnumerable","nameLocations":["490:24:3"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"490:24:3"},"id":537,"nodeType":"InheritanceSpecifier","src":"490:24:3"},{"baseName":{"id":538,"name":"AccessControl","nameLocations":["516:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"516:13:3"},"id":539,"nodeType":"InheritanceSpecifier","src":"516:13:3"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"350:94:3","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":668,"linearizedBaseContracts":[668,295,3758,3770,694,378,2318],"name":"AccessControlEnumerable","nameLocation":"463:23:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":543,"libraryName":{"id":540,"name":"EnumerableSet","nameLocations":["542:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":5542,"src":"542:13:3"},"nodeType":"UsingForDirective","src":"536:49:3","typeName":{"id":542,"nodeType":"UserDefinedTypeName","pathNode":{"id":541,"name":"EnumerableSet.AddressSet","nameLocations":["560:13:3","574:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":5255,"src":"560:24:3"},"referencedDeclaration":5255,"src":"560:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":548,"mutability":"mutable","name":"_roleMembers","nameLocation":"649:12:3","nodeType":"VariableDeclaration","scope":668,"src":"591:70:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5255_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":547,"keyName":"role","keyNameLocation":"607:4:3","keyType":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"591:49:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5255_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"EnumerableSet.AddressSet","nameLocations":["615:13:3","629:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":5255,"src":"615:24:3"},"referencedDeclaration":5255,"src":"615:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[62],"body":{"id":569,"nodeType":"Block","src":"820:121:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"837:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":559,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"857:24:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$694_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$694_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"852:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"852:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$694","typeString":"type(contract IAccessControlEnumerable)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"852:42:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"837:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":565,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"922:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":563,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"898:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$668_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"904:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"898:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"837:97:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":556,"id":568,"nodeType":"Return","src":"830:104:3"}]},"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"668:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":570,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"738:17:3","nodeType":"FunctionDefinition","overrides":{"id":553,"nodeType":"OverrideSpecifier","overrides":[],"src":"796:8:3"},"parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"interfaceId","nameLocation":"763:11:3","nodeType":"VariableDeclaration","scope":570,"src":"756:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":550,"name":"bytes4","nodeType":"ElementaryTypeName","src":"756:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"755:20:3"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"814:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":554,"name":"bool","nodeType":"ElementaryTypeName","src":"814:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"813:6:3"},"scope":668,"src":"729:212:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[685],"body":{"id":587,"nodeType":"Block","src":"1616:52:3","statements":[{"expression":{"arguments":[{"id":584,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1655:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":580,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1633:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5255_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":582,"indexExpression":{"id":581,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1646:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1633:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1652:2:3","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5378,"src":"1633:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5255_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$5255_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":579,"id":586,"nodeType":"Return","src":"1626:35:3"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"947:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":588,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1535:13:3","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"role","nameLocation":"1557:4:3","nodeType":"VariableDeclaration","scope":588,"src":"1549:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"index","nameLocation":"1571:5:3","nodeType":"VariableDeclaration","scope":588,"src":"1563:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:29:3"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":588,"src":"1607:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1606:9:3"},"scope":668,"src":"1526:142:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[693],"body":{"id":602,"nodeType":"Block","src":"1916:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":596,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1933:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5255_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":598,"indexExpression":{"id":597,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"1946:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1933:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1952:6:3","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5351,"src":"1933:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5255_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$5255_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":595,"id":601,"nodeType":"Return","src":"1926:34:3"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"1674:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1845:18:3","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"role","nameLocation":"1872:4:3","nodeType":"VariableDeclaration","scope":603,"src":"1864:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1863:14:3"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":603,"src":"1907:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1906:9:3"},"scope":668,"src":"1836:131:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[256],"body":{"id":634,"nodeType":"Block","src":"2161:165:3","statements":[{"assignments":[615],"declarations":[{"constant":false,"id":615,"mutability":"mutable","name":"granted","nameLocation":"2176:7:3","nodeType":"VariableDeclaration","scope":634,"src":"2171:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":614,"name":"bool","nodeType":"ElementaryTypeName","src":"2171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":621,"initialValue":{"arguments":[{"id":618,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2203:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":619,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2209:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":616,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2186:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$668_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2192:10:3","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":256,"src":"2186:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2186:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2171:46:3"},{"condition":{"id":622,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2231:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"IfStatement","src":"2227:69:3","trueBody":{"id":630,"nodeType":"Block","src":"2240:56:3","statements":[{"expression":{"arguments":[{"id":627,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2277:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":623,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2254:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5255_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":625,"indexExpression":{"id":624,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2267:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2254:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2273:3:3","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5282,"src":"2254:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5255_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5255_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2254:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"nodeType":"ExpressionStatement","src":"2254:31:3"}]}},{"expression":{"id":632,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2312:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":613,"id":633,"nodeType":"Return","src":"2305:14:3"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"1973:91:3","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":635,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2078:10:3","nodeType":"FunctionDefinition","overrides":{"id":610,"nodeType":"OverrideSpecifier","overrides":[],"src":"2137:8:3"},"parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"role","nameLocation":"2097:4:3","nodeType":"VariableDeclaration","scope":635,"src":"2089:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2089:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"account","nameLocation":"2111:7:3","nodeType":"VariableDeclaration","scope":635,"src":"2103:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"2103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2088:31:3"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":635,"src":"2155:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":611,"name":"bool","nodeType":"ElementaryTypeName","src":"2155:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2154:6:3"},"scope":668,"src":"2069:257:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[294],"body":{"id":666,"nodeType":"Block","src":"2522:169:3","statements":[{"assignments":[647],"declarations":[{"constant":false,"id":647,"mutability":"mutable","name":"revoked","nameLocation":"2537:7:3","nodeType":"VariableDeclaration","scope":666,"src":"2532:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":646,"name":"bool","nodeType":"ElementaryTypeName","src":"2532:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":653,"initialValue":{"arguments":[{"id":650,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"2565:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":651,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2571:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":648,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2547:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$668_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2553:11:3","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":294,"src":"2547:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2532:47:3"},{"condition":{"id":654,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2593:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"IfStatement","src":"2589:72:3","trueBody":{"id":662,"nodeType":"Block","src":"2602:59:3","statements":[{"expression":{"arguments":[{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2642:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":655,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2616:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5255_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":657,"indexExpression":{"id":656,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"2629:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2616:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2635:6:3","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5309,"src":"2616:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5255_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5255_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2616:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"ExpressionStatement","src":"2616:34:3"}]}},{"expression":{"id":664,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2677:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":645,"id":665,"nodeType":"Return","src":"2670:14:3"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"2332:92:3","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2438:11:3","nodeType":"FunctionDefinition","overrides":{"id":642,"nodeType":"OverrideSpecifier","overrides":[],"src":"2498:8:3"},"parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"role","nameLocation":"2458:4:3","nodeType":"VariableDeclaration","scope":667,"src":"2450:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2450:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"account","nameLocation":"2472:7:3","nodeType":"VariableDeclaration","scope":667,"src":"2464:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"2464:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2449:31:3"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"2516:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":643,"name":"bool","nodeType":"ElementaryTypeName","src":"2516:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2515:6:3"},"scope":668,"src":"2429:262:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":669,"src":"445:2248:3","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"129:2565:3"},"id":3},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[378],"IAccessControlEnumerable":[694]},"id":695,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":670,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:4"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":672,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":695,"sourceUnit":379,"src":"156:53:4","symbolAliases":[{"foreign":{"id":671,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"164:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":674,"name":"IAccessControl","nameLocations":["349:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"349:14:4"},"id":675,"nodeType":"InheritanceSpecifier","src":"349:14:4"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"211:99:4","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":694,"linearizedBaseContracts":[694,378],"name":"IAccessControlEnumerable","nameLocation":"321:24:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"370:574:4","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"958:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"role","nameLocation":"980:4:4","nodeType":"VariableDeclaration","scope":685,"src":"972:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"index","nameLocation":"994:5:4","nodeType":"VariableDeclaration","scope":685,"src":"986:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:29:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"1024:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1023:9:4"},"scope":694,"src":"949:84:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"1039:157:4","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":693,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1210:18:4","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"role","nameLocation":"1237:4:4","nodeType":"VariableDeclaration","scope":693,"src":"1229:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1229:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1228:14:4"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"1266:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:9:4"},"scope":694,"src":"1201:74:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":695,"src":"311:966:4","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"130:1148:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[719]},"id":720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":696,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":719,"linearizedBaseContracts":[719],"name":"IERC5267","nameLocation":"143:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"158:84:5","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":699,"name":"EIP712DomainChanged","nameLocation":"253:19:5","nodeType":"EventDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"272:2:5"},"src":"247:28:5"},{"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"281:140:5","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":718,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:5","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"fields","nameLocation":"517:6:5","nodeType":"VariableDeclaration","scope":718,"src":"510:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":702,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"name","nameLocation":"551:4:5","nodeType":"VariableDeclaration","scope":718,"src":"537:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":704,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"version","nameLocation":"583:7:5","nodeType":"VariableDeclaration","scope":718,"src":"569:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":706,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"chainId","nameLocation":"612:7:5","nodeType":"VariableDeclaration","scope":718,"src":"604:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:5","nodeType":"VariableDeclaration","scope":718,"src":"633:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"salt","nameLocation":"680:4:5","nodeType":"VariableDeclaration","scope":718,"src":"672:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"extensions","nameLocation":"715:10:5","nodeType":"VariableDeclaration","scope":718,"src":"698:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":715,"nodeType":"ArrayTypeName","src":"698:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:5"},"scope":719,"src":"426:310:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":720,"src":"133:605:5","usedErrors":[],"usedEvents":[699]}],"src":"107:632:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[856],"IERC20Errors":[761],"IERC721Errors":[809]},"id":857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":721,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"138:139:6","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":761,"linearizedBaseContracts":[761],"name":"IERC20Errors","nameLocation":"288:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"307:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":731,"name":"ERC20InsufficientBalance","nameLocation":"627:24:6","nodeType":"ErrorDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"sender","nameLocation":"660:6:6","nodeType":"VariableDeclaration","scope":731,"src":"652:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"balance","nameLocation":"676:7:6","nodeType":"VariableDeclaration","scope":731,"src":"668:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"needed","nameLocation":"693:6:6","nodeType":"VariableDeclaration","scope":731,"src":"685:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:6"},"src":"621:80:6"},{"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"707:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":736,"name":"ERC20InvalidSender","nameLocation":"870:18:6","nodeType":"ErrorDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"sender","nameLocation":"897:6:6","nodeType":"VariableDeclaration","scope":736,"src":"889:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:6"},"src":"864:41:6"},{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"911:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":741,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:6","nodeType":"ErrorDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:6","nodeType":"VariableDeclaration","scope":741,"src":"1102:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:6"},"src":"1075:45:6"},{"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"1126:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":750,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:6","nodeType":"ErrorDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"spender","nameLocation":"1517:7:6","nodeType":"VariableDeclaration","scope":750,"src":"1509:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:6","nodeType":"VariableDeclaration","scope":750,"src":"1526:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"needed","nameLocation":"1553:6:6","nodeType":"VariableDeclaration","scope":750,"src":"1545:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:6"},"src":"1476:85:6"},{"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"1567:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":755,"name":"ERC20InvalidApprover","nameLocation":"1752:20:6","nodeType":"ErrorDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"approver","nameLocation":"1781:8:6","nodeType":"VariableDeclaration","scope":755,"src":"1773:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:6"},"src":"1746:45:6"},{"documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"1797:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":760,"name":"ERC20InvalidSpender","nameLocation":"2003:19:6","nodeType":"ErrorDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"spender","nameLocation":"2031:7:6","nodeType":"VariableDeclaration","scope":760,"src":"2023:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:6"},"src":"1997:43:6"}],"scope":857,"src":"278:1764:6","usedErrors":[731,736,741,750,755,760],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"2044:141:6","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":809,"linearizedBaseContracts":[809],"name":"IERC721Errors","nameLocation":"2196:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"2216:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":767,"name":"ERC721InvalidOwner","nameLocation":"2446:18:6","nodeType":"ErrorDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"owner","nameLocation":"2473:5:6","nodeType":"VariableDeclaration","scope":767,"src":"2465:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:6"},"src":"2440:40:6"},{"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"2486:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":772,"name":"ERC721NonexistentToken","nameLocation":"2629:22:6","nodeType":"ErrorDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:6","nodeType":"VariableDeclaration","scope":772,"src":"2652:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:6"},"src":"2623:46:6"},{"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"2675:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":781,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:6","nodeType":"ErrorDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"sender","nameLocation":"3004:6:6","nodeType":"VariableDeclaration","scope":781,"src":"2996:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":777,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:6","nodeType":"VariableDeclaration","scope":781,"src":"3012:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"owner","nameLocation":"3037:5:6","nodeType":"VariableDeclaration","scope":781,"src":"3029:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:6"},"src":"2969:75:6"},{"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"3050:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":786,"name":"ERC721InvalidSender","nameLocation":"3213:19:6","nodeType":"ErrorDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"sender","nameLocation":"3241:6:6","nodeType":"VariableDeclaration","scope":786,"src":"3233:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:6"},"src":"3207:42:6"},{"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"3255:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":791,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:6","nodeType":"ErrorDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:6","nodeType":"VariableDeclaration","scope":791,"src":"3447:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:6"},"src":"3419:46:6"},{"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"3471:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":798,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:6","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"operator","nameLocation":"3764:8:6","nodeType":"VariableDeclaration","scope":798,"src":"3756:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:6","nodeType":"VariableDeclaration","scope":798,"src":"3774:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:6"},"src":"3723:68:6"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"3797:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":803,"name":"ERC721InvalidApprover","nameLocation":"3982:21:6","nodeType":"ErrorDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"approver","nameLocation":"4012:8:6","nodeType":"VariableDeclaration","scope":803,"src":"4004:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:6"},"src":"3976:46:6"},{"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"4028:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":808,"name":"ERC721InvalidOperator","nameLocation":"4236:21:6","nodeType":"ErrorDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"operator","nameLocation":"4266:8:6","nodeType":"VariableDeclaration","scope":808,"src":"4258:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:6"},"src":"4230:46:6"}],"scope":857,"src":"2186:2092:6","usedErrors":[767,772,781,786,791,798,803,808],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"4280:143:6","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":856,"linearizedBaseContracts":[856],"name":"IERC1155Errors","nameLocation":"4434:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"4455:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":821,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:6","nodeType":"ErrorDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"sender","nameLocation":"4862:6:6","nodeType":"VariableDeclaration","scope":821,"src":"4854:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"balance","nameLocation":"4878:7:6","nodeType":"VariableDeclaration","scope":821,"src":"4870:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"needed","nameLocation":"4895:6:6","nodeType":"VariableDeclaration","scope":821,"src":"4887:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:6","nodeType":"VariableDeclaration","scope":821,"src":"4903:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:6"},"src":"4821:99:6"},{"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"4926:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":826,"name":"ERC1155InvalidSender","nameLocation":"5089:20:6","nodeType":"ErrorDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"sender","nameLocation":"5118:6:6","nodeType":"VariableDeclaration","scope":826,"src":"5110:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:6"},"src":"5083:43:6"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"5132:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":831,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:6","nodeType":"ErrorDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:6","nodeType":"VariableDeclaration","scope":831,"src":"5325:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:6"},"src":"5296:47:6"},{"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"5349:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":838,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:6","nodeType":"ErrorDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"operator","nameLocation":"5653:8:6","nodeType":"VariableDeclaration","scope":838,"src":"5645:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"owner","nameLocation":"5671:5:6","nodeType":"VariableDeclaration","scope":838,"src":"5663:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:6"},"src":"5610:68:6"},{"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"5684:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":843,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:6","nodeType":"ErrorDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"approver","nameLocation":"5900:8:6","nodeType":"VariableDeclaration","scope":843,"src":"5892:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:6"},"src":"5863:47:6"},{"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"5916:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":848,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:6","nodeType":"ErrorDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"operator","nameLocation":"6155:8:6","nodeType":"VariableDeclaration","scope":848,"src":"6147:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:6"},"src":"6118:47:6"},{"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"6171:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":855,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:6","nodeType":"ErrorDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:6","nodeType":"VariableDeclaration","scope":855,"src":"6488:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:6","nodeType":"VariableDeclaration","scope":855,"src":"6507:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:6"},"src":"6456:73:6"}],"scope":857,"src":"4424:2107:6","usedErrors":[821,826,831,838,843,848,855],"usedEvents":[]}],"src":"112:6420:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2318],"ERC20":[1371],"IERC20":[1449],"IERC20Errors":[761],"IERC20Metadata":[1709]},"id":1372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":858,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1372,"sourceUnit":1450,"src":"131:36:7","symbolAliases":[{"foreign":{"id":859,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"139:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1372,"sourceUnit":1710,"src":"168:63:7","symbolAliases":[{"foreign":{"id":861,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"176:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1372,"sourceUnit":2319,"src":"232:48:7","symbolAliases":[{"foreign":{"id":863,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"240:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1372,"sourceUnit":857,"src":"281:65:7","symbolAliases":[{"foreign":{"id":865,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"289:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":868,"name":"Context","nameLocations":["1428:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"1428:7:7"},"id":869,"nodeType":"InheritanceSpecifier","src":"1428:7:7"},{"baseName":{"id":870,"name":"IERC20","nameLocations":["1437:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"1437:6:7"},"id":871,"nodeType":"InheritanceSpecifier","src":"1437:6:7"},{"baseName":{"id":872,"name":"IERC20Metadata","nameLocations":["1445:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1709,"src":"1445:14:7"},"id":873,"nodeType":"InheritanceSpecifier","src":"1445:14:7"},{"baseName":{"id":874,"name":"IERC20Errors","nameLocations":["1461:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"1461:12:7"},"id":875,"nodeType":"InheritanceSpecifier","src":"1461:12:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"348:1052:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1371,"linearizedBaseContracts":[1371,761,1709,1449,2318],"name":"ERC20","nameLocation":"1419:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":879,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:7","nodeType":"VariableDeclaration","scope":1371,"src":"1480:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":878,"keyName":"account","keyNameLocation":"1496:7:7","keyType":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":885,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:7","nodeType":"VariableDeclaration","scope":1371,"src":"1540:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":884,"keyName":"account","keyNameLocation":"1556:7:7","keyType":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":883,"keyName":"spender","keyNameLocation":"1583:7:7","keyType":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":887,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:7","nodeType":"VariableDeclaration","scope":1371,"src":"1630:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":889,"mutability":"mutable","name":"_name","nameLocation":"1680:5:7","nodeType":"VariableDeclaration","scope":1371,"src":"1665:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":888,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":891,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:7","nodeType":"VariableDeclaration","scope":1371,"src":"1691:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":890,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":907,"nodeType":"Block","src":"1952:57:7","statements":[{"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":899,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"1962:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":900,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1970:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":902,"nodeType":"ExpressionStatement","src":"1962:13:7"},{"expression":{"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":903,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"1985:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":904,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1995:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":906,"nodeType":"ExpressionStatement","src":"1985:17:7"}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"1720:171:7","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":908,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"name_","nameLocation":"1922:5:7","nodeType":"VariableDeclaration","scope":908,"src":"1908:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:7","nodeType":"VariableDeclaration","scope":908,"src":"1929:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":895,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:7"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"1952:0:7"},"scope":1371,"src":"1896:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1696],"body":{"id":916,"nodeType":"Block","src":"2134:29:7","statements":[{"expression":{"id":914,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"2151:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":913,"id":915,"nodeType":"Return","src":"2144:12:7"}]},"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"2015:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":917,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:7","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"2087:2:7"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"2119:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":911,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:7"},"scope":1371,"src":"2074:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1702],"body":{"id":925,"nodeType":"Block","src":"2338:31:7","statements":[{"expression":{"id":923,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2355:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":922,"id":924,"nodeType":"Return","src":"2348:14:7"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"2169:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:7","nodeType":"FunctionDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"2291:2:7"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"2323:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":920,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:7"},"scope":1371,"src":"2276:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1708],"body":{"id":934,"nodeType":"Block","src":"3058:26:7","statements":[{"expression":{"hexValue":"3138","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":931,"id":933,"nodeType":"Return","src":"3068:9:7"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"2375:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":935,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:7","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"3019:2:7"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":935,"src":"3051:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":929,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:7"},"scope":1371,"src":"3002:82:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1398],"body":{"id":943,"nodeType":"Block","src":"3205:36:7","statements":[{"expression":{"id":941,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3222:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":940,"id":942,"nodeType":"Return","src":"3215:19:7"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"3090:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":944,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:7","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"3164:2:7"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"3196:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:7"},"scope":1371,"src":"3144:97:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1406],"body":{"id":956,"nodeType":"Block","src":"3373:42:7","statements":[{"expression":{"baseExpression":{"id":952,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"3390:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":954,"indexExpression":{"id":953,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3400:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":951,"id":955,"nodeType":"Return","src":"3383:25:7"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"3247:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":957,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:7","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"account","nameLocation":"3326:7:7","nodeType":"VariableDeclaration","scope":957,"src":"3318:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:7"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":957,"src":"3364:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:7"},"scope":1371,"src":"3299:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1416],"body":{"id":980,"nodeType":"Block","src":"3685:103:7","statements":[{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"owner","nameLocation":"3703:5:7","nodeType":"VariableDeclaration","scope":980,"src":"3695:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":971,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":969,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"3711:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:7"},{"expression":{"arguments":[{"id":973,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"3743:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"3750:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3754:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"3733:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"ExpressionStatement","src":"3733:27:7"},{"expression":{"hexValue":"74727565","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":966,"id":979,"nodeType":"Return","src":"3770:11:7"}]},"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"3421:184:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":981,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:7","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"to","nameLocation":"3636:2:7","nodeType":"VariableDeclaration","scope":981,"src":"3628:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"value","nameLocation":"3648:5:7","nodeType":"VariableDeclaration","scope":981,"src":"3640:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:7"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":981,"src":"3679:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":964,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:7"},"scope":1371,"src":"3610:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1426],"body":{"id":997,"nodeType":"Block","src":"3935:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":991,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"3952:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":993,"indexExpression":{"id":992,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3964:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":995,"indexExpression":{"id":994,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"3971:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":990,"id":996,"nodeType":"Return","src":"3945:34:7"}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"3794:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":998,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:7","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"owner","nameLocation":"3873:5:7","nodeType":"VariableDeclaration","scope":998,"src":"3865:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"spender","nameLocation":"3888:7:7","nodeType":"VariableDeclaration","scope":998,"src":"3880:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:7"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"3926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:7"},"scope":1371,"src":"3846:140:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1436],"body":{"id":1021,"nodeType":"Block","src":"4372:107:7","statements":[{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"owner","nameLocation":"4390:5:7","nodeType":"VariableDeclaration","scope":1021,"src":"4382:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1012,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1010,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"4398:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:7"},{"expression":{"arguments":[{"id":1014,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4429:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1015,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"4436:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"4445:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1013,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1262,1322],"referencedDeclaration":1262,"src":"4420:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"4420:31:7"},{"expression":{"hexValue":"74727565","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1007,"id":1020,"nodeType":"Return","src":"4461:11:7"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"3992:296:7","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:7","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"spender","nameLocation":"4318:7:7","nodeType":"VariableDeclaration","scope":1022,"src":"4310:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"value","nameLocation":"4335:5:7","nodeType":"VariableDeclaration","scope":1022,"src":"4327:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:7"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1022,"src":"4366:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1005,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:7"},"scope":1371,"src":"4293:186:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1448],"body":{"id":1053,"nodeType":"Block","src":"5132:151:7","statements":[{"assignments":[1035],"declarations":[{"constant":false,"id":1035,"mutability":"mutable","name":"spender","nameLocation":"5150:7:7","nodeType":"VariableDeclaration","scope":1053,"src":"5142:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1038,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1036,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5160:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:7"},{"expression":{"arguments":[{"id":1040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"5198:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5204:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5213:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1039,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"5182:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"ExpressionStatement","src":"5182:37:7"},{"expression":{"arguments":[{"id":1046,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"5239:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1047,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"5245:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5249:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1045,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"5229:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"5229:26:7"},{"expression":{"hexValue":"74727565","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1033,"id":1052,"nodeType":"Return","src":"5265:11:7"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"4485:549:7","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:7","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"from","nameLocation":"5069:4:7","nodeType":"VariableDeclaration","scope":1054,"src":"5061:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"to","nameLocation":"5083:2:7","nodeType":"VariableDeclaration","scope":1054,"src":"5075:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"value","nameLocation":"5095:5:7","nodeType":"VariableDeclaration","scope":1054,"src":"5087:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:7"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"5126:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:7"},"scope":1371,"src":"5039:244:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1100,"nodeType":"Block","src":"5725:231:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1064,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5739:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:7","typeDescriptions":{}}},"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1078,"nodeType":"IfStatement","src":"5735:86:7","trueBody":{"id":1077,"nodeType":"Block","src":"5759:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:7","typeDescriptions":{}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1070,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"5780:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"RevertStatement","src":"5773:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"5834:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:7","typeDescriptions":{}}},"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1093,"nodeType":"IfStatement","src":"5830:86:7","trueBody":{"id":1092,"nodeType":"Block","src":"5852:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:7","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5873:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1091,"nodeType":"RevertStatement","src":"5866:39:7"}]}},{"expression":{"arguments":[{"id":1095,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5933:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"5939:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"5943:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1094,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5925:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"5925:24:7"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"5289:362:7","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:7","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"from","nameLocation":"5683:4:7","nodeType":"VariableDeclaration","scope":1101,"src":"5675:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"to","nameLocation":"5697:2:7","nodeType":"VariableDeclaration","scope":1101,"src":"5689:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"value","nameLocation":"5709:5:7","nodeType":"VariableDeclaration","scope":1101,"src":"5701:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:7"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"5725:0:7"},"scope":1371,"src":"5656:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1177,"nodeType":"Block","src":"6346:1032:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6360:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:7","typeDescriptions":{}}},"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1148,"nodeType":"Block","src":"6534:362:7","statements":[{"assignments":[1123],"declarations":[{"constant":false,"id":1123,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:7","nodeType":"VariableDeclaration","scope":1148,"src":"6548:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1127,"initialValue":{"baseExpression":{"id":1124,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"6570:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1126,"indexExpression":{"id":1125,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6580:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6603:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"6617:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1138,"nodeType":"IfStatement","src":"6599:115:7","trueBody":{"id":1137,"nodeType":"Block","src":"6624:90:7","statements":[{"errorCall":{"arguments":[{"id":1132,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6674:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6680:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"6693:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1131,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"6649:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"RevertStatement","src":"6642:57:7"}]}},{"id":1147,"nodeType":"UncheckedBlock","src":"6727:159:7","statements":[{"expression":{"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1139,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"6834:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1141,"indexExpression":{"id":1140,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6844:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1142,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6852:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"6866:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1146,"nodeType":"ExpressionStatement","src":"6834:37:7"}]}]},"id":1149,"nodeType":"IfStatement","src":"6356:540:7","trueBody":{"id":1121,"nodeType":"Block","src":"6380:148:7","statements":[{"expression":{"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1117,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6496:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"6512:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1120,"nodeType":"ExpressionStatement","src":"6496:21:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6910:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:7","typeDescriptions":{}}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1169,"nodeType":"Block","src":"7125:206:7","statements":[{"id":1168,"nodeType":"UncheckedBlock","src":"7139:182:7","statements":[{"expression":{"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1162,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"7284:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1164,"indexExpression":{"id":1163,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"7294:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"7301:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1167,"nodeType":"ExpressionStatement","src":"7284:22:7"}]}]},"id":1170,"nodeType":"IfStatement","src":"6906:425:7","trueBody":{"id":1161,"nodeType":"Block","src":"6928:191:7","statements":[{"id":1160,"nodeType":"UncheckedBlock","src":"6942:167:7","statements":[{"expression":{"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1156,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"7073:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"7089:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1159,"nodeType":"ExpressionStatement","src":"7073:21:7"}]}]}},{"eventCall":{"arguments":[{"id":1172,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"7355:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1173,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"7361:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"7365:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1171,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"7346:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"EmitStatement","src":"7341:30:7"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"5962:304:7","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:7","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"from","nameLocation":"6296:4:7","nodeType":"VariableDeclaration","scope":1178,"src":"6288:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"to","nameLocation":"6310:2:7","nodeType":"VariableDeclaration","scope":1178,"src":"6302:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"value","nameLocation":"6322:5:7","nodeType":"VariableDeclaration","scope":1178,"src":"6314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:7"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"6346:0:7"},"scope":1371,"src":"6271:1107:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"7777:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7791:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:7","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"7787:91:7","trueBody":{"id":1199,"nodeType":"Block","src":"7814:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:7","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1192,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"7835:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"RevertStatement","src":"7828:39:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:7","typeDescriptions":{}}},"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7907:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7916:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1201,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"7887:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"7887:35:7"}]},"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"7384:332:7","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:7","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"account","nameLocation":"7744:7:7","nodeType":"VariableDeclaration","scope":1211,"src":"7736:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"value","nameLocation":"7761:5:7","nodeType":"VariableDeclaration","scope":1211,"src":"7753:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:7"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[],"src":"7777:0:7"},"scope":1371,"src":"7721:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1243,"nodeType":"Block","src":"8303:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"8317:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:7","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1233,"nodeType":"IfStatement","src":"8313:89:7","trueBody":{"id":1232,"nodeType":"Block","src":"8340:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:7","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1225,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"8361:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1231,"nodeType":"RevertStatement","src":"8354:37:7"}]}},{"expression":{"arguments":[{"id":1235,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"8419:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:7","typeDescriptions":{}}},"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"8440:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1234,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8411:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"ExpressionStatement","src":"8411:35:7"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"7935:307:7","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:7","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"account","nameLocation":"8270:7:7","nodeType":"VariableDeclaration","scope":1244,"src":"8262:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"value","nameLocation":"8287:5:7","nodeType":"VariableDeclaration","scope":1244,"src":"8279:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:7"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"8303:0:7"},"scope":1371,"src":"8247:206:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1261,"nodeType":"Block","src":"9063:54:7","statements":[{"expression":{"arguments":[{"id":1255,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"9082:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1256,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"9089:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"9098:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1254,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1262,1322],"referencedDeclaration":1322,"src":"9073:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1260,"nodeType":"ExpressionStatement","src":"9073:37:7"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"8459:525:7","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1262,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:7","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"owner","nameLocation":"9015:5:7","nodeType":"VariableDeclaration","scope":1262,"src":"9007:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"spender","nameLocation":"9030:7:7","nodeType":"VariableDeclaration","scope":1262,"src":"9022:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"value","nameLocation":"9047:5:7","nodeType":"VariableDeclaration","scope":1262,"src":"9039:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:7"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"9063:0:7"},"scope":1371,"src":"8989:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1321,"nodeType":"Block","src":"10047:334:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"10061:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:7","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1288,"nodeType":"IfStatement","src":"10057:89:7","trueBody":{"id":1287,"nodeType":"Block","src":"10082:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:7","typeDescriptions":{}}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1280,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10103:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"RevertStatement","src":"10096:39:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"10159:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:7","typeDescriptions":{}}},"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1303,"nodeType":"IfStatement","src":"10155:90:7","trueBody":{"id":1302,"nodeType":"Block","src":"10182:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:7","typeDescriptions":{}}},"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1295,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"10203:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1301,"nodeType":"RevertStatement","src":"10196:38:7"}]}},{"expression":{"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1304,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"10254:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1307,"indexExpression":{"id":1305,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"10266:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1308,"indexExpression":{"id":1306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"10273:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"10284:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ExpressionStatement","src":"10254:35:7"},{"condition":{"id":1312,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"10303:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"nodeType":"IfStatement","src":"10299:76:7","trueBody":{"id":1319,"nodeType":"Block","src":"10314:61:7","statements":[{"eventCall":{"arguments":[{"id":1314,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"10342:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"10349:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"10358:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1313,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"10333:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"EmitStatement","src":"10328:36:7"}]}}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"9123:821:7","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:7","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"owner","nameLocation":"9975:5:7","nodeType":"VariableDeclaration","scope":1322,"src":"9967:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"spender","nameLocation":"9990:7:7","nodeType":"VariableDeclaration","scope":1322,"src":"9982:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"value","nameLocation":"10007:5:7","nodeType":"VariableDeclaration","scope":1322,"src":"9999:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:7","nodeType":"VariableDeclaration","scope":1322,"src":"10014:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1270,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:7"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[],"src":"10047:0:7"},"scope":1371,"src":"9949:432:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1369,"nodeType":"Block","src":"10752:388:7","statements":[{"assignments":[1333],"declarations":[{"constant":false,"id":1333,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:7","nodeType":"VariableDeclaration","scope":1369,"src":"10762:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1338,"initialValue":{"arguments":[{"id":1335,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10799:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1336,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"10806:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1334,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10789:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10828:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:7","memberName":"max","nodeType":"MemberAccess","src":"10848:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1368,"nodeType":"IfStatement","src":"10824:310:7","trueBody":{"id":1367,"nodeType":"Block","src":"10867:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10885:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10904:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1356,"nodeType":"IfStatement","src":"10881:130:7","trueBody":{"id":1355,"nodeType":"Block","src":"10911:100:7","statements":[{"errorCall":{"arguments":[{"id":1350,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"10963:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1351,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10972:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10990:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10936:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"RevertStatement","src":"10929:67:7"}]}},{"id":1366,"nodeType":"UncheckedBlock","src":"11024:100:7","statements":[{"expression":{"arguments":[{"id":1358,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"11061:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"11068:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1360,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"11077:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11096:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1357,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1262,1322],"referencedDeclaration":1322,"src":"11052:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"ExpressionStatement","src":"11052:57:7"}]}]}}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"10387:271:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1370,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:7","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"owner","nameLocation":"10696:5:7","nodeType":"VariableDeclaration","scope":1370,"src":"10688:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"spender","nameLocation":"10711:7:7","nodeType":"VariableDeclaration","scope":1370,"src":"10703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"value","nameLocation":"10728:5:7","nodeType":"VariableDeclaration","scope":1370,"src":"10720:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:7"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"10752:0:7"},"scope":1371,"src":"10663:477:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1372,"src":"1401:9741:7","usedErrors":[731,736,741,750,755,760],"usedEvents":[1383,1392]}],"src":"105:11038:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1449]},"id":1450,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1373,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"132:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1449,"linearizedBaseContracts":[1449],"name":"IERC20","nameLocation":"213:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"226:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1383,"name":"Transfer","nameLocation":"395:8:8","nodeType":"EventDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:8","nodeType":"VariableDeclaration","scope":1383,"src":"404:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1379,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:8","nodeType":"VariableDeclaration","scope":1383,"src":"426:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:8","nodeType":"VariableDeclaration","scope":1383,"src":"446:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:8"},"src":"389:72:8"},{"anonymous":false,"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"467:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1392,"name":"Approval","nameLocation":"626:8:8","nodeType":"EventDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:8","nodeType":"VariableDeclaration","scope":1392,"src":"635:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:8","nodeType":"VariableDeclaration","scope":1392,"src":"658:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:8","nodeType":"VariableDeclaration","scope":1392,"src":"683:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:8"},"src":"620:78:8"},{"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"704:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1398,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1398,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":1449,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"835:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1406,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:8","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"account","nameLocation":"938:7:8","nodeType":"VariableDeclaration","scope":1406,"src":"930:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:8"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1406,"src":"970:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:8"},"scope":1449,"src":"911:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"985:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1416,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:8","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"to","nameLocation":"1229:2:8","nodeType":"VariableDeclaration","scope":1416,"src":"1221:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"value","nameLocation":"1241:5:8","nodeType":"VariableDeclaration","scope":1416,"src":"1233:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:8"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"1266:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:8"},"scope":1449,"src":"1203:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"1278:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1426,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:8","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"owner","nameLocation":"1574:5:8","nodeType":"VariableDeclaration","scope":1426,"src":"1566:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"spender","nameLocation":"1589:7:8","nodeType":"VariableDeclaration","scope":1426,"src":"1581:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:8"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"1621:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:8"},"scope":1449,"src":"1547:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"1636:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1436,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:8","nodeType":"FunctionDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"spender","nameLocation":"2333:7:8","nodeType":"VariableDeclaration","scope":1436,"src":"2325:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"value","nameLocation":"2350:5:8","nodeType":"VariableDeclaration","scope":1436,"src":"2342:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:8"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1436,"src":"2375:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1433,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:8"},"scope":1449,"src":"2308:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"2387:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1448,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:8","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"from","nameLocation":"2719:4:8","nodeType":"VariableDeclaration","scope":1448,"src":"2711:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"to","nameLocation":"2733:2:8","nodeType":"VariableDeclaration","scope":1448,"src":"2725:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"value","nameLocation":"2745:5:8","nodeType":"VariableDeclaration","scope":1448,"src":"2737:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:8"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1448,"src":"2770:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1445,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:8"},"scope":1449,"src":"2689:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1450,"src":"203:2575:8","usedErrors":[],"usedEvents":[1383,1392]}],"src":"106:2673:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2318],"ERC20":[1371],"ERC20Burnable":[1495]},"id":1496,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1451,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1496,"sourceUnit":1372,"src":"150:35:9","symbolAliases":[{"foreign":{"id":1452,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"158:5:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1496,"sourceUnit":2319,"src":"186:51:9","symbolAliases":[{"foreign":{"id":1454,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"194:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1457,"name":"Context","nameLocations":["483:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"483:7:9"},"id":1458,"nodeType":"InheritanceSpecifier","src":"483:7:9"},{"baseName":{"id":1459,"name":"ERC20","nameLocations":["492:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"492:5:9"},"id":1460,"nodeType":"InheritanceSpecifier","src":"492:5:9"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"239:208:9","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1495,"linearizedBaseContracts":[1495,1371,761,1709,1449,2318],"name":"ERC20Burnable","nameLocation":"466:13:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1472,"nodeType":"Block","src":"662:43:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1467,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"678:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"692:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1466,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1471,"nodeType":"ExpressionStatement","src":"672:26:9"}]},"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"504:109:9","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:9","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"640:5:9","nodeType":"VariableDeclaration","scope":1473,"src":"632:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:9"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"662:0:9"},"scope":1495,"src":"618:87:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1493,"nodeType":"Block","src":"1086:93:9","statements":[{"expression":{"arguments":[{"id":1482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1112:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1135:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"1096:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1487,"nodeType":"ExpressionStatement","src":"1096:45:9"},{"expression":{"arguments":[{"id":1489,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1157:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1166:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1488,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"1151:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1492,"nodeType":"ExpressionStatement","src":"1151:21:9"}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"711:305:9","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:9","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"account","nameLocation":"1047:7:9","nodeType":"VariableDeclaration","scope":1494,"src":"1039:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"value","nameLocation":"1064:5:9","nodeType":"VariableDeclaration","scope":1494,"src":"1056:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:9"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"1086:0:9"},"scope":1495,"src":"1021:158:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1496,"src":"448:733:9","usedErrors":[731,736,741,750,755,760],"usedEvents":[1383,1392]}],"src":"124:1058:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1371],"ERC20Pausable":[1529],"Pausable":[2503]},"id":1530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1497,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1530,"sourceUnit":1372,"src":"150:35:10","symbolAliases":[{"foreign":{"id":1498,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"158:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1530,"sourceUnit":2504,"src":"186:53:10","symbolAliases":[{"foreign":{"id":1500,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"194:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1503,"name":"ERC20","nameLocations":["964:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"964:5:10"},"id":1504,"nodeType":"InheritanceSpecifier","src":"964:5:10"},{"baseName":{"id":1505,"name":"Pausable","nameLocations":["971:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2503,"src":"971:8:10"},"id":1506,"nodeType":"InheritanceSpecifier","src":"971:8:10"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"241:687:10","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1529,"linearizedBaseContracts":[1529,2503,1371,761,1709,1449,2318],"name":"ERC20Pausable","nameLocation":"947:13:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1178],"body":{"id":1527,"nodeType":"Block","src":"1210:47:10","statements":[{"expression":{"arguments":[{"id":1522,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"1234:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1523,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"1240:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1244:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1519,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1220:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1529_$","typeString":"type(contract super ERC20Pausable)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1226:7:10","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1220:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1526,"nodeType":"ExpressionStatement","src":"1220:30:10"}]},"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"986:121:10","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1528,"implemented":true,"kind":"function","modifiers":[{"id":1517,"kind":"modifierInvocation","modifierName":{"id":1516,"name":"whenNotPaused","nameLocations":["1196:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"1196:13:10"},"nodeType":"ModifierInvocation","src":"1196:13:10"}],"name":"_update","nameLocation":"1121:7:10","nodeType":"FunctionDefinition","overrides":{"id":1515,"nodeType":"OverrideSpecifier","overrides":[],"src":"1187:8:10"},"parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"from","nameLocation":"1137:4:10","nodeType":"VariableDeclaration","scope":1528,"src":"1129:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"to","nameLocation":"1151:2:10","nodeType":"VariableDeclaration","scope":1528,"src":"1143:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"value","nameLocation":"1163:5:10","nodeType":"VariableDeclaration","scope":1528,"src":"1155:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1128:41:10"},"returnParameters":{"id":1518,"nodeType":"ParameterList","parameters":[],"src":"1210:0:10"},"scope":1529,"src":"1112:145:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1530,"src":"929:330:10","usedErrors":[731,736,741,750,755,760,2408,2411],"usedEvents":[1383,1392,2400,2405]}],"src":"124:1136:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3433],"EIP712":[3660],"ERC20":[1371],"ERC20Permit":[1683],"IERC20Permit":[1745],"Nonces":[2386]},"id":1684,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1531,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1684,"sourceUnit":1746,"src":"148:48:11","symbolAliases":[{"foreign":{"id":1532,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"156:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1684,"sourceUnit":1372,"src":"197:35:11","symbolAliases":[{"foreign":{"id":1534,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"205:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1684,"sourceUnit":3434,"src":"233:60:11","symbolAliases":[{"foreign":{"id":1536,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"241:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1684,"sourceUnit":3661,"src":"294:62:11","symbolAliases":[{"foreign":{"id":1538,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"302:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1684,"sourceUnit":2387,"src":"357:49:11","symbolAliases":[{"foreign":{"id":1540,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"365:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1543,"name":"ERC20","nameLocations":["929:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"929:5:11"},"id":1544,"nodeType":"InheritanceSpecifier","src":"929:5:11"},{"baseName":{"id":1545,"name":"IERC20Permit","nameLocations":["936:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1745,"src":"936:12:11"},"id":1546,"nodeType":"InheritanceSpecifier","src":"936:12:11"},{"baseName":{"id":1547,"name":"EIP712","nameLocations":["950:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":3660,"src":"950:6:11"},"id":1548,"nodeType":"InheritanceSpecifier","src":"950:6:11"},{"baseName":{"id":1549,"name":"Nonces","nameLocations":["958:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2386,"src":"958:6:11"},"id":1550,"nodeType":"InheritanceSpecifier","src":"958:6:11"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"408:487:11","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1683,"linearizedBaseContracts":[1683,2386,3660,719,1745,1371,761,1709,1449,2318],"name":"ERC20Permit","nameLocation":"914:11:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1555,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:11","nodeType":"VariableDeclaration","scope":1683,"src":"971:146:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1552,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1124:52:11","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1560,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:11","nodeType":"ErrorDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:11","nodeType":"VariableDeclaration","scope":1560,"src":"1211:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:11"},"src":"1181:48:11"},{"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"1235:45:11","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1567,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:11","nodeType":"ErrorDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"signer","nameLocation":"1320:6:11","nodeType":"VariableDeclaration","scope":1567,"src":"1312:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1562,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1565,"mutability":"mutable","name":"owner","nameLocation":"1336:5:11","nodeType":"VariableDeclaration","scope":1567,"src":"1328:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:11"},"src":"1285:58:11"},{"body":{"id":1577,"nodeType":"Block","src":"1624:2:11","statements":[]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1349:220:11","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1578,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1573,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"1613:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1575,"kind":"baseConstructorSpecifier","modifierName":{"id":1572,"name":"EIP712","nameLocations":["1606:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":3660,"src":"1606:6:11"},"nodeType":"ModifierInvocation","src":"1606:17:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"name","nameLocation":"1600:4:11","nodeType":"VariableDeclaration","scope":1578,"src":"1586:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1569,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:11"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[],"src":"1624:0:11"},"scope":1683,"src":"1574:52:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1730],"body":{"id":1654,"nodeType":"Block","src":"1869:483:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1596,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1598,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1901:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1605,"nodeType":"IfStatement","src":"1879:97:11","trueBody":{"id":1604,"nodeType":"Block","src":"1911:65:11","statements":[{"errorCall":{"arguments":[{"id":1601,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1956:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1600,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"1932:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"RevertStatement","src":"1925:40:11"}]}},{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:11","nodeType":"VariableDeclaration","scope":1654,"src":"1986:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1621,"initialValue":{"arguments":[{"arguments":[{"id":1611,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"2028:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1612,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2045:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1613,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2052:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"2061:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1616,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2078:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1615,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"2068:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1618,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"2086:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1609,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:11","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1608,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:11"},{"assignments":[1623],"declarations":[{"constant":false,"id":1623,"mutability":"mutable","name":"hash","nameLocation":"2115:4:11","nodeType":"VariableDeclaration","scope":1654,"src":"2107:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1627,"initialValue":{"arguments":[{"id":1625,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2139:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1624,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"2122:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:11"},{"assignments":[1629],"declarations":[{"constant":false,"id":1629,"mutability":"mutable","name":"signer","nameLocation":"2169:6:11","nodeType":"VariableDeclaration","scope":1654,"src":"2161:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1637,"initialValue":{"arguments":[{"id":1632,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2192:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1633,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2198:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1634,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"2201:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1635,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"2204:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1630,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"2178:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3433_$","typeString":"type(library ECDSA)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:11","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"2178:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1638,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"2220:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1639,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2230:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1647,"nodeType":"IfStatement","src":"2216:88:11","trueBody":{"id":1646,"nodeType":"Block","src":"2237:67:11","statements":[{"errorCall":{"arguments":[{"id":1642,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"2279:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1643,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2287:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1641,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"2258:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"RevertStatement","src":"2251:42:11"}]}},{"expression":{"arguments":[{"id":1649,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2323:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1650,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2330:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"2339:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1648,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1262,1322],"referencedDeclaration":1262,"src":"2314:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"ExpressionStatement","src":"2314:31:11"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"1632:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:11","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"owner","nameLocation":"1713:5:11","nodeType":"VariableDeclaration","scope":1655,"src":"1705:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"spender","nameLocation":"1736:7:11","nodeType":"VariableDeclaration","scope":1655,"src":"1728:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"value","nameLocation":"1761:5:11","nodeType":"VariableDeclaration","scope":1655,"src":"1753:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:11","nodeType":"VariableDeclaration","scope":1655,"src":"1776:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"v","nameLocation":"1808:1:11","nodeType":"VariableDeclaration","scope":1655,"src":"1802:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1588,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"r","nameLocation":"1827:1:11","nodeType":"VariableDeclaration","scope":1655,"src":"1819:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"s","nameLocation":"1846:1:11","nodeType":"VariableDeclaration","scope":1655,"src":"1838:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:11"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"1869:0:11"},"scope":1683,"src":"1680:672:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1738,2345],"body":{"id":1671,"nodeType":"Block","src":"2506:43:11","statements":[{"expression":{"arguments":[{"id":1668,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2536:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1666,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1683_$","typeString":"type(contract super ERC20Permit)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:11","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2345,"src":"2523:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1665,"id":1670,"nodeType":"Return","src":"2516:26:11"}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"2358:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:11","nodeType":"FunctionDefinition","overrides":{"id":1662,"nodeType":"OverrideSpecifier","overrides":[{"id":1660,"name":"IERC20Permit","nameLocations":["2466:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1745,"src":"2466:12:11"},{"id":1661,"name":"Nonces","nameLocations":["2480:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2386,"src":"2480:6:11"}],"src":"2457:30:11"},"parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"owner","nameLocation":"2430:5:11","nodeType":"VariableDeclaration","scope":1672,"src":"2422:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:11"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1672,"src":"2497:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:11"},"scope":1683,"src":"2406:143:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1744],"body":{"id":1681,"nodeType":"Block","src":"2724:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1678,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2741:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1677,"id":1680,"nodeType":"Return","src":"2734:27:11"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"2555:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:11","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"2681:2:11"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"2715:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:11"},"scope":1683,"src":"2656:112:11","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1684,"src":"896:1874:11","usedErrors":[731,736,741,750,755,760,1560,1567,2328,2517,2519,3096,3101,3106],"usedEvents":[699,1383,1392]}],"src":"122:2649:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1449],"IERC20Metadata":[1709]},"id":1710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1685,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1687,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1710,"sourceUnit":1450,"src":"151:37:12","symbolAliases":[{"foreign":{"id":1686,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1689,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"305:6:12"},"id":1690,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"190:86:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1709,"linearizedBaseContracts":[1709,1449],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1693,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":1709,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1702,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1702,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1699,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":1709,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1708,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1708,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1705,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":1709,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1710,"src":"277:405:12","usedErrors":[],"usedEvents":[1383,1392]}],"src":"125:558:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1745]},"id":1746,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1711,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"149:1963:13","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1745,"linearizedBaseContracts":[1745],"name":"IERC20Permit","nameLocation":"2123:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"2142:850:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1730,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:13","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"owner","nameLocation":"3030:5:13","nodeType":"VariableDeclaration","scope":1730,"src":"3022:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"spender","nameLocation":"3053:7:13","nodeType":"VariableDeclaration","scope":1730,"src":"3045:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"value","nameLocation":"3078:5:13","nodeType":"VariableDeclaration","scope":1730,"src":"3070:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:13","nodeType":"VariableDeclaration","scope":1730,"src":"3093:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"v","nameLocation":"3125:1:13","nodeType":"VariableDeclaration","scope":1730,"src":"3119:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1722,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"r","nameLocation":"3144:1:13","nodeType":"VariableDeclaration","scope":1730,"src":"3136:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"s","nameLocation":"3163:1:13","nodeType":"VariableDeclaration","scope":1730,"src":"3155:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:13"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[],"src":"3179:0:13"},"scope":1745,"src":"2997:183:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"3186:294:13","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1738,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:13","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"owner","nameLocation":"3509:5:13","nodeType":"VariableDeclaration","scope":1738,"src":"3501:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:13"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1738,"src":"3539:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:13"},"scope":1745,"src":"3485:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"3554:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1744,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:13","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[],"src":"3765:2:13"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"3791:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:13"},"scope":1745,"src":"3740:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1746,"src":"2113:1689:13","usedErrors":[],"usedEvents":[]}],"src":"123:3680:13"},"id":13},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2288],"IERC20":[1449],"IERC20Permit":[1745],"SafeERC20":[2035]},"id":2036,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1747,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1749,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2036,"sourceUnit":1450,"src":"141:37:14","symbolAliases":[{"foreign":{"id":1748,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"149:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1751,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2036,"sourceUnit":1746,"src":"179:60:14","symbolAliases":[{"foreign":{"id":1750,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"187:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2036,"sourceUnit":2289,"src":"240:51:14","symbolAliases":[{"foreign":{"id":1752,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"248:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"293:457:14","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2035,"linearizedBaseContracts":[2035],"name":"SafeERC20","nameLocation":"759:9:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1757,"libraryName":{"id":1755,"name":"Address","nameLocations":["781:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"781:7:14"},"nodeType":"UsingForDirective","src":"775:26:14","typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"807:64:14","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1762,"name":"SafeERC20FailedOperation","nameLocation":"882:24:14","nodeType":"ErrorDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"token","nameLocation":"915:5:14","nodeType":"VariableDeclaration","scope":1762,"src":"907:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:14"},"src":"876:46:14"},{"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"928:71:14","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1771,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:14","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"spender","nameLocation":"1051:7:14","nodeType":"VariableDeclaration","scope":1771,"src":"1043:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:14","nodeType":"VariableDeclaration","scope":1771,"src":"1060:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:14","nodeType":"VariableDeclaration","scope":1771,"src":"1086:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:14"},"src":"1004:109:14"},{"body":{"id":1794,"nodeType":"Block","src":"1375:88:14","statements":[{"expression":{"arguments":[{"id":1783,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1405:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1786,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1427:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1416,"src":"1427:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"1444:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1448:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1784,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:14","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1782,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"1385:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1449_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"1385:71:14"}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"1119:179:14","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:14","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"token","nameLocation":"1332:5:14","nodeType":"VariableDeclaration","scope":1795,"src":"1325:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":1774,"nodeType":"UserDefinedTypeName","pathNode":{"id":1773,"name":"IERC20","nameLocations":["1325:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"1325:6:14"},"referencedDeclaration":1449,"src":"1325:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"to","nameLocation":"1347:2:14","nodeType":"VariableDeclaration","scope":1795,"src":"1339:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"value","nameLocation":"1359:5:14","nodeType":"VariableDeclaration","scope":1795,"src":"1351:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:14"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[],"src":"1375:0:14"},"scope":2035,"src":"1303:160:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1821,"nodeType":"Block","src":"1792:98:14","statements":[{"expression":{"arguments":[{"id":1809,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1822:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1812,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1844:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1448,"src":"1844:18:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"1865:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"1871:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"1875:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1810,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:14","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1808,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"1802:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1449_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"1802:81:14"}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"1469:228:14","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:14","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"token","nameLocation":"1735:5:14","nodeType":"VariableDeclaration","scope":1822,"src":"1728:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":1798,"nodeType":"UserDefinedTypeName","pathNode":{"id":1797,"name":"IERC20","nameLocations":["1728:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"1728:6:14"},"referencedDeclaration":1449,"src":"1728:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"from","nameLocation":"1750:4:14","nodeType":"VariableDeclaration","scope":1822,"src":"1742:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"to","nameLocation":"1764:2:14","nodeType":"VariableDeclaration","scope":1822,"src":"1756:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"value","nameLocation":"1776:5:14","nodeType":"VariableDeclaration","scope":1822,"src":"1768:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:14"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"1792:0:14"},"scope":2035,"src":"1702:188:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"2167:139:14","statements":[{"assignments":[1834],"declarations":[{"constant":false,"id":1834,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:14","nodeType":"VariableDeclaration","scope":1852,"src":"2177:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1843,"initialValue":{"arguments":[{"arguments":[{"id":1839,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2035","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2035","typeString":"library SafeERC20"}],"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:14","typeDescriptions":{}}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1841,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"2231:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1835,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2200:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:14","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"2200:15:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:14"},{"expression":{"arguments":[{"id":1845,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2262:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},{"id":1846,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"2269:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"2278:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"2293:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1844,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2249:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1449_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1851,"nodeType":"ExpressionStatement","src":"2249:50:14"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"1896:180:14","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:14","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"token","nameLocation":"2119:5:14","nodeType":"VariableDeclaration","scope":1853,"src":"2112:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":1825,"nodeType":"UserDefinedTypeName","pathNode":{"id":1824,"name":"IERC20","nameLocations":["2112:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"2112:6:14"},"referencedDeclaration":1449,"src":"2112:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"spender","nameLocation":"2134:7:14","nodeType":"VariableDeclaration","scope":1853,"src":"2126:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"value","nameLocation":"2151:5:14","nodeType":"VariableDeclaration","scope":1853,"src":"2143:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:14"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"2167:0:14"},"scope":2035,"src":"2081:225:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1895,"nodeType":"Block","src":"2607:370:14","statements":[{"id":1894,"nodeType":"UncheckedBlock","src":"2617:354:14","statements":[{"assignments":[1865],"declarations":[{"constant":false,"id":1865,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:14","nodeType":"VariableDeclaration","scope":1894,"src":"2641:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1874,"initialValue":{"arguments":[{"arguments":[{"id":1870,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2035","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2035","typeString":"library SafeERC20"}],"id":1869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:14","typeDescriptions":{}}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2699:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1866,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"2668:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:14","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"2668:15:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2725:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1876,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"2744:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1885,"nodeType":"IfStatement","src":"2721:160:14","trueBody":{"id":1884,"nodeType":"Block","src":"2763:118:14","statements":[{"errorCall":{"arguments":[{"id":1879,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2821:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1880,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2830:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1881,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"2848:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1878,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2788:32:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1883,"nodeType":"RevertStatement","src":"2781:85:14"}]}},{"expression":{"arguments":[{"id":1887,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"2907:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},{"id":1888,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2914:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2923:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1890,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"2942:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1886,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2894:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1449_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"ExpressionStatement","src":"2894:66:14"}]}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"2312:192:14","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:14","nodeType":"FunctionDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"token","nameLocation":"2547:5:14","nodeType":"VariableDeclaration","scope":1896,"src":"2540:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":1856,"nodeType":"UserDefinedTypeName","pathNode":{"id":1855,"name":"IERC20","nameLocations":["2540:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"2540:6:14"},"referencedDeclaration":1449,"src":"2540:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"spender","nameLocation":"2562:7:14","nodeType":"VariableDeclaration","scope":1896,"src":"2554:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1861,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:14","nodeType":"VariableDeclaration","scope":1896,"src":"2571:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:14"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[],"src":"2607:0:14"},"scope":2035,"src":"2509:468:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1942,"nodeType":"Block","src":"3373:303:14","statements":[{"assignments":[1908],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:14","nodeType":"VariableDeclaration","scope":1942,"src":"3383:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1907,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1917,"initialValue":{"arguments":[{"expression":{"id":1911,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3426:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:14","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1436,"src":"3426:13:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1913,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3442:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"3451:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1909,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:14","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:14"},{"condition":{"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:14","subExpression":{"arguments":[{"id":1919,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3498:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},{"id":1920,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"3505:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1918,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"3474:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1449_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1941,"nodeType":"IfStatement","src":"3469:201:14","trueBody":{"id":1940,"nodeType":"Block","src":"3520:150:14","statements":[{"expression":{"arguments":[{"id":1924,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3554:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1927,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3576:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:14","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1436,"src":"3576:13:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1929,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3592:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1925,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:14","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1923,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3534:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1449_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"3534:71:14"},{"expression":{"arguments":[{"id":1936,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3639:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},{"id":1937,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"3646:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1935,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3619:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1449_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1939,"nodeType":"ExpressionStatement","src":"3619:40:14"}]}}]},"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"2983:308:14","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:14","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"token","nameLocation":"3325:5:14","nodeType":"VariableDeclaration","scope":1943,"src":"3318:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":1899,"nodeType":"UserDefinedTypeName","pathNode":{"id":1898,"name":"IERC20","nameLocations":["3318:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"3318:6:14"},"referencedDeclaration":1449,"src":"3318:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"spender","nameLocation":"3340:7:14","nodeType":"VariableDeclaration","scope":1943,"src":"3332:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"value","nameLocation":"3357:5:14","nodeType":"VariableDeclaration","scope":1943,"src":"3349:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:14"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"3373:0:14"},"scope":2035,"src":"3296:380:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"4129:559:14","statements":[{"assignments":[1953],"declarations":[{"constant":false,"id":1953,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:14","nodeType":"VariableDeclaration","scope":1984,"src":"4478:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1952,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1961,"initialValue":{"arguments":[{"id":1959,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"4532:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1956,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"4512:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}],"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:14","typeDescriptions":{}}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:14","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2109,"src":"4504:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"4551:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:14","memberName":"length","nodeType":"MemberAccess","src":"4551:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:14","subExpression":{"arguments":[{"id":1968,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"4589:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:14","typeDescriptions":{}}}],"id":1971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1966,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:14","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:14","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"nodeType":"IfStatement","src":"4547:135:14","trueBody":{"id":1982,"nodeType":"Block","src":"4610:72:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1978,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"4664:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}],"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:14","typeDescriptions":{}}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1975,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"4631:24:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"RevertStatement","src":"4624:47:14"}]}}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"3682:372:14","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:14","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"token","nameLocation":"4095:5:14","nodeType":"VariableDeclaration","scope":1985,"src":"4088:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":1946,"nodeType":"UserDefinedTypeName","pathNode":{"id":1945,"name":"IERC20","nameLocations":["4088:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"4088:6:14"},"referencedDeclaration":1449,"src":"4088:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"data","nameLocation":"4115:4:14","nodeType":"VariableDeclaration","scope":1985,"src":"4102:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:14"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"4129:0:14"},"scope":2035,"src":"4059:629:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2033,"nodeType":"Block","src":"5278:489:14","statements":[{"assignments":[1997,1999],"declarations":[{"constant":false,"id":1997,"mutability":"mutable","name":"success","nameLocation":"5579:7:14","nodeType":"VariableDeclaration","scope":2033,"src":"5574:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1996,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:14","nodeType":"VariableDeclaration","scope":2033,"src":"5588:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1998,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2007,"initialValue":{"arguments":[{"id":2005,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"5635:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2002,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"5623:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}],"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:14","typeDescriptions":{}}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:14","memberName":"call","nodeType":"MemberAccess","src":"5615:19:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:14"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"5657:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2009,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5669:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:14","memberName":"length","nodeType":"MemberAccess","src":"5669:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2015,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5706:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2016,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:14","typeDescriptions":{}}}],"id":2018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2013,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:14","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:14","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2025,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"5738:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}],"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:14","typeDescriptions":{}}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:14","memberName":"code","nodeType":"MemberAccess","src":"5730:19:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:14","memberName":"length","nodeType":"MemberAccess","src":"5730:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1995,"id":2032,"nodeType":"Return","src":"5650:110:14"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"4694:490:14","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:14","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"token","nameLocation":"5229:5:14","nodeType":"VariableDeclaration","scope":2034,"src":"5222:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":1988,"nodeType":"UserDefinedTypeName","pathNode":{"id":1987,"name":"IERC20","nameLocations":["5222:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"5222:6:14"},"referencedDeclaration":1449,"src":"5222:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"data","nameLocation":"5249:4:14","nodeType":"VariableDeclaration","scope":2034,"src":"5236:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1990,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:14"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2034,"src":"5272:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1993,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:14"},"scope":2035,"src":"5189:578:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2036,"src":"751:5018:14","usedErrors":[1762,1771],"usedEvents":[]}],"src":"115:5655:14"},"id":14},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2288]},"id":2289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2037,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"127:67:15","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2288,"linearizedBaseContracts":[2288],"name":"Address","nameLocation":"203:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"217:94:15","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2043,"name":"AddressInsufficientBalance","nameLocation":"322:26:15","nodeType":"ErrorDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"account","nameLocation":"357:7:15","nodeType":"VariableDeclaration","scope":2043,"src":"349:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:15"},"src":"316:50:15"},{"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"372:75:15","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2048,"name":"AddressEmptyCode","nameLocation":"458:16:15","nodeType":"ErrorDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"target","nameLocation":"483:6:15","nodeType":"VariableDeclaration","scope":2048,"src":"475:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:15"},"src":"452:39:15"},{"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"497:89:15","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2051,"name":"FailedInnerCall","nameLocation":"597:15:15","nodeType":"ErrorDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[],"src":"612:2:15"},"src":"591:24:15"},{"body":{"id":2091,"nodeType":"Block","src":"1602:260:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2061,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2288","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2288","typeString":"library Address"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:15","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:15","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2064,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1640:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2074,"nodeType":"IfStatement","src":"1612:109:15","trueBody":{"id":2073,"nodeType":"Block","src":"1648:73:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2069,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2288","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2288","typeString":"library Address"}],"id":2068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:15","typeDescriptions":{}}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2066,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1669:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2072,"nodeType":"RevertStatement","src":"1662:48:15"}]}},{"assignments":[2076,null],"declarations":[{"constant":false,"id":2076,"mutability":"mutable","name":"success","nameLocation":"1737:7:15","nodeType":"VariableDeclaration","scope":2091,"src":"1732:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2075,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2083,"initialValue":{"arguments":[{"hexValue":"","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2077,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"1750:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:15","memberName":"call","nodeType":"MemberAccess","src":"1750:14:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2079,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1772:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:15"},{"condition":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:15","subExpression":{"id":2084,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1798:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"IfStatement","src":"1793:63:15","trueBody":{"id":2089,"nodeType":"Block","src":"1807:49:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2086,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1828:15:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2088,"nodeType":"RevertStatement","src":"1821:24:15"}]}}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"621:905:15","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:15","nodeType":"FunctionDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:15","nodeType":"VariableDeclaration","scope":2092,"src":"1550:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"amount","nameLocation":"1585:6:15","nodeType":"VariableDeclaration","scope":2092,"src":"1577:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:15"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[],"src":"1602:0:15"},"scope":2288,"src":"1531:331:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"2794:62:15","statements":[{"expression":{"arguments":[{"id":2103,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2833:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2104,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"2841:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2102,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"2811:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2101,"id":2107,"nodeType":"Return","src":"2804:45:15"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"1868:832:15","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:15","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"target","nameLocation":"2735:6:15","nodeType":"VariableDeclaration","scope":2109,"src":"2727:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"data","nameLocation":"2756:4:15","nodeType":"VariableDeclaration","scope":2109,"src":"2743:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2096,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:15"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2109,"src":"2780:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2099,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:15"},"scope":2288,"src":"2705:151:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2154,"nodeType":"Block","src":"3293:279:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2123,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2288","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2288","typeString":"library Address"}],"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:15","typeDescriptions":{}}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:15","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"3331:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2136,"nodeType":"IfStatement","src":"3303:108:15","trueBody":{"id":2135,"nodeType":"Block","src":"3338:73:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2131,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2288","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2288","typeString":"library Address"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:15","typeDescriptions":{}}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2128,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"3359:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"RevertStatement","src":"3352:48:15"}]}},{"assignments":[2138,2140],"declarations":[{"constant":false,"id":2138,"mutability":"mutable","name":"success","nameLocation":"3426:7:15","nodeType":"VariableDeclaration","scope":2154,"src":"3421:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2137,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:15","nodeType":"VariableDeclaration","scope":2154,"src":"3435:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2147,"initialValue":{"arguments":[{"id":2145,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3488:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2141,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"3462:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:15","memberName":"call","nodeType":"MemberAccess","src":"3462:11:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"3481:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:15"},{"expression":{"arguments":[{"id":2149,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"3537:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2150,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3545:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2151,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"3554:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2148,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3510:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2120,"id":2153,"nodeType":"Return","src":"3503:62:15"}]},"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"2862:313:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:15","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"target","nameLocation":"3219:6:15","nodeType":"VariableDeclaration","scope":2155,"src":"3211:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"data","nameLocation":"3240:4:15","nodeType":"VariableDeclaration","scope":2155,"src":"3227:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2113,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"value","nameLocation":"3254:5:15","nodeType":"VariableDeclaration","scope":2155,"src":"3246:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:15"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2155,"src":"3279:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2118,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:15"},"scope":2288,"src":"3180:392:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2180,"nodeType":"Block","src":"3811:154:15","statements":[{"assignments":[2166,2168],"declarations":[{"constant":false,"id":2166,"mutability":"mutable","name":"success","nameLocation":"3827:7:15","nodeType":"VariableDeclaration","scope":2180,"src":"3822:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2165,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:15","nodeType":"VariableDeclaration","scope":2180,"src":"3836:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2167,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2173,"initialValue":{"arguments":[{"id":2171,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"3881:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2169,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"3863:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:15","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:15"},{"expression":{"arguments":[{"id":2175,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"3930:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2176,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"3938:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2177,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"3947:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2174,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3903:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2164,"id":2179,"nodeType":"Return","src":"3896:62:15"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"3578:128:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2181,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:15","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"target","nameLocation":"3747:6:15","nodeType":"VariableDeclaration","scope":2181,"src":"3739:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"data","nameLocation":"3768:4:15","nodeType":"VariableDeclaration","scope":2181,"src":"3755:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:15"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2181,"src":"3797:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2162,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:15"},"scope":2288,"src":"3711:254:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2206,"nodeType":"Block","src":"4203:156:15","statements":[{"assignments":[2192,2194],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"success","nameLocation":"4219:7:15","nodeType":"VariableDeclaration","scope":2206,"src":"4214:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2191,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:15","nodeType":"VariableDeclaration","scope":2206,"src":"4228:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2193,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2199,"initialValue":{"arguments":[{"id":2197,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"4275:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2195,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"4255:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:15","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:15","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:15"},{"expression":{"arguments":[{"id":2201,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"4324:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2202,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"4332:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2203,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"4341:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2200,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4297:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2190,"id":2205,"nodeType":"Return","src":"4290:62:15"}]},"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"3971:130:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:15","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"target","nameLocation":"4144:6:15","nodeType":"VariableDeclaration","scope":2207,"src":"4136:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"data","nameLocation":"4165:4:15","nodeType":"VariableDeclaration","scope":2207,"src":"4152:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2185,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:15"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"4189:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2188,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:15"},"scope":2288,"src":"4106:253:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2246,"nodeType":"Block","src":"4783:424:15","statements":[{"condition":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:15","subExpression":{"id":2219,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"4798:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2244,"nodeType":"Block","src":"4857:344:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2226,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5045:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:15","memberName":"length","nodeType":"MemberAccess","src":"5045:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2230,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"5071:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:15","memberName":"code","nodeType":"MemberAccess","src":"5071:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:15","memberName":"length","nodeType":"MemberAccess","src":"5071:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2241,"nodeType":"IfStatement","src":"5041:119:15","trueBody":{"id":2240,"nodeType":"Block","src":"5096:64:15","statements":[{"errorCall":{"arguments":[{"id":2237,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"5138:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2236,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"5121:16:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2239,"nodeType":"RevertStatement","src":"5114:31:15"}]}},{"expression":{"id":2242,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5180:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2218,"id":2243,"nodeType":"Return","src":"5173:17:15"}]},"id":2245,"nodeType":"IfStatement","src":"4793:408:15","trueBody":{"id":2225,"nodeType":"Block","src":"4807:44:15","statements":[{"expression":{"arguments":[{"id":2222,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"4829:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2221,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"4821:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2224,"nodeType":"ExpressionStatement","src":"4821:19:15"}]}}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"4365:255:15","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:15","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"target","nameLocation":"4678:6:15","nodeType":"VariableDeclaration","scope":2247,"src":"4670:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"success","nameLocation":"4699:7:15","nodeType":"VariableDeclaration","scope":2247,"src":"4694:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2211,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:15","nodeType":"VariableDeclaration","scope":2247,"src":"4716:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2213,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:15"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2247,"src":"4769:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2216,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:15"},"scope":2288,"src":"4625:582:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2268,"nodeType":"Block","src":"5509:122:15","statements":[{"condition":{"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:15","subExpression":{"id":2257,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"5524:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2266,"nodeType":"Block","src":"5583:42:15","statements":[{"expression":{"id":2264,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"5604:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2256,"id":2265,"nodeType":"Return","src":"5597:17:15"}]},"id":2267,"nodeType":"IfStatement","src":"5519:106:15","trueBody":{"id":2263,"nodeType":"Block","src":"5533:44:15","statements":[{"expression":{"arguments":[{"id":2260,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"5555:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2259,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"5547:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"ExpressionStatement","src":"5547:19:15"}]}}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"5213:189:15","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:15","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"success","nameLocation":"5438:7:15","nodeType":"VariableDeclaration","scope":2269,"src":"5433:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2249,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:15","nodeType":"VariableDeclaration","scope":2269,"src":"5447:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2251,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:15"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"5495:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2254,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:15"},"scope":2288,"src":"5407:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2286,"nodeType":"Block","src":"5798:461:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2275,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"5874:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:15","memberName":"length","nodeType":"MemberAccess","src":"5874:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2284,"nodeType":"Block","src":"6204:49:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2281,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"6225:15:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2283,"nodeType":"RevertStatement","src":"6218:24:15"}]},"id":2285,"nodeType":"IfStatement","src":"5870:383:15","trueBody":{"id":2280,"nodeType":"Block","src":"5897:301:15","statements":[{"AST":{"nativeSrc":"6055:133:15","nodeType":"YulBlock","src":"6055:133:15","statements":[{"nativeSrc":"6073:40:15","nodeType":"YulVariableDeclaration","src":"6073:40:15","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:15","nodeType":"YulIdentifier","src":"6102:10:15"}],"functionName":{"name":"mload","nativeSrc":"6096:5:15","nodeType":"YulIdentifier","src":"6096:5:15"},"nativeSrc":"6096:17:15","nodeType":"YulFunctionCall","src":"6096:17:15"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:15","nodeType":"YulTypedName","src":"6077:15:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:15","nodeType":"YulLiteral","src":"6141:2:15","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:15","nodeType":"YulIdentifier","src":"6145:10:15"}],"functionName":{"name":"add","nativeSrc":"6137:3:15","nodeType":"YulIdentifier","src":"6137:3:15"},"nativeSrc":"6137:19:15","nodeType":"YulFunctionCall","src":"6137:19:15"},{"name":"returndata_size","nativeSrc":"6158:15:15","nodeType":"YulIdentifier","src":"6158:15:15"}],"functionName":{"name":"revert","nativeSrc":"6130:6:15","nodeType":"YulIdentifier","src":"6130:6:15"},"nativeSrc":"6130:44:15","nodeType":"YulFunctionCall","src":"6130:44:15"},"nativeSrc":"6130:44:15","nodeType":"YulExpressionStatement","src":"6130:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2272,"isOffset":false,"isSlot":false,"src":"6102:10:15","valueSize":1},{"declaration":2272,"isOffset":false,"isSlot":false,"src":"6145:10:15","valueSize":1}],"id":2279,"nodeType":"InlineAssembly","src":"6046:142:15"}]}}]},"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"5637:101:15","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2287,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:15","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:15","nodeType":"VariableDeclaration","scope":2287,"src":"5760:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2271,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:15"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[],"src":"5798:0:15"},"scope":2288,"src":"5743:516:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2289,"src":"195:6066:15","usedErrors":[2043,2048,2051],"usedEvents":[]}],"src":"101:6161:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2318]},"id":2319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2290,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"127:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2318,"linearizedBaseContracts":[2318],"name":"Context","nameLocation":"642:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2299,"nodeType":"Block","src":"718:34:16","statements":[{"expression":{"expression":{"id":2296,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:16","memberName":"sender","nodeType":"MemberAccess","src":"735:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2295,"id":2298,"nodeType":"Return","src":"728:17:16"}]},"id":2300,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:16","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"675:2:16"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2300,"src":"709:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:16"},"scope":2318,"src":"656:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2308,"nodeType":"Block","src":"825:32:16","statements":[{"expression":{"expression":{"id":2305,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:16","memberName":"data","nodeType":"MemberAccess","src":"842:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2304,"id":2307,"nodeType":"Return","src":"835:15:16"}]},"id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:16","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[],"src":"775:2:16"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"809:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2302,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:16"},"scope":2318,"src":"758:99:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"935:25:16","statements":[{"expression":{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2313,"id":2315,"nodeType":"Return","src":"945:8:16"}]},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:16","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[],"src":"892:2:16"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"926:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:16"},"scope":2318,"src":"863:97:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2319,"src":"624:338:16","usedErrors":[],"usedEvents":[]}],"src":"101:862:16"},"id":16},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2386]},"id":2387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2320,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2321,"nodeType":"StructuredDocumentation","src":"125:83:17","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2386,"linearizedBaseContracts":[2386],"name":"Nonces","nameLocation":"227:6:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"240:90:17","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2328,"name":"InvalidAccountNonce","nameLocation":"341:19:17","nodeType":"ErrorDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"account","nameLocation":"369:7:17","nodeType":"VariableDeclaration","scope":2328,"src":"361:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:17","nodeType":"VariableDeclaration","scope":2328,"src":"378:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:17"},"src":"335:65:17"},{"constant":false,"id":2332,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:17","nodeType":"VariableDeclaration","scope":2386,"src":"406:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2331,"keyName":"account","keyNameLocation":"422:7:17","keyType":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2344,"nodeType":"Block","src":"607:38:17","statements":[{"expression":{"baseExpression":{"id":2340,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"624:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2342,"indexExpression":{"id":2341,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"632:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2339,"id":2343,"nodeType":"Return","src":"617:21:17"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"464:69:17","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2345,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:17","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"owner","nameLocation":"562:5:17","nodeType":"VariableDeclaration","scope":2345,"src":"554:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:17"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"598:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:17"},"scope":2386,"src":"538:107:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2359,"nodeType":"Block","src":"828:326:17","statements":[{"id":2358,"nodeType":"UncheckedBlock","src":"1031:117:17","statements":[{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:17","subExpression":{"baseExpression":{"id":2353,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"1121:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2355,"indexExpression":{"id":2354,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"1129:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2352,"id":2357,"nodeType":"Return","src":"1114:23:17"}]}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"651:103:17","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:17","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"owner","nameLocation":"786:5:17","nodeType":"VariableDeclaration","scope":2360,"src":"778:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:17"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"819:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:17"},"scope":2386,"src":"759:395:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"1338:149:17","statements":[{"assignments":[2369],"declarations":[{"constant":false,"id":2369,"mutability":"mutable","name":"current","nameLocation":"1356:7:17","nodeType":"VariableDeclaration","scope":2384,"src":"1348:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2373,"initialValue":{"arguments":[{"id":2371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1376:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2370,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"1366:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1396:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2375,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"1405:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2383,"nodeType":"IfStatement","src":"1392:89:17","trueBody":{"id":2382,"nodeType":"Block","src":"1414:67:17","statements":[{"errorCall":{"arguments":[{"id":2378,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1455:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2379,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"1462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2377,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"1435:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2381,"nodeType":"RevertStatement","src":"1428:42:17"}]}}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"1160:100:17","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:17","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"owner","nameLocation":"1299:5:17","nodeType":"VariableDeclaration","scope":2385,"src":"1291:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:17","nodeType":"VariableDeclaration","scope":2385,"src":"1306:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:17"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[],"src":"1338:0:17"},"scope":2386,"src":"1265:222:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2387,"src":"209:1280:17","usedErrors":[2328],"usedEvents":[]}],"src":"99:1391:17"},"id":17},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2318],"Pausable":[2503]},"id":2504,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2388,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2504,"sourceUnit":2319,"src":"128:45:18","symbolAliases":[{"foreign":{"id":2389,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"136:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2392,"name":"Context","nameLocations":["645:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"645:7:18"},"id":2393,"nodeType":"InheritanceSpecifier","src":"645:7:18"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"175:439:18","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2503,"linearizedBaseContracts":[2503,2318],"name":"Pausable","nameLocation":"633:8:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2395,"mutability":"mutable","name":"_paused","nameLocation":"672:7:18","nodeType":"VariableDeclaration","scope":2503,"src":"659:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2394,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"686:73:18","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2400,"name":"Paused","nameLocation":"770:6:18","nodeType":"EventDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:18","nodeType":"VariableDeclaration","scope":2400,"src":"777:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:18"},"src":"764:30:18"},{"anonymous":false,"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"800:70:18","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2405,"name":"Unpaused","nameLocation":"881:8:18","nodeType":"EventDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:18","nodeType":"VariableDeclaration","scope":2405,"src":"890:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:18"},"src":"875:32:18"},{"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"913:76:18","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2408,"name":"EnforcedPause","nameLocation":"1000:13:18","nodeType":"ErrorDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[],"src":"1013:2:18"},"src":"994:22:18"},{"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"1022:80:18","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2411,"name":"ExpectedPause","nameLocation":"1113:13:18","nodeType":"ErrorDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"1126:2:18"},"src":"1107:22:18"},{"body":{"id":2419,"nodeType":"Block","src":"1221:32:18","statements":[{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1231:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2418,"nodeType":"ExpressionStatement","src":"1231:15:18"}]},"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"1135:67:18","text":" @dev Initializes the contract in unpaused state."},"id":2420,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[],"src":"1218:2:18"},"returnParameters":{"id":2414,"nodeType":"ParameterList","parameters":[],"src":"1221:0:18"},"scope":2503,"src":"1207:46:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2427,"nodeType":"Block","src":"1464:47:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2423,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1474:17:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2425,"nodeType":"ExpressionStatement","src":"1474:19:18"},{"id":2426,"nodeType":"PlaceholderStatement","src":"1503:1:18"}]},"documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"1259:175:18","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2428,"name":"whenNotPaused","nameLocation":"1448:13:18","nodeType":"ModifierDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[],"src":"1461:2:18"},"src":"1439:72:18","virtual":false,"visibility":"internal"},{"body":{"id":2435,"nodeType":"Block","src":"1711:44:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2431,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"1721:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2433,"nodeType":"ExpressionStatement","src":"1721:16:18"},{"id":2434,"nodeType":"PlaceholderStatement","src":"1747:1:18"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"1517:167:18","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2436,"name":"whenPaused","nameLocation":"1698:10:18","nodeType":"ModifierDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"1708:2:18"},"src":"1689:66:18","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"1903:31:18","statements":[{"expression":{"id":2442,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1920:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2441,"id":2443,"nodeType":"Return","src":"1913:14:18"}]},"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"1761:84:18","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:18","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[],"src":"1865:2:18"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"1897:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2439,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:18"},"scope":2503,"src":"1850:84:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2456,"nodeType":"Block","src":"2053:77:18","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2449,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"2067:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2455,"nodeType":"IfStatement","src":"2063:61:18","trueBody":{"id":2454,"nodeType":"Block","src":"2077:47:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2451,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"2098:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2453,"nodeType":"RevertStatement","src":"2091:22:18"}]}}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"1940:57:18","text":" @dev Throws if the contract is paused."},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:18","nodeType":"FunctionDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[],"src":"2028:2:18"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[],"src":"2053:0:18"},"scope":2503,"src":"2002:128:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2469,"nodeType":"Block","src":"2250:78:18","statements":[{"condition":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:18","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2461,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"2265:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2468,"nodeType":"IfStatement","src":"2260:62:18","trueBody":{"id":2467,"nodeType":"Block","src":"2275:47:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2464,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"2296:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2466,"nodeType":"RevertStatement","src":"2289:22:18"}]}}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"2136:61:18","text":" @dev Throws if the contract is not paused."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:18","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[],"src":"2225:2:18"},"returnParameters":{"id":2460,"nodeType":"ParameterList","parameters":[],"src":"2250:0:18"},"scope":2503,"src":"2202:126:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2485,"nodeType":"Block","src":"2512:66:18","statements":[{"expression":{"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2476,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"2522:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2479,"nodeType":"ExpressionStatement","src":"2522:14:18"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2481,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2558:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2480,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"2551:6:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2484,"nodeType":"EmitStatement","src":"2546:25:18"}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"2334:124:18","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2486,"implemented":true,"kind":"function","modifiers":[{"id":2474,"kind":"modifierInvocation","modifierName":{"id":2473,"name":"whenNotPaused","nameLocations":["2498:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"2498:13:18"},"nodeType":"ModifierInvocation","src":"2498:13:18"}],"name":"_pause","nameLocation":"2472:6:18","nodeType":"FunctionDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[],"src":"2478:2:18"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[],"src":"2512:0:18"},"scope":2503,"src":"2463:115:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"2758:69:18","statements":[{"expression":{"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2492,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"2768:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2495,"nodeType":"ExpressionStatement","src":"2768:15:18"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2497,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2807:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2496,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2798:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2500,"nodeType":"EmitStatement","src":"2793:27:18"}]},"documentation":{"id":2487,"nodeType":"StructuredDocumentation","src":"2584:121:18","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2502,"implemented":true,"kind":"function","modifiers":[{"id":2490,"kind":"modifierInvocation","modifierName":{"id":2489,"name":"whenPaused","nameLocations":["2747:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"2747:10:18"},"nodeType":"ModifierInvocation","src":"2747:10:18"}],"name":"_unpause","nameLocation":"2719:8:18","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[],"src":"2727:2:18"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[],"src":"2758:0:18"},"scope":2503,"src":"2710:117:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2504,"src":"615:2214:18","usedErrors":[2408,2411],"usedEvents":[2400,2405]}],"src":"102:2728:18"},"id":18},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2509],"ShortStrings":[2720],"StorageSlot":[2830]},"id":2721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2505,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":2831,"src":"132:46:19","symbolAliases":[{"foreign":{"id":2506,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"140:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2509,"name":"ShortString","nameLocation":"353:11:19","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:19","underlyingType":{"id":2508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"378:876:19","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2720,"linearizedBaseContracts":[2720],"name":"ShortStrings","nameLocation":"1263:12:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2513,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:19","nodeType":"VariableDeclaration","scope":2720,"src":"1345:111:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2517,"name":"StringTooLong","nameLocation":"1469:13:19","nodeType":"ErrorDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"str","nameLocation":"1490:3:19","nodeType":"VariableDeclaration","scope":2517,"src":"1483:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2514,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:19"},"src":"1463:32:19"},{"errorSelector":"b3512b0c","id":2519,"name":"InvalidShortString","nameLocation":"1506:18:19","nodeType":"ErrorDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[],"src":"1524:2:19"},"src":"1500:27:19"},{"body":{"id":2562,"nodeType":"Block","src":"1786:208:19","statements":[{"assignments":[2529],"declarations":[{"constant":false,"id":2529,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:19","nodeType":"VariableDeclaration","scope":2562,"src":"1796:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2534,"initialValue":{"arguments":[{"id":2532,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"1822:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2530,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:19","typeDescriptions":{}}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2535,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"1840:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:19","memberName":"length","nodeType":"MemberAccess","src":"1840:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2544,"nodeType":"IfStatement","src":"1836:72:19","trueBody":{"id":2543,"nodeType":"Block","src":"1858:50:19","statements":[{"errorCall":{"arguments":[{"id":2540,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"1893:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2539,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"1879:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2542,"nodeType":"RevertStatement","src":"1872:25:19"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2553,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"1965:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:19","typeDescriptions":{}}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:19","typeDescriptions":{}}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2556,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"1974:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:19","memberName":"length","nodeType":"MemberAccess","src":"1974:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:19","typeDescriptions":{}}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2545,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"1924:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"type(ShortString)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:19","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"functionReturnParameters":2527,"id":2561,"nodeType":"Return","src":"1917:70:19"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"1533:170:19","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:19","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"str","nameLocation":"1745:3:19","nodeType":"VariableDeclaration","scope":2563,"src":"1731:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2521,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:19"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"1773:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"},"typeName":{"id":2525,"nodeType":"UserDefinedTypeName","pathNode":{"id":2524,"name":"ShortString","nameLocations":["1773:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"1773:11:19"},"referencedDeclaration":2509,"src":"1773:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:19"},"scope":2720,"src":"1708:286:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2588,"nodeType":"Block","src":"2152:331:19","statements":[{"assignments":[2573],"declarations":[{"constant":false,"id":2573,"mutability":"mutable","name":"len","nameLocation":"2170:3:19","nodeType":"VariableDeclaration","scope":2588,"src":"2162:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2577,"initialValue":{"arguments":[{"id":2575,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"2187:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}],"id":2574,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2176:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2509_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:19"},{"assignments":[2579],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"str","nameLocation":"2294:3:19","nodeType":"VariableDeclaration","scope":2588,"src":"2280:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2578,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2584,"initialValue":{"arguments":[{"hexValue":"3332","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2580,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:19"},{"AST":{"nativeSrc":"2376:81:19","nodeType":"YulBlock","src":"2376:81:19","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:19","nodeType":"YulIdentifier","src":"2397:3:19"},{"name":"len","nativeSrc":"2402:3:19","nodeType":"YulIdentifier","src":"2402:3:19"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:19","nodeType":"YulIdentifier","src":"2390:6:19"},"nativeSrc":"2390:16:19","nodeType":"YulFunctionCall","src":"2390:16:19"},"nativeSrc":"2390:16:19","nodeType":"YulExpressionStatement","src":"2390:16:19"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:19","nodeType":"YulIdentifier","src":"2430:3:19"},{"kind":"number","nativeSrc":"2435:4:19","nodeType":"YulLiteral","src":"2435:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:19","nodeType":"YulIdentifier","src":"2426:3:19"},"nativeSrc":"2426:14:19","nodeType":"YulFunctionCall","src":"2426:14:19"},{"name":"sstr","nativeSrc":"2442:4:19","nodeType":"YulIdentifier","src":"2442:4:19"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:19","nodeType":"YulIdentifier","src":"2419:6:19"},"nativeSrc":"2419:28:19","nodeType":"YulFunctionCall","src":"2419:28:19"},"nativeSrc":"2419:28:19","nodeType":"YulExpressionStatement","src":"2419:28:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2573,"isOffset":false,"isSlot":false,"src":"2402:3:19","valueSize":1},{"declaration":2567,"isOffset":false,"isSlot":false,"src":"2442:4:19","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"2397:3:19","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"2430:3:19","valueSize":1}],"id":2585,"nodeType":"InlineAssembly","src":"2367:90:19"},{"expression":{"id":2586,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"2473:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2571,"id":2587,"nodeType":"Return","src":"2466:10:19"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"2000:73:19","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:19","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:19","nodeType":"VariableDeclaration","scope":2589,"src":"2096:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"},"typeName":{"id":2566,"nodeType":"UserDefinedTypeName","pathNode":{"id":2565,"name":"ShortString","nameLocations":["2096:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"2096:11:19"},"referencedDeclaration":2509,"src":"2096:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:19"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"2137:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2569,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:19"},"scope":2720,"src":"2078:405:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"2625:175:19","statements":[{"assignments":[2599],"declarations":[{"constant":false,"id":2599,"mutability":"mutable","name":"result","nameLocation":"2643:6:19","nodeType":"VariableDeclaration","scope":2620,"src":"2635:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2609,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2604,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2679:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}],"expression":{"id":2602,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"2660:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"type(ShortString)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2509_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:19","typeDescriptions":{}}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"2706:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2617,"nodeType":"IfStatement","src":"2702:69:19","trueBody":{"id":2616,"nodeType":"Block","src":"2719:52:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2613,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"2740:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2615,"nodeType":"RevertStatement","src":"2733:27:19"}]}},{"expression":{"id":2618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"2787:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2597,"id":2619,"nodeType":"Return","src":"2780:13:19"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"2489:61:19","text":" @dev Return the length of a `ShortString`."},"id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:19","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:19","nodeType":"VariableDeclaration","scope":2621,"src":"2575:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"},"typeName":{"id":2592,"nodeType":"UserDefinedTypeName","pathNode":{"id":2591,"name":"ShortString","nameLocations":["2575:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"2575:11:19"},"referencedDeclaration":2509,"src":"2575:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:19"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2621,"src":"2616:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:19"},"scope":2720,"src":"2555:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2660,"nodeType":"Block","src":"3023:231:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"3043:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2632,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:19","typeDescriptions":{}}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:19","memberName":"length","nodeType":"MemberAccess","src":"3037:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2658,"nodeType":"Block","src":"3121:127:19","statements":[{"expression":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2647,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"3161:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2644,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"3135:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2830_$","typeString":"type(library StorageSlot)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:19","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"3135:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2738_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2738_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2737,"src":"3135:38:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"3176:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2652,"nodeType":"ExpressionStatement","src":"3135:46:19"},{"expression":{"arguments":[{"id":2655,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"3219:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2653,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"3202:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"type(ShortString)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:19","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"functionReturnParameters":2631,"id":2657,"nodeType":"Return","src":"3195:42:19"}]},"id":2659,"nodeType":"IfStatement","src":"3033:215:19","trueBody":{"id":2643,"nodeType":"Block","src":"3063:52:19","statements":[{"expression":{"arguments":[{"id":2640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"3098:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2639,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"3084:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"functionReturnParameters":2631,"id":2642,"nodeType":"Return","src":"3077:27:19"}]}}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"2806:103:19","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2661,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:19","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"value","nameLocation":"2963:5:19","nodeType":"VariableDeclaration","scope":2661,"src":"2949:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2623,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"store","nameLocation":"2985:5:19","nodeType":"VariableDeclaration","scope":2661,"src":"2970:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2625,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:19"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2661,"src":"3010:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"},"typeName":{"id":2629,"nodeType":"UserDefinedTypeName","pathNode":{"id":2628,"name":"ShortString","nameLocations":["3010:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"3010:11:19"},"referencedDeclaration":2509,"src":"3010:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:19"},"scope":2720,"src":"2914:340:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2687,"nodeType":"Block","src":"3494:158:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"3527:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}],"expression":{"id":2672,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"3508:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"type(ShortString)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2509_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2676,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"3537:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2685,"nodeType":"Block","src":"3609:37:19","statements":[{"expression":{"id":2683,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"3630:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2671,"id":2684,"nodeType":"Return","src":"3623:12:19"}]},"id":2686,"nodeType":"IfStatement","src":"3504:142:19","trueBody":{"id":2682,"nodeType":"Block","src":"3556:47:19","statements":[{"expression":{"arguments":[{"id":2679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"3586:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}],"id":2678,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3577:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2509_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2671,"id":2681,"nodeType":"Return","src":"3570:22:19"}]}}]},"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"3260:120:19","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2688,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:19","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"value","nameLocation":"3427:5:19","nodeType":"VariableDeclaration","scope":2688,"src":"3415:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"},"typeName":{"id":2664,"nodeType":"UserDefinedTypeName","pathNode":{"id":2663,"name":"ShortString","nameLocations":["3415:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"3415:11:19"},"referencedDeclaration":2509,"src":"3415:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"store","nameLocation":"3449:5:19","nodeType":"VariableDeclaration","scope":2688,"src":"3434:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2666,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:19"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2688,"src":"3479:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2669,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:19"},"scope":2720,"src":"3385:267:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2718,"nodeType":"Block","src":"4132:174:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"4165:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}],"expression":{"id":2699,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"4146:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"type(ShortString)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2509_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2703,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"4175:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2716,"nodeType":"Block","src":"4249:51:19","statements":[{"expression":{"expression":{"arguments":[{"id":2712,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4276:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2710,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:19","typeDescriptions":{}}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:19","memberName":"length","nodeType":"MemberAccess","src":"4270:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2698,"id":2715,"nodeType":"Return","src":"4263:26:19"}]},"id":2717,"nodeType":"IfStatement","src":"4142:158:19","trueBody":{"id":2709,"nodeType":"Block","src":"4194:49:19","statements":[{"expression":{"arguments":[{"id":2706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"4226:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}],"id":2705,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"4215:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2509_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2698,"id":2708,"nodeType":"Return","src":"4208:24:19"}]}}]},"documentation":{"id":2689,"nodeType":"StructuredDocumentation","src":"3658:364:19","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:19","nodeType":"FunctionDefinition","parameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"value","nameLocation":"4071:5:19","nodeType":"VariableDeclaration","scope":2719,"src":"4059:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"},"typeName":{"id":2691,"nodeType":"UserDefinedTypeName","pathNode":{"id":2690,"name":"ShortString","nameLocations":["4059:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"4059:11:19"},"referencedDeclaration":2509,"src":"4059:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"store","nameLocation":"4093:5:19","nodeType":"VariableDeclaration","scope":2719,"src":"4078:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2693,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:19"},"returnParameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2719,"src":"4123:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:19"},"scope":2720,"src":"4027:279:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2721,"src":"1255:3053:19","usedErrors":[2517,2519],"usedEvents":[]}],"src":"106:4203:19"},"id":19},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2830]},"id":2831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2722,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"219:1025:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2830,"linearizedBaseContracts":[2830],"name":"StorageSlot","nameLocation":"1253:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2726,"members":[{"constant":false,"id":2725,"mutability":"mutable","name":"value","nameLocation":"1308:5:20","nodeType":"VariableDeclaration","scope":2726,"src":"1300:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:20","nodeType":"StructDefinition","scope":2830,"src":"1271:49:20","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2729,"members":[{"constant":false,"id":2728,"mutability":"mutable","name":"value","nameLocation":"1360:5:20","nodeType":"VariableDeclaration","scope":2729,"src":"1355:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2727,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:20","nodeType":"StructDefinition","scope":2830,"src":"1326:46:20","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2732,"members":[{"constant":false,"id":2731,"mutability":"mutable","name":"value","nameLocation":"1415:5:20","nodeType":"VariableDeclaration","scope":2732,"src":"1407:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:20","nodeType":"StructDefinition","scope":2830,"src":"1378:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2735,"members":[{"constant":false,"id":2734,"mutability":"mutable","name":"value","nameLocation":"1470:5:20","nodeType":"VariableDeclaration","scope":2735,"src":"1462:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:20","nodeType":"StructDefinition","scope":2830,"src":"1433:49:20","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2738,"members":[{"constant":false,"id":2737,"mutability":"mutable","name":"value","nameLocation":"1523:5:20","nodeType":"VariableDeclaration","scope":2738,"src":"1516:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:20","nodeType":"StructDefinition","scope":2830,"src":"1488:47:20","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2741,"members":[{"constant":false,"id":2740,"mutability":"mutable","name":"value","nameLocation":"1574:5:20","nodeType":"VariableDeclaration","scope":2741,"src":"1568:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2739,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:20","nodeType":"StructDefinition","scope":2830,"src":"1541:45:20","visibility":"public"},{"body":{"id":2751,"nodeType":"Block","src":"1768:106:20","statements":[{"AST":{"nativeSrc":"1830:38:20","nodeType":"YulBlock","src":"1830:38:20","statements":[{"nativeSrc":"1844:14:20","nodeType":"YulAssignment","src":"1844:14:20","value":{"name":"slot","nativeSrc":"1854:4:20","nodeType":"YulIdentifier","src":"1854:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:20","nodeType":"YulIdentifier","src":"1844:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2748,"isOffset":false,"isSlot":true,"src":"1844:6:20","suffix":"slot","valueSize":1},{"declaration":2744,"isOffset":false,"isSlot":false,"src":"1854:4:20","valueSize":1}],"id":2750,"nodeType":"InlineAssembly","src":"1821:47:20"}]},"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"1592:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:20","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"slot","nameLocation":"1716:4:20","nodeType":"VariableDeclaration","scope":2752,"src":"1708:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:20"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"r","nameLocation":"1765:1:20","nodeType":"VariableDeclaration","scope":2752,"src":"1745:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2726_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2747,"nodeType":"UserDefinedTypeName","pathNode":{"id":2746,"name":"AddressSlot","nameLocations":["1745:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2726,"src":"1745:11:20"},"referencedDeclaration":2726,"src":"1745:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2726_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:20"},"scope":2830,"src":"1684:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2762,"nodeType":"Block","src":"2056:106:20","statements":[{"AST":{"nativeSrc":"2118:38:20","nodeType":"YulBlock","src":"2118:38:20","statements":[{"nativeSrc":"2132:14:20","nodeType":"YulAssignment","src":"2132:14:20","value":{"name":"slot","nativeSrc":"2142:4:20","nodeType":"YulIdentifier","src":"2142:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:20","nodeType":"YulIdentifier","src":"2132:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2759,"isOffset":false,"isSlot":true,"src":"2132:6:20","suffix":"slot","valueSize":1},{"declaration":2755,"isOffset":false,"isSlot":false,"src":"2142:4:20","valueSize":1}],"id":2761,"nodeType":"InlineAssembly","src":"2109:47:20"}]},"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"1880:87:20","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2763,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:20","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"slot","nameLocation":"2004:4:20","nodeType":"VariableDeclaration","scope":2763,"src":"1996:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:20"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"r","nameLocation":"2053:1:20","nodeType":"VariableDeclaration","scope":2763,"src":"2033:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2729_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2758,"nodeType":"UserDefinedTypeName","pathNode":{"id":2757,"name":"BooleanSlot","nameLocations":["2033:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2729,"src":"2033:11:20"},"referencedDeclaration":2729,"src":"2033:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2729_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:20"},"scope":2830,"src":"1972:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2773,"nodeType":"Block","src":"2344:106:20","statements":[{"AST":{"nativeSrc":"2406:38:20","nodeType":"YulBlock","src":"2406:38:20","statements":[{"nativeSrc":"2420:14:20","nodeType":"YulAssignment","src":"2420:14:20","value":{"name":"slot","nativeSrc":"2430:4:20","nodeType":"YulIdentifier","src":"2430:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:20","nodeType":"YulIdentifier","src":"2420:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2770,"isOffset":false,"isSlot":true,"src":"2420:6:20","suffix":"slot","valueSize":1},{"declaration":2766,"isOffset":false,"isSlot":false,"src":"2430:4:20","valueSize":1}],"id":2772,"nodeType":"InlineAssembly","src":"2397:47:20"}]},"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"2168:87:20","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2774,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:20","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"slot","nameLocation":"2292:4:20","nodeType":"VariableDeclaration","scope":2774,"src":"2284:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:20"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"r","nameLocation":"2341:1:20","nodeType":"VariableDeclaration","scope":2774,"src":"2321:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2732_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2769,"nodeType":"UserDefinedTypeName","pathNode":{"id":2768,"name":"Bytes32Slot","nameLocations":["2321:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2732,"src":"2321:11:20"},"referencedDeclaration":2732,"src":"2321:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2732_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:20"},"scope":2830,"src":"2260:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2784,"nodeType":"Block","src":"2632:106:20","statements":[{"AST":{"nativeSrc":"2694:38:20","nodeType":"YulBlock","src":"2694:38:20","statements":[{"nativeSrc":"2708:14:20","nodeType":"YulAssignment","src":"2708:14:20","value":{"name":"slot","nativeSrc":"2718:4:20","nodeType":"YulIdentifier","src":"2718:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:20","nodeType":"YulIdentifier","src":"2708:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2781,"isOffset":false,"isSlot":true,"src":"2708:6:20","suffix":"slot","valueSize":1},{"declaration":2777,"isOffset":false,"isSlot":false,"src":"2718:4:20","valueSize":1}],"id":2783,"nodeType":"InlineAssembly","src":"2685:47:20"}]},"documentation":{"id":2775,"nodeType":"StructuredDocumentation","src":"2456:87:20","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2785,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:20","nodeType":"FunctionDefinition","parameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"slot","nameLocation":"2580:4:20","nodeType":"VariableDeclaration","scope":2785,"src":"2572:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:20"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"r","nameLocation":"2629:1:20","nodeType":"VariableDeclaration","scope":2785,"src":"2609:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2735_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2780,"nodeType":"UserDefinedTypeName","pathNode":{"id":2779,"name":"Uint256Slot","nameLocations":["2609:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"2609:11:20"},"referencedDeclaration":2735,"src":"2609:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2735_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:20"},"scope":2830,"src":"2548:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2795,"nodeType":"Block","src":"2917:106:20","statements":[{"AST":{"nativeSrc":"2979:38:20","nodeType":"YulBlock","src":"2979:38:20","statements":[{"nativeSrc":"2993:14:20","nodeType":"YulAssignment","src":"2993:14:20","value":{"name":"slot","nativeSrc":"3003:4:20","nodeType":"YulIdentifier","src":"3003:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:20","nodeType":"YulIdentifier","src":"2993:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2792,"isOffset":false,"isSlot":true,"src":"2993:6:20","suffix":"slot","valueSize":1},{"declaration":2788,"isOffset":false,"isSlot":false,"src":"3003:4:20","valueSize":1}],"id":2794,"nodeType":"InlineAssembly","src":"2970:47:20"}]},"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"2744:86:20","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:20","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"slot","nameLocation":"2866:4:20","nodeType":"VariableDeclaration","scope":2796,"src":"2858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:20"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"r","nameLocation":"2914:1:20","nodeType":"VariableDeclaration","scope":2796,"src":"2895:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2738_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2791,"nodeType":"UserDefinedTypeName","pathNode":{"id":2790,"name":"StringSlot","nameLocations":["2895:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":2738,"src":"2895:10:20"},"referencedDeclaration":2738,"src":"2895:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2738_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:20"},"scope":2830,"src":"2835:188:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2806,"nodeType":"Block","src":"3225:112:20","statements":[{"AST":{"nativeSrc":"3287:44:20","nodeType":"YulBlock","src":"3287:44:20","statements":[{"nativeSrc":"3301:20:20","nodeType":"YulAssignment","src":"3301:20:20","value":{"name":"store.slot","nativeSrc":"3311:10:20","nodeType":"YulIdentifier","src":"3311:10:20"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:20","nodeType":"YulIdentifier","src":"3301:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2803,"isOffset":false,"isSlot":true,"src":"3301:6:20","suffix":"slot","valueSize":1},{"declaration":2799,"isOffset":false,"isSlot":true,"src":"3311:10:20","suffix":"slot","valueSize":1}],"id":2805,"nodeType":"InlineAssembly","src":"3278:53:20"}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"3029:101:20","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2807,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:20","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"store","nameLocation":"3173:5:20","nodeType":"VariableDeclaration","scope":2807,"src":"3158:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2798,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:20"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"r","nameLocation":"3222:1:20","nodeType":"VariableDeclaration","scope":2807,"src":"3203:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2738_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2802,"nodeType":"UserDefinedTypeName","pathNode":{"id":2801,"name":"StringSlot","nameLocations":["3203:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":2738,"src":"3203:10:20"},"referencedDeclaration":2738,"src":"3203:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2738_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:20"},"scope":2830,"src":"3135:202:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2817,"nodeType":"Block","src":"3513:106:20","statements":[{"AST":{"nativeSrc":"3575:38:20","nodeType":"YulBlock","src":"3575:38:20","statements":[{"nativeSrc":"3589:14:20","nodeType":"YulAssignment","src":"3589:14:20","value":{"name":"slot","nativeSrc":"3599:4:20","nodeType":"YulIdentifier","src":"3599:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:20","nodeType":"YulIdentifier","src":"3589:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2814,"isOffset":false,"isSlot":true,"src":"3589:6:20","suffix":"slot","valueSize":1},{"declaration":2810,"isOffset":false,"isSlot":false,"src":"3599:4:20","valueSize":1}],"id":2816,"nodeType":"InlineAssembly","src":"3566:47:20"}]},"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"3343:85:20","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2818,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:20","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"slot","nameLocation":"3463:4:20","nodeType":"VariableDeclaration","scope":2818,"src":"3455:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:20"},"returnParameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"r","nameLocation":"3510:1:20","nodeType":"VariableDeclaration","scope":2818,"src":"3492:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2813,"nodeType":"UserDefinedTypeName","pathNode":{"id":2812,"name":"BytesSlot","nameLocations":["3492:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"3492:9:20"},"referencedDeclaration":2741,"src":"3492:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:20"},"scope":2830,"src":"3433:186:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2828,"nodeType":"Block","src":"3816:112:20","statements":[{"AST":{"nativeSrc":"3878:44:20","nodeType":"YulBlock","src":"3878:44:20","statements":[{"nativeSrc":"3892:20:20","nodeType":"YulAssignment","src":"3892:20:20","value":{"name":"store.slot","nativeSrc":"3902:10:20","nodeType":"YulIdentifier","src":"3902:10:20"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:20","nodeType":"YulIdentifier","src":"3892:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2825,"isOffset":false,"isSlot":true,"src":"3892:6:20","suffix":"slot","valueSize":1},{"declaration":2821,"isOffset":false,"isSlot":true,"src":"3902:10:20","suffix":"slot","valueSize":1}],"id":2827,"nodeType":"InlineAssembly","src":"3869:53:20"}]},"documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"3625:99:20","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2829,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:20","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"store","nameLocation":"3765:5:20","nodeType":"VariableDeclaration","scope":2829,"src":"3751:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2820,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:20"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"r","nameLocation":"3813:1:20","nodeType":"VariableDeclaration","scope":2829,"src":"3795:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2824,"nodeType":"UserDefinedTypeName","pathNode":{"id":2823,"name":"BytesSlot","nameLocations":["3795:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"3795:9:20"},"referencedDeclaration":2741,"src":"3795:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:20"},"scope":2830,"src":"3729:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2831,"src":"1245:2685:20","usedErrors":[],"usedEvents":[]}],"src":"193:3738:20"},"id":20},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4824],"SignedMath":[4929],"Strings":[3085]},"id":3086,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2832,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3086,"sourceUnit":4825,"src":"127:37:21","symbolAliases":[{"foreign":{"id":2833,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"135:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3086,"sourceUnit":4930,"src":"165:49:21","symbolAliases":[{"foreign":{"id":2835,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"173:10:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"216:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":3085,"linearizedBaseContracts":[3085],"name":"Strings","nameLocation":"259:7:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2840,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:21","nodeType":"VariableDeclaration","scope":3085,"src":"273:56:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2838,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2843,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:21","nodeType":"VariableDeclaration","scope":3085,"src":"335:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2841,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"384:81:21","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2850,"name":"StringsInsufficientHexLength","nameLocation":"476:28:21","nodeType":"ErrorDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"value","nameLocation":"513:5:21","nodeType":"VariableDeclaration","scope":2850,"src":"505:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"length","nameLocation":"528:6:21","nodeType":"VariableDeclaration","scope":2850,"src":"520:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:21"},"src":"470:66:21"},{"body":{"id":2897,"nodeType":"Block","src":"708:627:21","statements":[{"id":2896,"nodeType":"UncheckedBlock","src":"718:611:21","statements":[{"assignments":[2859],"declarations":[{"constant":false,"id":2859,"mutability":"mutable","name":"length","nameLocation":"750:6:21","nodeType":"VariableDeclaration","scope":2896,"src":"742:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"770:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2860,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"759:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:21","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4644,"src":"759:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:21"},{"assignments":[2868],"declarations":[{"constant":false,"id":2868,"mutability":"mutable","name":"buffer","nameLocation":"808:6:21","nodeType":"VariableDeclaration","scope":2896,"src":"794:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2867,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2873,"initialValue":{"arguments":[{"id":2871,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"828:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2869,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:21"},{"assignments":[2875],"declarations":[{"constant":false,"id":2875,"mutability":"mutable","name":"ptr","nameLocation":"857:3:21","nodeType":"VariableDeclaration","scope":2896,"src":"849:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2876,"nodeType":"VariableDeclarationStatement","src":"849:11:21"},{"AST":{"nativeSrc":"930:67:21","nodeType":"YulBlock","src":"930:67:21","statements":[{"nativeSrc":"948:35:21","nodeType":"YulAssignment","src":"948:35:21","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:21","nodeType":"YulIdentifier","src":"959:6:21"},{"arguments":[{"kind":"number","nativeSrc":"971:2:21","nodeType":"YulLiteral","src":"971:2:21","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:21","nodeType":"YulIdentifier","src":"975:6:21"}],"functionName":{"name":"add","nativeSrc":"967:3:21","nodeType":"YulIdentifier","src":"967:3:21"},"nativeSrc":"967:15:21","nodeType":"YulFunctionCall","src":"967:15:21"}],"functionName":{"name":"add","nativeSrc":"955:3:21","nodeType":"YulIdentifier","src":"955:3:21"},"nativeSrc":"955:28:21","nodeType":"YulFunctionCall","src":"955:28:21"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:21","nodeType":"YulIdentifier","src":"948:3:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2868,"isOffset":false,"isSlot":false,"src":"959:6:21","valueSize":1},{"declaration":2859,"isOffset":false,"isSlot":false,"src":"975:6:21","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"948:3:21","valueSize":1}],"id":2877,"nodeType":"InlineAssembly","src":"921:76:21"},{"body":{"id":2892,"nodeType":"Block","src":"1023:269:21","statements":[{"expression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:21","subExpression":{"id":2879,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"1041:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2881,"nodeType":"ExpressionStatement","src":"1041:5:21"},{"AST":{"nativeSrc":"1124:86:21","nodeType":"YulBlock","src":"1124:86:21","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:21","nodeType":"YulIdentifier","src":"1154:3:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:21","nodeType":"YulIdentifier","src":"1168:5:21"},{"kind":"number","nativeSrc":"1175:2:21","nodeType":"YulLiteral","src":"1175:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:21","nodeType":"YulIdentifier","src":"1164:3:21"},"nativeSrc":"1164:14:21","nodeType":"YulFunctionCall","src":"1164:14:21"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:21","nodeType":"YulIdentifier","src":"1180:10:21"}],"functionName":{"name":"byte","nativeSrc":"1159:4:21","nodeType":"YulIdentifier","src":"1159:4:21"},"nativeSrc":"1159:32:21","nodeType":"YulFunctionCall","src":"1159:32:21"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:21","nodeType":"YulIdentifier","src":"1146:7:21"},"nativeSrc":"1146:46:21","nodeType":"YulFunctionCall","src":"1146:46:21"},"nativeSrc":"1146:46:21","nodeType":"YulExpressionStatement","src":"1146:46:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2840,"isOffset":false,"isSlot":false,"src":"1180:10:21","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"1154:3:21","valueSize":1},{"declaration":2853,"isOffset":false,"isSlot":false,"src":"1168:5:21","valueSize":1}],"id":2882,"nodeType":"InlineAssembly","src":"1115:95:21"},{"expression":{"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"1227:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2886,"nodeType":"ExpressionStatement","src":"1227:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"1260:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"nodeType":"IfStatement","src":"1256:21:21","trueBody":{"id":2890,"nodeType":"Break","src":"1272:5:21"}}]},"condition":{"hexValue":"74727565","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2893,"nodeType":"WhileStatement","src":"1010:282:21"},{"expression":{"id":2894,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"1312:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2857,"id":2895,"nodeType":"Return","src":"1305:13:21"}]}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"542:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:21","nodeType":"FunctionDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"value","nameLocation":"663:5:21","nodeType":"VariableDeclaration","scope":2898,"src":"655:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:21"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"693:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2855,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:21"},"scope":3085,"src":"637:698:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"1511:92:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1542:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:21","trueExpression":{"hexValue":"2d","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1588:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2916,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"1573:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4929_$","typeString":"type(library SignedMath)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:21","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4928,"src":"1573:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2915,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"1564:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2906,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:21","typeDescriptions":{}}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:21","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:21","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2905,"id":2922,"nodeType":"Return","src":"1521:75:21"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"1341:89:21","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:21","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"value","nameLocation":"1466:5:21","nodeType":"VariableDeclaration","scope":2924,"src":"1459:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2900,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:21"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"1496:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2903,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:21"},"scope":3085,"src":"1435:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2943,"nodeType":"Block","src":"1782:100:21","statements":[{"id":2942,"nodeType":"UncheckedBlock","src":"1792:84:21","statements":[{"expression":{"arguments":[{"id":2933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"1835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"1854:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2934,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"1842:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4824_$","typeString":"type(library Math)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:21","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4766,"src":"1842:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2932,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2944,3027,3047],"referencedDeclaration":3027,"src":"1823:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2931,"id":2941,"nodeType":"Return","src":"1816:49:21"}]}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"1609:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2944,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:21","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"value","nameLocation":"1737:5:21","nodeType":"VariableDeclaration","scope":2944,"src":"1729:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:21"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2944,"src":"1767:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2929,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:21"},"scope":3085,"src":"1708:174:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"2095:435:21","statements":[{"assignments":[2955],"declarations":[{"constant":false,"id":2955,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:21","nodeType":"VariableDeclaration","scope":3026,"src":"2105:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2957,"initialValue":{"id":2956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"2126:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:21"},{"assignments":[2959],"declarations":[{"constant":false,"id":2959,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:21","nodeType":"VariableDeclaration","scope":3026,"src":"2141:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2958,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2968,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2963,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"2177:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2960,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:21"},{"expression":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2969,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"2198:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2971,"indexExpression":{"hexValue":"30","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2974,"nodeType":"ExpressionStatement","src":"2198:15:21"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2975,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"2223:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2977,"indexExpression":{"hexValue":"31","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2980,"nodeType":"ExpressionStatement","src":"2223:15:21"},{"body":{"id":3009,"nodeType":"Block","src":"2293:95:21","statements":[{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2995,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"2307:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2997,"indexExpression":{"id":2996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"2314:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2998,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"2319:10:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3002,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2330:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3004,"nodeType":"ExpressionStatement","src":"2307:40:21"},{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2361:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"2361:16:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"2281:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3010,"initializationExpression":{"assignments":[2982],"declarations":[{"constant":false,"id":2982,"mutability":"mutable","name":"i","nameLocation":"2261:1:21","nodeType":"VariableDeclaration","scope":3010,"src":"2253:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2988,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2984,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"2269:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:21"},"loopExpression":{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:21","subExpression":{"id":2992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"2290:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2994,"nodeType":"ExpressionStatement","src":"2288:3:21"},"nodeType":"ForStatement","src":"2248:140:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2401:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3020,"nodeType":"IfStatement","src":"2397:96:21","trueBody":{"id":3019,"nodeType":"Block","src":"2418:75:21","statements":[{"errorCall":{"arguments":[{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"2468:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3016,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"2475:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3014,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"2439:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3018,"nodeType":"RevertStatement","src":"2432:50:21"}]}},{"expression":{"arguments":[{"id":3023,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"2516:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3021,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:21","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2953,"id":3025,"nodeType":"Return","src":"2502:21:21"}]},"documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"1888:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:21","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"value","nameLocation":"2034:5:21","nodeType":"VariableDeclaration","scope":3027,"src":"2026:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"length","nameLocation":"2049:6:21","nodeType":"VariableDeclaration","scope":3027,"src":"2041:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:21"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3027,"src":"2080:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2951,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:21"},"scope":3085,"src":"2005:525:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"2762:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3040,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"2807:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3038,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:21","typeDescriptions":{}}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:21","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3043,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"2815:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3035,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2944,3027,3047],"referencedDeclaration":3027,"src":"2779:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3034,"id":3045,"nodeType":"Return","src":"2772:58:21"}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"2536:148:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:21","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"addr","nameLocation":"2718:4:21","nodeType":"VariableDeclaration","scope":3047,"src":"2710:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:21"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"2747:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3032,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:21"},"scope":3085,"src":"2689:148:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"2992:104:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"3015:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3057,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:21","typeDescriptions":{}}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:21","memberName":"length","nodeType":"MemberAccess","src":"3009:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"3034:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3062,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:21","typeDescriptions":{}}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:21","memberName":"length","nodeType":"MemberAccess","src":"3028:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"3063:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3069,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:21","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3068,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3077,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"3086:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3075,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:21","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3074,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3056,"id":3082,"nodeType":"Return","src":"3002:87:21"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"2843:66:21","text":" @dev Returns true if the two strings are equal."},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:21","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"a","nameLocation":"2943:1:21","nodeType":"VariableDeclaration","scope":3084,"src":"2929:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3049,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"b","nameLocation":"2960:1:21","nodeType":"VariableDeclaration","scope":3084,"src":"2946:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3051,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:21"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3084,"src":"2986:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3054,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:21"},"scope":3085,"src":"2914:182:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3086,"src":"251:2847:21","usedErrors":[2850],"usedEvents":[]}],"src":"101:2998:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3433]},"id":3434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3087,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"138:205:22","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3433,"linearizedBaseContracts":[3433],"name":"ECDSA","nameLocation":"352:5:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3093,"members":[{"id":3089,"name":"NoError","nameLocation":"392:7:22","nodeType":"EnumValue","src":"392:7:22"},{"id":3090,"name":"InvalidSignature","nameLocation":"409:16:22","nodeType":"EnumValue","src":"409:16:22"},{"id":3091,"name":"InvalidSignatureLength","nameLocation":"435:22:22","nodeType":"EnumValue","src":"435:22:22"},{"id":3092,"name":"InvalidSignatureS","nameLocation":"467:17:22","nodeType":"EnumValue","src":"467:17:22"}],"name":"RecoverError","nameLocation":"369:12:22","nodeType":"EnumDefinition","src":"364:126:22"},{"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"496:63:22","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3096,"name":"ECDSAInvalidSignature","nameLocation":"570:21:22","nodeType":"ErrorDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"591:2:22"},"src":"564:30:22"},{"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"600:60:22","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3101,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:22","nodeType":"ErrorDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"length","nameLocation":"707:6:22","nodeType":"VariableDeclaration","scope":3101,"src":"699:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:22"},"src":"665:50:22"},{"documentation":{"id":3102,"nodeType":"StructuredDocumentation","src":"721:85:22","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3106,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:22","nodeType":"ErrorDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"s","nameLocation":"848:1:22","nodeType":"VariableDeclaration","scope":3106,"src":"840:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:22"},"src":"811:40:22"},{"body":{"id":3158,"nodeType":"Block","src":"2242:653:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3121,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2256:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:22","memberName":"length","nodeType":"MemberAccess","src":"2256:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3156,"nodeType":"Block","src":"2781:108:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3143,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:22","typeDescriptions":{}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3147,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"2815:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3093_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:22","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3091,"src":"2815:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3151,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2860:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:22","memberName":"length","nodeType":"MemberAccess","src":"2860:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:22","typeDescriptions":{}}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3120,"id":3155,"nodeType":"Return","src":"2795:83:22"}]},"id":3157,"nodeType":"IfStatement","src":"2252:637:22","trueBody":{"id":3142,"nodeType":"Block","src":"2280:495:22","statements":[{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"r","nameLocation":"2302:1:22","nodeType":"VariableDeclaration","scope":3142,"src":"2294:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3127,"nodeType":"VariableDeclarationStatement","src":"2294:9:22"},{"assignments":[3129],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"s","nameLocation":"2325:1:22","nodeType":"VariableDeclaration","scope":3142,"src":"2317:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3130,"nodeType":"VariableDeclarationStatement","src":"2317:9:22"},{"assignments":[3132],"declarations":[{"constant":false,"id":3132,"mutability":"mutable","name":"v","nameLocation":"2346:1:22","nodeType":"VariableDeclaration","scope":3142,"src":"2340:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3131,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3133,"nodeType":"VariableDeclarationStatement","src":"2340:7:22"},{"AST":{"nativeSrc":"2548:171:22","nodeType":"YulBlock","src":"2548:171:22","statements":[{"nativeSrc":"2566:32:22","nodeType":"YulAssignment","src":"2566:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:22","nodeType":"YulIdentifier","src":"2581:9:22"},{"kind":"number","nativeSrc":"2592:4:22","nodeType":"YulLiteral","src":"2592:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:22","nodeType":"YulIdentifier","src":"2577:3:22"},"nativeSrc":"2577:20:22","nodeType":"YulFunctionCall","src":"2577:20:22"}],"functionName":{"name":"mload","nativeSrc":"2571:5:22","nodeType":"YulIdentifier","src":"2571:5:22"},"nativeSrc":"2571:27:22","nodeType":"YulFunctionCall","src":"2571:27:22"},"variableNames":[{"name":"r","nativeSrc":"2566:1:22","nodeType":"YulIdentifier","src":"2566:1:22"}]},{"nativeSrc":"2615:32:22","nodeType":"YulAssignment","src":"2615:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:22","nodeType":"YulIdentifier","src":"2630:9:22"},{"kind":"number","nativeSrc":"2641:4:22","nodeType":"YulLiteral","src":"2641:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:22","nodeType":"YulIdentifier","src":"2626:3:22"},"nativeSrc":"2626:20:22","nodeType":"YulFunctionCall","src":"2626:20:22"}],"functionName":{"name":"mload","nativeSrc":"2620:5:22","nodeType":"YulIdentifier","src":"2620:5:22"},"nativeSrc":"2620:27:22","nodeType":"YulFunctionCall","src":"2620:27:22"},"variableNames":[{"name":"s","nativeSrc":"2615:1:22","nodeType":"YulIdentifier","src":"2615:1:22"}]},{"nativeSrc":"2664:41:22","nodeType":"YulAssignment","src":"2664:41:22","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:22","nodeType":"YulLiteral","src":"2674:1:22","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:22","nodeType":"YulIdentifier","src":"2687:9:22"},{"kind":"number","nativeSrc":"2698:4:22","nodeType":"YulLiteral","src":"2698:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:22","nodeType":"YulIdentifier","src":"2683:3:22"},"nativeSrc":"2683:20:22","nodeType":"YulFunctionCall","src":"2683:20:22"}],"functionName":{"name":"mload","nativeSrc":"2677:5:22","nodeType":"YulIdentifier","src":"2677:5:22"},"nativeSrc":"2677:27:22","nodeType":"YulFunctionCall","src":"2677:27:22"}],"functionName":{"name":"byte","nativeSrc":"2669:4:22","nodeType":"YulIdentifier","src":"2669:4:22"},"nativeSrc":"2669:36:22","nodeType":"YulFunctionCall","src":"2669:36:22"},"variableNames":[{"name":"v","nativeSrc":"2664:1:22","nodeType":"YulIdentifier","src":"2664:1:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3126,"isOffset":false,"isSlot":false,"src":"2566:1:22","valueSize":1},{"declaration":3129,"isOffset":false,"isSlot":false,"src":"2615:1:22","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"2581:9:22","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"2630:9:22","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"2687:9:22","valueSize":1},{"declaration":3132,"isOffset":false,"isSlot":false,"src":"2664:1:22","valueSize":1}],"id":3134,"nodeType":"InlineAssembly","src":"2539:180:22"},{"expression":{"arguments":[{"id":3136,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"2750:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3137,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"2756:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3138,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"2759:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3139,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2762:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3135,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3159,3239,3347],"referencedDeclaration":3347,"src":"2739:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3120,"id":3141,"nodeType":"Return","src":"2732:32:22"}]}}]},"documentation":{"id":3107,"nodeType":"StructuredDocumentation","src":"857:1267:22","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3159,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:22","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"hash","nameLocation":"2157:4:22","nodeType":"VariableDeclaration","scope":3159,"src":"2149:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"signature","nameLocation":"2176:9:22","nodeType":"VariableDeclaration","scope":3159,"src":"2163:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3110,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:22"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"2210:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"2219:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3116,"nodeType":"UserDefinedTypeName","pathNode":{"id":3115,"name":"RecoverError","nameLocations":["2219:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"2219:12:22"},"referencedDeclaration":3093,"src":"2219:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"2233:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:22"},"scope":3433,"src":"2129:766:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3188,"nodeType":"Block","src":"3789:168:22","statements":[{"assignments":[3170,3173,3175],"declarations":[{"constant":false,"id":3170,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:22","nodeType":"VariableDeclaration","scope":3188,"src":"3800:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"error","nameLocation":"3832:5:22","nodeType":"VariableDeclaration","scope":3188,"src":"3819:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3172,"nodeType":"UserDefinedTypeName","pathNode":{"id":3171,"name":"RecoverError","nameLocations":["3819:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"3819:12:22"},"referencedDeclaration":3093,"src":"3819:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:22","nodeType":"VariableDeclaration","scope":3188,"src":"3839:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3180,"initialValue":{"arguments":[{"id":3177,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"3870:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3178,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"3876:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3176,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3159,3239,3347],"referencedDeclaration":3159,"src":"3859:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:22"},{"expression":{"arguments":[{"id":3182,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"3908:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},{"id":3183,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"3915:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3181,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3896:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3093_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3185,"nodeType":"ExpressionStatement","src":"3896:28:22"},{"expression":{"id":3186,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"3941:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3168,"id":3187,"nodeType":"Return","src":"3934:16:22"}]},"documentation":{"id":3160,"nodeType":"StructuredDocumentation","src":"2901:796:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3189,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:22","nodeType":"FunctionDefinition","parameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"hash","nameLocation":"3727:4:22","nodeType":"VariableDeclaration","scope":3189,"src":"3719:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"signature","nameLocation":"3746:9:22","nodeType":"VariableDeclaration","scope":3189,"src":"3733:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3163,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:22"},"returnParameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3189,"src":"3780:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:22"},"scope":3433,"src":"3702:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3238,"nodeType":"Block","src":"4285:342:22","statements":[{"id":3237,"nodeType":"UncheckedBlock","src":"4295:326:22","statements":[{"assignments":[3207],"declarations":[{"constant":false,"id":3207,"mutability":"mutable","name":"s","nameLocation":"4327:1:22","nodeType":"VariableDeclaration","scope":3237,"src":"4319:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3214,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4331:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:22","typeDescriptions":{}}},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:22"},{"assignments":[3216],"declarations":[{"constant":false,"id":3216,"mutability":"mutable","name":"v","nameLocation":"4528:1:22","nodeType":"VariableDeclaration","scope":3237,"src":"4522:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3215,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3221,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4547:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:22","typeDescriptions":{}}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:22","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3217,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:22","typeDescriptions":{}}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:22"},{"expression":{"arguments":[{"id":3231,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4596:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3232,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"4602:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3233,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"4605:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3234,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"4608:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3230,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3159,3239,3347],"referencedDeclaration":3347,"src":"4585:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3205,"id":3236,"nodeType":"Return","src":"4578:32:22"}]}]},"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"3963:205:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":3239,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:22","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"hash","nameLocation":"4201:4:22","nodeType":"VariableDeclaration","scope":3239,"src":"4193:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"r","nameLocation":"4215:1:22","nodeType":"VariableDeclaration","scope":3239,"src":"4207:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"vs","nameLocation":"4226:2:22","nodeType":"VariableDeclaration","scope":3239,"src":"4218:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:22"},"returnParameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"4253:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"4262:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3201,"nodeType":"UserDefinedTypeName","pathNode":{"id":3200,"name":"RecoverError","nameLocations":["4262:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"4262:12:22"},"referencedDeclaration":3093,"src":"4262:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"4276:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:22"},"scope":3433,"src":"4173:454:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3271,"nodeType":"Block","src":"4840:164:22","statements":[{"assignments":[3252,3255,3257],"declarations":[{"constant":false,"id":3252,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:22","nodeType":"VariableDeclaration","scope":3271,"src":"4851:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3251,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"error","nameLocation":"4883:5:22","nodeType":"VariableDeclaration","scope":3271,"src":"4870:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3254,"nodeType":"UserDefinedTypeName","pathNode":{"id":3253,"name":"RecoverError","nameLocations":["4870:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"4870:12:22"},"referencedDeclaration":3093,"src":"4870:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3257,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:22","nodeType":"VariableDeclaration","scope":3271,"src":"4890:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3263,"initialValue":{"arguments":[{"id":3259,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"4921:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3260,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"4927:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3261,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"4930:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3258,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3159,3239,3347],"referencedDeclaration":3239,"src":"4910:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:22"},{"expression":{"arguments":[{"id":3265,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"4955:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},{"id":3266,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"4962:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3264,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"4943:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3093_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3268,"nodeType":"ExpressionStatement","src":"4943:28:22"},{"expression":{"id":3269,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"4988:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3250,"id":3270,"nodeType":"Return","src":"4981:16:22"}]},"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"4633:116:22","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3272,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:22","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"hash","nameLocation":"4779:4:22","nodeType":"VariableDeclaration","scope":3272,"src":"4771:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"r","nameLocation":"4793:1:22","nodeType":"VariableDeclaration","scope":3272,"src":"4785:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"vs","nameLocation":"4804:2:22","nodeType":"VariableDeclaration","scope":3272,"src":"4796:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:22"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3272,"src":"4831:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:22"},"scope":3433,"src":"4754:250:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"5298:1372:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3293,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6194:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:22","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3307,"nodeType":"IfStatement","src":"6182:164:22","trueBody":{"id":3306,"nodeType":"Block","src":"6267:79:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:22","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3301,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"6301:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3093_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:22","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3092,"src":"6301:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},{"id":3303,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6333:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3290,"id":3305,"nodeType":"Return","src":"6281:54:22"}]}},{"assignments":[3309],"declarations":[{"constant":false,"id":3309,"mutability":"mutable","name":"signer","nameLocation":"6448:6:22","nodeType":"VariableDeclaration","scope":3346,"src":"6440:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3316,"initialValue":{"arguments":[{"id":3311,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"6467:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3312,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"6473:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3313,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"6476:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3314,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6479:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3310,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:22","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"6495:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:22","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3336,"nodeType":"IfStatement","src":"6491:113:22","trueBody":{"id":3335,"nodeType":"Block","src":"6517:87:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3323,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:22","typeDescriptions":{}}},"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3327,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"6551:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3093_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:22","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"6551:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:22","typeDescriptions":{}}},"id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3290,"id":3334,"nodeType":"Return","src":"6531:62:22"}]}},{"expression":{"components":[{"id":3337,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"6622:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3338,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"6630:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3093_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:22","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3089,"src":"6630:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:22","typeDescriptions":{}}},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3290,"id":3345,"nodeType":"Return","src":"6614:49:22"}]},"documentation":{"id":3273,"nodeType":"StructuredDocumentation","src":"5010:125:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:22","nodeType":"FunctionDefinition","parameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"hash","nameLocation":"5177:4:22","nodeType":"VariableDeclaration","scope":3347,"src":"5169:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"v","nameLocation":"5197:1:22","nodeType":"VariableDeclaration","scope":3347,"src":"5191:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3276,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"r","nameLocation":"5216:1:22","nodeType":"VariableDeclaration","scope":3347,"src":"5208:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"s","nameLocation":"5235:1:22","nodeType":"VariableDeclaration","scope":3347,"src":"5227:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:22"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"5266:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"5275:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3286,"nodeType":"UserDefinedTypeName","pathNode":{"id":3285,"name":"RecoverError","nameLocations":["5275:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"5275:12:22"},"referencedDeclaration":3093,"src":"5275:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"5289:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:22"},"scope":3433,"src":"5140:1530:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3382,"nodeType":"Block","src":"6897:166:22","statements":[{"assignments":[3362,3365,3367],"declarations":[{"constant":false,"id":3362,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:22","nodeType":"VariableDeclaration","scope":3382,"src":"6908:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3361,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"error","nameLocation":"6940:5:22","nodeType":"VariableDeclaration","scope":3382,"src":"6927:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3364,"nodeType":"UserDefinedTypeName","pathNode":{"id":3363,"name":"RecoverError","nameLocations":["6927:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"6927:12:22"},"referencedDeclaration":3093,"src":"6927:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3367,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:22","nodeType":"VariableDeclaration","scope":3382,"src":"6947:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3374,"initialValue":{"arguments":[{"id":3369,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"6978:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3370,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"6984:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3371,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"6987:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3372,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"6990:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3368,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3159,3239,3347],"referencedDeclaration":3347,"src":"6967:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3093_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:22"},{"expression":{"arguments":[{"id":3376,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"7014:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},{"id":3377,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"7021:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3375,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"7002:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3093_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3379,"nodeType":"ExpressionStatement","src":"7002:28:22"},{"expression":{"id":3380,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7047:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3360,"id":3381,"nodeType":"Return","src":"7040:16:22"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"6676:122:22","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:22","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"hash","nameLocation":"6828:4:22","nodeType":"VariableDeclaration","scope":3383,"src":"6820:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"v","nameLocation":"6840:1:22","nodeType":"VariableDeclaration","scope":3383,"src":"6834:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3351,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"r","nameLocation":"6851:1:22","nodeType":"VariableDeclaration","scope":3383,"src":"6843:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"s","nameLocation":"6862:1:22","nodeType":"VariableDeclaration","scope":3383,"src":"6854:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:22"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"6888:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3358,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:22"},"scope":3433,"src":"6803:260:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3431,"nodeType":"Block","src":"7268:460:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"7282:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3393,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"7291:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3093_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:22","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3089,"src":"7291:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"7378:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3399,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"7387:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3093_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:22","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"7387:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3406,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"7483:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3407,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"7492:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3093_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:22","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3091,"src":"7492:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"7617:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3419,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"7626:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3093_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:22","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3092,"src":"7626:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"IfStatement","src":"7613:109:22","trueBody":{"id":3426,"nodeType":"Block","src":"7658:64:22","statements":[{"errorCall":{"arguments":[{"id":3423,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"7702:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3422,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"7679:22:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3425,"nodeType":"RevertStatement","src":"7672:39:22"}]}},"id":3428,"nodeType":"IfStatement","src":"7479:243:22","trueBody":{"id":3417,"nodeType":"Block","src":"7529:78:22","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3413,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"7586:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:22","typeDescriptions":{}}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3410,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"7550:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3416,"nodeType":"RevertStatement","src":"7543:53:22"}]}},"id":3429,"nodeType":"IfStatement","src":"7374:348:22","trueBody":{"id":3405,"nodeType":"Block","src":"7418:55:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3402,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"7439:21:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3404,"nodeType":"RevertStatement","src":"7432:30:22"}]}},"id":3430,"nodeType":"IfStatement","src":"7278:444:22","trueBody":{"id":3397,"nodeType":"Block","src":"7313:55:22","statements":[{"functionReturnParameters":3391,"id":3396,"nodeType":"Return","src":"7327:7:22"}]}}]},"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"7069:122:22","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:22","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"error","nameLocation":"7230:5:22","nodeType":"VariableDeclaration","scope":3432,"src":"7217:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3386,"nodeType":"UserDefinedTypeName","pathNode":{"id":3385,"name":"RecoverError","nameLocations":["7217:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"7217:12:22"},"referencedDeclaration":3093,"src":"7217:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3093","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:22","nodeType":"VariableDeclaration","scope":3432,"src":"7237:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:22"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[],"src":"7268:0:22"},"scope":3433,"src":"7196:532:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3434,"src":"344:7386:22","usedErrors":[3096,3101,3106],"usedEvents":[]}],"src":"112:7619:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3660],"IERC5267":[719],"MessageHashUtils":[3734],"ShortString":[2509],"ShortStrings":[2720]},"id":3661,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3435,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3661,"sourceUnit":3735,"src":"139:56:23","symbolAliases":[{"foreign":{"id":3436,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"147:16:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3661,"sourceUnit":2721,"src":"196:62:23","symbolAliases":[{"foreign":{"id":3438,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"204:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3439,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"218:11:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3661,"sourceUnit":720,"src":"259:55:23","symbolAliases":[{"foreign":{"id":3441,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"267:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3444,"name":"IERC5267","nameLocations":["1988:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"1988:8:23"},"id":3445,"nodeType":"InheritanceSpecifier","src":"1988:8:23"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"316:1643:23","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3660,"linearizedBaseContracts":[3660,719],"name":"EIP712","nameLocation":"1978:6:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3447,"libraryName":{"id":3446,"name":"ShortStrings","nameLocations":["2009:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":2720,"src":"2009:12:23"},"nodeType":"UsingForDirective","src":"2003:25:23"},{"constant":true,"id":3452,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:23","nodeType":"VariableDeclaration","scope":3660,"src":"2034:140:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3449,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3454,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:23","nodeType":"VariableDeclaration","scope":3660,"src":"2373:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3456,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:23","nodeType":"VariableDeclaration","scope":3660,"src":"2427:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3458,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:23","nodeType":"VariableDeclaration","scope":3660,"src":"2473:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3457,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3460,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:23","nodeType":"VariableDeclaration","scope":3660,"src":"2517:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3462,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:23","nodeType":"VariableDeclaration","scope":3660,"src":"2560:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3465,"mutability":"immutable","name":"_name","nameLocation":"2637:5:23","nodeType":"VariableDeclaration","scope":3660,"src":"2607:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"},"typeName":{"id":3464,"nodeType":"UserDefinedTypeName","pathNode":{"id":3463,"name":"ShortString","nameLocations":["2607:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"2607:11:23"},"referencedDeclaration":2509,"src":"2607:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3468,"mutability":"immutable","name":"_version","nameLocation":"2678:8:23","nodeType":"VariableDeclaration","scope":3660,"src":"2648:38:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"},"typeName":{"id":3467,"nodeType":"UserDefinedTypeName","pathNode":{"id":3466,"name":"ShortString","nameLocations":["2648:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"2648:11:23"},"referencedDeclaration":2509,"src":"2648:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3470,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:23","nodeType":"VariableDeclaration","scope":3660,"src":"2692:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3469,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3472,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:23","nodeType":"VariableDeclaration","scope":3660,"src":"2726:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3471,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3529,"nodeType":"Block","src":"3383:376:23","statements":[{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"3393:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3483,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"3432:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3481,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"3401:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:23","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"3401:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2509_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"src":"3393:53:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"id":3486,"nodeType":"ExpressionStatement","src":"3393:53:23"},{"expression":{"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3487,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"3456:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3490,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"3501:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3488,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"3467:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:23","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"3467:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2509_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"src":"3456:62:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"id":3493,"nodeType":"ExpressionStatement","src":"3456:62:23"},{"expression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3494,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"3528:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3498,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"3558:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3496,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:23","typeDescriptions":{}}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3495,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3502,"nodeType":"ExpressionStatement","src":"3528:36:23"},{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3503,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"3574:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3507,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"3607:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3505,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:23","typeDescriptions":{}}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3504,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3511,"nodeType":"ExpressionStatement","src":"3574:42:23"},{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3512,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3627:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3513,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3516,"nodeType":"ExpressionStatement","src":"3627:30:23"},{"expression":{"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3517,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"3667:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3518,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"3692:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3521,"nodeType":"ExpressionStatement","src":"3667:48:23"},{"expression":{"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3522,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"3725:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3525,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3660","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3660","typeString":"contract EIP712"}],"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3523,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:23","typeDescriptions":{}}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3528,"nodeType":"ExpressionStatement","src":"3725:27:23"}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"2764:559:23","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3530,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"name","nameLocation":"3354:4:23","nodeType":"VariableDeclaration","scope":3530,"src":"3340:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3474,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"version","nameLocation":"3374:7:23","nodeType":"VariableDeclaration","scope":3530,"src":"3360:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3476,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:23"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[],"src":"3383:0:23"},"scope":3660,"src":"3328:431:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3555,"nodeType":"Block","src":"3907:200:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3538,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3660","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3660","typeString":"contract EIP712"}],"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3536,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:23","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3540,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"3938:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3542,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3544,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3970:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3553,"nodeType":"Block","src":"4046:55:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3550,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"4067:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3535,"id":3552,"nodeType":"Return","src":"4060:30:23"}]},"id":3554,"nodeType":"IfStatement","src":"3917:184:23","trueBody":{"id":3549,"nodeType":"Block","src":"3986:54:23","statements":[{"expression":{"id":3547,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"4007:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3535,"id":3548,"nodeType":"Return","src":"4000:29:23"}]}}]},"documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"3765:75:23","text":" @dev Returns the domain separator for the current chain."},"id":3556,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:23","nodeType":"FunctionDefinition","parameters":{"id":3532,"nodeType":"ParameterList","parameters":[],"src":"3872:2:23"},"returnParameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3556,"src":"3898:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:23"},"scope":3660,"src":"3845:262:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3576,"nodeType":"Block","src":"4177:115:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":3564,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"4215:9:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3565,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"4226:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3566,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"4239:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3567,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3571,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3660","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3660","typeString":"contract EIP712"}],"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3569,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:23","typeDescriptions":{}}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3562,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:23","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3561,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3560,"id":3575,"nodeType":"Return","src":"4187:98:23"}]},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:23","nodeType":"FunctionDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[],"src":"4143:2:23"},"returnParameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3577,"src":"4168:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:23"},"scope":3660,"src":"4113:179:23","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3592,"nodeType":"Block","src":"5003:90:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3587,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"5053:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3589,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5075:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3585,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"5020:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3734_$","typeString":"type(library MessageHashUtils)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:23","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3733,"src":"5020:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3584,"id":3591,"nodeType":"Return","src":"5013:73:23"}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"4298:614:23","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3593,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:23","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:23","nodeType":"VariableDeclaration","scope":3593,"src":"4943:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:23"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3593,"src":"4994:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:23"},"scope":3660,"src":"4917:176:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[718],"body":{"id":3634,"nodeType":"Block","src":"5472:229:23","statements":[{"expression":{"components":[{"hexValue":"0f","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3613,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"5533:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3615,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"5560:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3617,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3621,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3660","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3660","typeString":"contract EIP712"}],"id":3620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3619,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:23","typeDescriptions":{}}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:23","typeDescriptions":{}}},"id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3628,"nodeType":"ArrayTypeName","src":"5672:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3611,"id":3633,"nodeType":"Return","src":"5482:212:23"}]},"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"5099:40:23","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:23","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[],"src":"5165:2:23"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"fields","nameLocation":"5249:6:23","nodeType":"VariableDeclaration","scope":3635,"src":"5242:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3596,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"name","nameLocation":"5283:4:23","nodeType":"VariableDeclaration","scope":3635,"src":"5269:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3598,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"version","nameLocation":"5315:7:23","nodeType":"VariableDeclaration","scope":3635,"src":"5301:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3600,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:23","nodeType":"VariableDeclaration","scope":3635,"src":"5336:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:23","nodeType":"VariableDeclaration","scope":3635,"src":"5365:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3604,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3607,"mutability":"mutable","name":"salt","nameLocation":"5412:4:23","nodeType":"VariableDeclaration","scope":3635,"src":"5404:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:23","nodeType":"VariableDeclaration","scope":3635,"src":"5430:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ArrayTypeName","src":"5430:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:23"},"scope":3660,"src":"5144:557:23","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3646,"nodeType":"Block","src":"6082:65:23","statements":[{"expression":{"arguments":[{"id":3643,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"6126:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3641,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"6099:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:23","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2688,"src":"6099:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2509_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3640,"id":3645,"nodeType":"Return","src":"6092:48:23"}]},"documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"5707:256:23","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:23","nodeType":"FunctionDefinition","parameters":{"id":3637,"nodeType":"ParameterList","parameters":[],"src":"6041:2:23"},"returnParameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3647,"src":"6067:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3638,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:23"},"scope":3660,"src":"6021:126:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3658,"nodeType":"Block","src":"6537:71:23","statements":[{"expression":{"arguments":[{"id":3655,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"6584:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3653,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"6554:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2509","typeString":"ShortString"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:23","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2688,"src":"6554:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2509_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2509_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3652,"id":3657,"nodeType":"Return","src":"6547:54:23"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"6153:262:23","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3659,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:23","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[],"src":"6496:2:23"},"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3659,"src":"6522:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3650,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:23"},"scope":3660,"src":"6473:135:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3661,"src":"1960:4650:23","usedErrors":[2517,2519],"usedEvents":[699]}],"src":"113:6498:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3734],"Strings":[3085]},"id":3735,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3662,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3735,"sourceUnit":3086,"src":"149:39:24","symbolAliases":[{"foreign":{"id":3663,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"157:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"190:330:24","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3734,"linearizedBaseContracts":[3734],"name":"MessageHashUtils","nameLocation":"529:16:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":3674,"nodeType":"Block","src":"1314:368:24","statements":[{"AST":{"nativeSrc":"1376:300:24","nodeType":"YulBlock","src":"1376:300:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:24","nodeType":"YulLiteral","src":"1397:4:24","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:24","nodeType":"YulLiteral","src":"1403:34:24","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:24","nodeType":"YulIdentifier","src":"1390:6:24"},"nativeSrc":"1390:48:24","nodeType":"YulFunctionCall","src":"1390:48:24"},"nativeSrc":"1390:48:24","nodeType":"YulExpressionStatement","src":"1390:48:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:24","nodeType":"YulLiteral","src":"1499:4:24","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:24","nodeType":"YulIdentifier","src":"1505:11:24"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:24","nodeType":"YulIdentifier","src":"1492:6:24"},"nativeSrc":"1492:25:24","nodeType":"YulFunctionCall","src":"1492:25:24"},"nativeSrc":"1492:25:24","nodeType":"YulExpressionStatement","src":"1492:25:24"},{"nativeSrc":"1571:31:24","nodeType":"YulAssignment","src":"1571:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:24","nodeType":"YulLiteral","src":"1591:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:24","nodeType":"YulLiteral","src":"1597:4:24","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:24","nodeType":"YulIdentifier","src":"1581:9:24"},"nativeSrc":"1581:21:24","nodeType":"YulFunctionCall","src":"1581:21:24"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:24","nodeType":"YulIdentifier","src":"1571:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3671,"isOffset":false,"isSlot":false,"src":"1571:6:24","valueSize":1},{"declaration":3668,"isOffset":false,"isSlot":false,"src":"1505:11:24","valueSize":1}],"id":3673,"nodeType":"InlineAssembly","src":"1367:309:24"}]},"documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"552:665:24","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:24","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:24","nodeType":"VariableDeclaration","scope":3675,"src":"1254:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:24"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"digest","nameLocation":"1306:6:24","nodeType":"VariableDeclaration","scope":3675,"src":"1298:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:24"},"scope":3734,"src":"1222:460:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3700,"nodeType":"Block","src":"2234:143:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3692,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"2343:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:24","memberName":"length","nodeType":"MemberAccess","src":"2343:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3690,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2326:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3085_$","typeString":"type(library Strings)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:24","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2898,"src":"2326:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3688,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:24","typeDescriptions":{}}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3696,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"2361:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3684,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:24","typeDescriptions":{}}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:24","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3683,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3682,"id":3699,"nodeType":"Return","src":"2244:126:24"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"1688:455:24","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3701,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:24","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"message","nameLocation":"2193:7:24","nodeType":"VariableDeclaration","scope":3701,"src":"2180:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3677,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:24"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3701,"src":"2225:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:24"},"scope":3734,"src":"2148:229:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3720,"nodeType":"Block","src":"2831:80:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3715,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"2887:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3716,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"2898:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3712,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3711,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3710,"id":3719,"nodeType":"Return","src":"2841:63:24"}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"2383:332:24","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3721,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:24","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"validator","nameLocation":"2769:9:24","nodeType":"VariableDeclaration","scope":3721,"src":"2761:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3703,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"data","nameLocation":"2793:4:24","nodeType":"VariableDeclaration","scope":3721,"src":"2780:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3705,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:24"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3721,"src":"2822:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:24"},"scope":3734,"src":"2720:191:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3732,"nodeType":"Block","src":"3462:292:24","statements":[{"AST":{"nativeSrc":"3524:224:24","nodeType":"YulBlock","src":"3524:224:24","statements":[{"nativeSrc":"3538:22:24","nodeType":"YulVariableDeclaration","src":"3538:22:24","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:24","nodeType":"YulLiteral","src":"3555:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:24","nodeType":"YulIdentifier","src":"3549:5:24"},"nativeSrc":"3549:11:24","nodeType":"YulFunctionCall","src":"3549:11:24"},"variables":[{"name":"ptr","nativeSrc":"3542:3:24","nodeType":"YulTypedName","src":"3542:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:24","nodeType":"YulIdentifier","src":"3580:3:24"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:24","nodeType":"YulLiteral","src":"3585:10:24","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:24","nodeType":"YulIdentifier","src":"3573:6:24"},"nativeSrc":"3573:23:24","nodeType":"YulFunctionCall","src":"3573:23:24"},"nativeSrc":"3573:23:24","nodeType":"YulExpressionStatement","src":"3573:23:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:24","nodeType":"YulIdentifier","src":"3620:3:24"},{"kind":"number","nativeSrc":"3625:4:24","nodeType":"YulLiteral","src":"3625:4:24","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:24","nodeType":"YulIdentifier","src":"3616:3:24"},"nativeSrc":"3616:14:24","nodeType":"YulFunctionCall","src":"3616:14:24"},{"name":"domainSeparator","nativeSrc":"3632:15:24","nodeType":"YulIdentifier","src":"3632:15:24"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:24","nodeType":"YulIdentifier","src":"3609:6:24"},"nativeSrc":"3609:39:24","nodeType":"YulFunctionCall","src":"3609:39:24"},"nativeSrc":"3609:39:24","nodeType":"YulExpressionStatement","src":"3609:39:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:24","nodeType":"YulIdentifier","src":"3672:3:24"},{"kind":"number","nativeSrc":"3677:4:24","nodeType":"YulLiteral","src":"3677:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:24","nodeType":"YulIdentifier","src":"3668:3:24"},"nativeSrc":"3668:14:24","nodeType":"YulFunctionCall","src":"3668:14:24"},{"name":"structHash","nativeSrc":"3684:10:24","nodeType":"YulIdentifier","src":"3684:10:24"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:24","nodeType":"YulIdentifier","src":"3661:6:24"},"nativeSrc":"3661:34:24","nodeType":"YulFunctionCall","src":"3661:34:24"},"nativeSrc":"3661:34:24","nodeType":"YulExpressionStatement","src":"3661:34:24"},{"nativeSrc":"3708:30:24","nodeType":"YulAssignment","src":"3708:30:24","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:24","nodeType":"YulIdentifier","src":"3728:3:24"},{"kind":"number","nativeSrc":"3733:4:24","nodeType":"YulLiteral","src":"3733:4:24","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:24","nodeType":"YulIdentifier","src":"3718:9:24"},"nativeSrc":"3718:20:24","nodeType":"YulFunctionCall","src":"3718:20:24"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:24","nodeType":"YulIdentifier","src":"3708:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3729,"isOffset":false,"isSlot":false,"src":"3708:6:24","valueSize":1},{"declaration":3724,"isOffset":false,"isSlot":false,"src":"3632:15:24","valueSize":1},{"declaration":3726,"isOffset":false,"isSlot":false,"src":"3684:10:24","valueSize":1}],"id":3731,"nodeType":"InlineAssembly","src":"3515:233:24"}]},"documentation":{"id":3722,"nodeType":"StructuredDocumentation","src":"2917:431:24","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:24","nodeType":"FunctionDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:24","nodeType":"VariableDeclaration","scope":3733,"src":"3378:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3726,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:24","nodeType":"VariableDeclaration","scope":3733,"src":"3403:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:24"},"returnParameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"digest","nameLocation":"3454:6:24","nodeType":"VariableDeclaration","scope":3733,"src":"3446:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:24"},"scope":3734,"src":"3353:401:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3735,"src":"521:3235:24","usedErrors":[],"usedEvents":[]}],"src":"123:3634:24"},"id":24},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3758],"IERC165":[3770]},"id":3759,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3736,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3759,"sourceUnit":3771,"src":"140:38:25","symbolAliases":[{"foreign":{"id":3737,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"148:7:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3740,"name":"IERC165","nameLocations":["687:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":3770,"src":"687:7:25"},"id":3741,"nodeType":"InheritanceSpecifier","src":"687:7:25"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3739,"nodeType":"StructuredDocumentation","src":"180:478:25","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3758,"linearizedBaseContracts":[3758,3770],"name":"ERC165","nameLocation":"677:6:25","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3769],"body":{"id":3756,"nodeType":"Block","src":"844:64:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"861:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3751,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"881:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3770_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3770_$","typeString":"type(contract IERC165)"}],"id":3750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3770","typeString":"type(contract IERC165)"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:25","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3748,"id":3755,"nodeType":"Return","src":"854:47:25"}]},"documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"701:56:25","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3757,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:25","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:25","nodeType":"VariableDeclaration","scope":3757,"src":"789:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3743,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:25"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3757,"src":"838:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3746,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:25"},"scope":3758,"src":"762:146:25","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3759,"src":"659:251:25","usedErrors":[],"usedEvents":[]}],"src":"114:797:25"},"id":25},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3770]},"id":3771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3760,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3761,"nodeType":"StructuredDocumentation","src":"141:279:26","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3770,"linearizedBaseContracts":[3770],"name":"IERC165","nameLocation":"431:7:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"445:340:26","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3769,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:26","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:26","nodeType":"VariableDeclaration","scope":3769,"src":"817:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3763,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:26"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3769,"src":"860:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3766,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:26"},"scope":3770,"src":"790:76:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3771,"src":"421:447:26","usedErrors":[],"usedEvents":[]}],"src":"115:754:26"},"id":26},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4824]},"id":4825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3772,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"129:73:27","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4824,"linearizedBaseContracts":[4824],"name":"Math","nameLocation":"211:4:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3774,"nodeType":"StructuredDocumentation","src":"222:50:27","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3776,"name":"MathOverflowedMulDiv","nameLocation":"283:20:27","nodeType":"ErrorDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[],"src":"303:2:27"},"src":"277:29:27"},{"canonicalName":"Math.Rounding","id":3781,"members":[{"id":3777,"name":"Floor","nameLocation":"336:5:27","nodeType":"EnumValue","src":"336:5:27"},{"id":3778,"name":"Ceil","nameLocation":"379:4:27","nodeType":"EnumValue","src":"379:4:27"},{"id":3779,"name":"Trunc","nameLocation":"421:5:27","nodeType":"EnumValue","src":"421:5:27"},{"id":3780,"name":"Expand","nameLocation":"451:6:27","nodeType":"EnumValue","src":"451:6:27"}],"name":"Rounding","nameLocation":"317:8:27","nodeType":"EnumDefinition","src":"312:169:27"},{"body":{"id":3812,"nodeType":"Block","src":"661:140:27","statements":[{"id":3811,"nodeType":"UncheckedBlock","src":"671:124:27","statements":[{"assignments":[3794],"declarations":[{"constant":false,"id":3794,"mutability":"mutable","name":"c","nameLocation":"703:1:27","nodeType":"VariableDeclaration","scope":3811,"src":"695:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3798,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"707:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"711:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"730:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"734:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3806,"nodeType":"IfStatement","src":"726:28:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3792,"id":3805,"nodeType":"Return","src":"737:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3808,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"782:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3792,"id":3810,"nodeType":"Return","src":"768:16:27"}]}]},"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"487:93:27","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3813,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:27","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"a","nameLocation":"609:1:27","nodeType":"VariableDeclaration","scope":3813,"src":"601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"b","nameLocation":"620:1:27","nodeType":"VariableDeclaration","scope":3813,"src":"612:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:27"},"returnParameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"646:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3788,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"652:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:27"},"scope":4824,"src":"585:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3840,"nodeType":"Block","src":"984:113:27","statements":[{"id":3839,"nodeType":"UncheckedBlock","src":"994:97:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"1022:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"1026:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"nodeType":"IfStatement","src":"1018:28:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3824,"id":3831,"nodeType":"Return","src":"1029:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"1074:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3835,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"1078:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3824,"id":3838,"nodeType":"Return","src":"1060:20:27"}]}]},"documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"807:96:27","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3841,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:27","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"a","nameLocation":"932:1:27","nodeType":"VariableDeclaration","scope":3841,"src":"924:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"b","nameLocation":"943:1:27","nodeType":"VariableDeclaration","scope":3841,"src":"935:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:27"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3841,"src":"969:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3820,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3841,"src":"975:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:27"},"scope":4824,"src":"908:189:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3882,"nodeType":"Block","src":"1283:417:27","statements":[{"id":3881,"nodeType":"UncheckedBlock","src":"1293:401:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1551:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3860,"nodeType":"IfStatement","src":"1547:28:27","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3852,"id":3859,"nodeType":"Return","src":"1559:16:27"}},{"assignments":[3862],"declarations":[{"constant":false,"id":3862,"mutability":"mutable","name":"c","nameLocation":"1597:1:27","nodeType":"VariableDeclaration","scope":3881,"src":"1589:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1601:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3864,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"1605:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3867,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1624:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1628:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"1633:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3876,"nodeType":"IfStatement","src":"1620:33:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3852,"id":3875,"nodeType":"Return","src":"1636:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3878,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1681:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3852,"id":3880,"nodeType":"Return","src":"1667:16:27"}]}]},"documentation":{"id":3842,"nodeType":"StructuredDocumentation","src":"1103:99:27","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3883,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:27","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"a","nameLocation":"1231:1:27","nodeType":"VariableDeclaration","scope":3883,"src":"1223:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"b","nameLocation":"1242:1:27","nodeType":"VariableDeclaration","scope":3883,"src":"1234:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:27"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3883,"src":"1268:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3848,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3883,"src":"1274:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:27"},"scope":4824,"src":"1207:493:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3910,"nodeType":"Block","src":"1887:114:27","statements":[{"id":3909,"nodeType":"UncheckedBlock","src":"1897:98:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"1925:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3902,"nodeType":"IfStatement","src":"1921:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3894,"id":3901,"nodeType":"Return","src":"1933:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"1978:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"1982:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3894,"id":3908,"nodeType":"Return","src":"1964:20:27"}]}]},"documentation":{"id":3884,"nodeType":"StructuredDocumentation","src":"1706:100:27","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3911,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:27","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"a","nameLocation":"1835:1:27","nodeType":"VariableDeclaration","scope":3911,"src":"1827:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"b","nameLocation":"1846:1:27","nodeType":"VariableDeclaration","scope":3911,"src":"1838:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:27"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3911,"src":"1872:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3890,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3911,"src":"1878:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:27"},"scope":4824,"src":"1811:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3938,"nodeType":"Block","src":"2198:114:27","statements":[{"id":3937,"nodeType":"UncheckedBlock","src":"2208:98:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"2236:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3930,"nodeType":"IfStatement","src":"2232:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3922,"id":3929,"nodeType":"Return","src":"2244:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"2289:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"2293:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3922,"id":3936,"nodeType":"Return","src":"2275:20:27"}]}]},"documentation":{"id":3912,"nodeType":"StructuredDocumentation","src":"2007:110:27","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3939,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:27","nodeType":"FunctionDefinition","parameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"a","nameLocation":"2146:1:27","nodeType":"VariableDeclaration","scope":3939,"src":"2138:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"b","nameLocation":"2157:1:27","nodeType":"VariableDeclaration","scope":3939,"src":"2149:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:27"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3939,"src":"2183:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3918,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3939,"src":"2189:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:27"},"scope":4824,"src":"2122:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3956,"nodeType":"Block","src":"2449:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"2466:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3950,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"2470:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"2478:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:27","trueExpression":{"id":3952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"2474:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3948,"id":3955,"nodeType":"Return","src":"2459:20:27"}]},"documentation":{"id":3940,"nodeType":"StructuredDocumentation","src":"2318:59:27","text":" @dev Returns the largest of two numbers."},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:27","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"a","nameLocation":"2403:1:27","nodeType":"VariableDeclaration","scope":3957,"src":"2395:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"b","nameLocation":"2414:1:27","nodeType":"VariableDeclaration","scope":3957,"src":"2406:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:27"},"returnParameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"2440:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:27"},"scope":4824,"src":"2382:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"2624:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2641:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"2645:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3971,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"2653:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:27","trueExpression":{"id":3970,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2649:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3966,"id":3973,"nodeType":"Return","src":"2634:20:27"}]},"documentation":{"id":3958,"nodeType":"StructuredDocumentation","src":"2492:60:27","text":" @dev Returns the smallest of two numbers."},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:27","nodeType":"FunctionDefinition","parameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"a","nameLocation":"2578:1:27","nodeType":"VariableDeclaration","scope":3975,"src":"2570:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"b","nameLocation":"2589:1:27","nodeType":"VariableDeclaration","scope":3975,"src":"2581:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:27"},"returnParameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"2615:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:27"},"scope":4824,"src":"2557:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3997,"nodeType":"Block","src":"2845:82:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"2900:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3986,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"2904:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"2910:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"2914:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3984,"id":3996,"nodeType":"Return","src":"2892:28:27"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"2667:102:27","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3998,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:27","nodeType":"FunctionDefinition","parameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"a","nameLocation":"2799:1:27","nodeType":"VariableDeclaration","scope":3998,"src":"2791:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"b","nameLocation":"2810:1:27","nodeType":"VariableDeclaration","scope":3998,"src":"2802:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:27"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3998,"src":"2836:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:27"},"scope":4824,"src":"2774:153:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4031,"nodeType":"Block","src":"3219:260:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"3233:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4016,"nodeType":"IfStatement","src":"3229:127:27","trueBody":{"id":4015,"nodeType":"Block","src":"3241:115:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4011,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"3340:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4012,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"3344:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4007,"id":4014,"nodeType":"Return","src":"3333:12:27"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"3444:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"3458:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4025,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"3467:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:27","trueExpression":{"hexValue":"30","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4007,"id":4030,"nodeType":"Return","src":"3437:35:27"}]},"documentation":{"id":3999,"nodeType":"StructuredDocumentation","src":"2933:210:27","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4032,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:27","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4001,"mutability":"mutable","name":"a","nameLocation":"3173:1:27","nodeType":"VariableDeclaration","scope":4032,"src":"3165:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"b","nameLocation":"3184:1:27","nodeType":"VariableDeclaration","scope":4032,"src":"3176:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:27"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4032,"src":"3210:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:27"},"scope":4824,"src":"3148:331:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4157,"nodeType":"Block","src":"3901:4018:27","statements":[{"id":4156,"nodeType":"UncheckedBlock","src":"3911:4002:27","statements":[{"assignments":[4045],"declarations":[{"constant":false,"id":4045,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:27","nodeType":"VariableDeclaration","scope":4156,"src":"4232:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4049,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4046,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"4248:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4047,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"4252:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:27"},{"assignments":[4051],"declarations":[{"constant":false,"id":4051,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:27","nodeType":"VariableDeclaration","scope":4156,"src":"4312:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4052,"nodeType":"VariableDeclarationStatement","src":"4312:13:27"},{"AST":{"nativeSrc":"4392:122:27","nodeType":"YulBlock","src":"4392:122:27","statements":[{"nativeSrc":"4410:30:27","nodeType":"YulVariableDeclaration","src":"4410:30:27","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:27","nodeType":"YulIdentifier","src":"4427:1:27"},{"name":"y","nativeSrc":"4430:1:27","nodeType":"YulIdentifier","src":"4430:1:27"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:27","nodeType":"YulLiteral","src":"4437:1:27","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:27","nodeType":"YulIdentifier","src":"4433:3:27"},"nativeSrc":"4433:6:27","nodeType":"YulFunctionCall","src":"4433:6:27"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:27","nodeType":"YulIdentifier","src":"4420:6:27"},"nativeSrc":"4420:20:27","nodeType":"YulFunctionCall","src":"4420:20:27"},"variables":[{"name":"mm","nativeSrc":"4414:2:27","nodeType":"YulTypedName","src":"4414:2:27","type":""}]},{"nativeSrc":"4457:43:27","nodeType":"YulAssignment","src":"4457:43:27","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:27","nodeType":"YulIdentifier","src":"4474:2:27"},{"name":"prod0","nativeSrc":"4478:5:27","nodeType":"YulIdentifier","src":"4478:5:27"}],"functionName":{"name":"sub","nativeSrc":"4470:3:27","nodeType":"YulIdentifier","src":"4470:3:27"},"nativeSrc":"4470:14:27","nodeType":"YulFunctionCall","src":"4470:14:27"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:27","nodeType":"YulIdentifier","src":"4489:2:27"},{"name":"prod0","nativeSrc":"4493:5:27","nodeType":"YulIdentifier","src":"4493:5:27"}],"functionName":{"name":"lt","nativeSrc":"4486:2:27","nodeType":"YulIdentifier","src":"4486:2:27"},"nativeSrc":"4486:13:27","nodeType":"YulFunctionCall","src":"4486:13:27"}],"functionName":{"name":"sub","nativeSrc":"4466:3:27","nodeType":"YulIdentifier","src":"4466:3:27"},"nativeSrc":"4466:34:27","nodeType":"YulFunctionCall","src":"4466:34:27"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:27","nodeType":"YulIdentifier","src":"4457:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4045,"isOffset":false,"isSlot":false,"src":"4478:5:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"4493:5:27","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"4457:5:27","valueSize":1},{"declaration":4035,"isOffset":false,"isSlot":false,"src":"4427:1:27","valueSize":1},{"declaration":4037,"isOffset":false,"isSlot":false,"src":"4430:1:27","valueSize":1}],"id":4053,"nodeType":"InlineAssembly","src":"4383:131:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4054,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"4595:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4062,"nodeType":"IfStatement","src":"4591:368:27","trueBody":{"id":4061,"nodeType":"Block","src":"4607:352:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"4925:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4058,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"4933:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4043,"id":4060,"nodeType":"Return","src":"4918:26:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"5065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4064,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"5080:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"5061:88:27","trueBody":{"id":4069,"nodeType":"Block","src":"5087:62:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4066,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"5112:20:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"RevertStatement","src":"5105:29:27"}]}},{"assignments":[4072],"declarations":[{"constant":false,"id":4072,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:27","nodeType":"VariableDeclaration","scope":4156,"src":"5404:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4073,"nodeType":"VariableDeclarationStatement","src":"5404:17:27"},{"AST":{"nativeSrc":"5444:291:27","nodeType":"YulBlock","src":"5444:291:27","statements":[{"nativeSrc":"5513:38:27","nodeType":"YulAssignment","src":"5513:38:27","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:27","nodeType":"YulIdentifier","src":"5533:1:27"},{"name":"y","nativeSrc":"5536:1:27","nodeType":"YulIdentifier","src":"5536:1:27"},{"name":"denominator","nativeSrc":"5539:11:27","nodeType":"YulIdentifier","src":"5539:11:27"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:27","nodeType":"YulIdentifier","src":"5526:6:27"},"nativeSrc":"5526:25:27","nodeType":"YulFunctionCall","src":"5526:25:27"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:27","nodeType":"YulIdentifier","src":"5513:9:27"}]},{"nativeSrc":"5633:41:27","nodeType":"YulAssignment","src":"5633:41:27","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:27","nodeType":"YulIdentifier","src":"5646:5:27"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:27","nodeType":"YulIdentifier","src":"5656:9:27"},{"name":"prod0","nativeSrc":"5667:5:27","nodeType":"YulIdentifier","src":"5667:5:27"}],"functionName":{"name":"gt","nativeSrc":"5653:2:27","nodeType":"YulIdentifier","src":"5653:2:27"},"nativeSrc":"5653:20:27","nodeType":"YulFunctionCall","src":"5653:20:27"}],"functionName":{"name":"sub","nativeSrc":"5642:3:27","nodeType":"YulIdentifier","src":"5642:3:27"},"nativeSrc":"5642:32:27","nodeType":"YulFunctionCall","src":"5642:32:27"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:27","nodeType":"YulIdentifier","src":"5633:5:27"}]},{"nativeSrc":"5691:30:27","nodeType":"YulAssignment","src":"5691:30:27","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:27","nodeType":"YulIdentifier","src":"5704:5:27"},{"name":"remainder","nativeSrc":"5711:9:27","nodeType":"YulIdentifier","src":"5711:9:27"}],"functionName":{"name":"sub","nativeSrc":"5700:3:27","nodeType":"YulIdentifier","src":"5700:3:27"},"nativeSrc":"5700:21:27","nodeType":"YulFunctionCall","src":"5700:21:27"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:27","nodeType":"YulIdentifier","src":"5691:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4039,"isOffset":false,"isSlot":false,"src":"5539:11:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"5667:5:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"5691:5:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"5704:5:27","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"5633:5:27","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"5646:5:27","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"5513:9:27","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"5656:9:27","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"5711:9:27","valueSize":1},{"declaration":4035,"isOffset":false,"isSlot":false,"src":"5533:1:27","valueSize":1},{"declaration":4037,"isOffset":false,"isSlot":false,"src":"5536:1:27","valueSize":1}],"id":4074,"nodeType":"InlineAssembly","src":"5435:300:27"},{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"twos","nameLocation":"5947:4:27","nodeType":"VariableDeclaration","scope":4156,"src":"5939:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4083,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"5954:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4079,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"5973:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:27"},{"AST":{"nativeSrc":"6008:362:27","nodeType":"YulBlock","src":"6008:362:27","statements":[{"nativeSrc":"6073:37:27","nodeType":"YulAssignment","src":"6073:37:27","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:27","nodeType":"YulIdentifier","src":"6092:11:27"},{"name":"twos","nativeSrc":"6105:4:27","nodeType":"YulIdentifier","src":"6105:4:27"}],"functionName":{"name":"div","nativeSrc":"6088:3:27","nodeType":"YulIdentifier","src":"6088:3:27"},"nativeSrc":"6088:22:27","nodeType":"YulFunctionCall","src":"6088:22:27"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:27","nodeType":"YulIdentifier","src":"6073:11:27"}]},{"nativeSrc":"6177:25:27","nodeType":"YulAssignment","src":"6177:25:27","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:27","nodeType":"YulIdentifier","src":"6190:5:27"},{"name":"twos","nativeSrc":"6197:4:27","nodeType":"YulIdentifier","src":"6197:4:27"}],"functionName":{"name":"div","nativeSrc":"6186:3:27","nodeType":"YulIdentifier","src":"6186:3:27"},"nativeSrc":"6186:16:27","nodeType":"YulFunctionCall","src":"6186:16:27"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:27","nodeType":"YulIdentifier","src":"6177:5:27"}]},{"nativeSrc":"6317:39:27","nodeType":"YulAssignment","src":"6317:39:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:27","nodeType":"YulLiteral","src":"6337:1:27","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:27","nodeType":"YulIdentifier","src":"6340:4:27"}],"functionName":{"name":"sub","nativeSrc":"6333:3:27","nodeType":"YulIdentifier","src":"6333:3:27"},"nativeSrc":"6333:12:27","nodeType":"YulFunctionCall","src":"6333:12:27"},{"name":"twos","nativeSrc":"6347:4:27","nodeType":"YulIdentifier","src":"6347:4:27"}],"functionName":{"name":"div","nativeSrc":"6329:3:27","nodeType":"YulIdentifier","src":"6329:3:27"},"nativeSrc":"6329:23:27","nodeType":"YulFunctionCall","src":"6329:23:27"},{"kind":"number","nativeSrc":"6354:1:27","nodeType":"YulLiteral","src":"6354:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:27","nodeType":"YulIdentifier","src":"6325:3:27"},"nativeSrc":"6325:31:27","nodeType":"YulFunctionCall","src":"6325:31:27"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:27","nodeType":"YulIdentifier","src":"6317:4:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4039,"isOffset":false,"isSlot":false,"src":"6073:11:27","valueSize":1},{"declaration":4039,"isOffset":false,"isSlot":false,"src":"6092:11:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"6177:5:27","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"6190:5:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6105:4:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6197:4:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6317:4:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6340:4:27","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"6347:4:27","valueSize":1}],"id":4084,"nodeType":"InlineAssembly","src":"5999:371:27"},{"expression":{"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4085,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"6436:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"6445:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4087,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"6453:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4090,"nodeType":"ExpressionStatement","src":"6436:21:27"},{"assignments":[4092],"declarations":[{"constant":false,"id":4092,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:27","nodeType":"VariableDeclaration","scope":4156,"src":"6775:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4099,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4094,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"6798:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:27"},{"expression":{"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4100,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7031:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7046:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4103,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7060:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4107,"nodeType":"ExpressionStatement","src":"7031:36:27"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4108,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7100:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7115:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4111,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7129:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"7100:36:27"},{"expression":{"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4116,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7170:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7185:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4119,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7199:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4123,"nodeType":"ExpressionStatement","src":"7170:36:27"},{"expression":{"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4124,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7240:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7255:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4127,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7269:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4131,"nodeType":"ExpressionStatement","src":"7240:36:27"},{"expression":{"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4132,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7310:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4134,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7325:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4135,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7339:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4139,"nodeType":"ExpressionStatement","src":"7310:36:27"},{"expression":{"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7381:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7396:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4143,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7410:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4147,"nodeType":"ExpressionStatement","src":"7381:36:27"},{"expression":{"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"7851:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4149,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"7860:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4150,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7868:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4153,"nodeType":"ExpressionStatement","src":"7851:24:27"},{"expression":{"id":4154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"7896:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4043,"id":4155,"nodeType":"Return","src":"7889:13:27"}]}]},"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"3485:313:27","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:27","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"x","nameLocation":"3827:1:27","nodeType":"VariableDeclaration","scope":4158,"src":"3819:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4037,"mutability":"mutable","name":"y","nameLocation":"3838:1:27","nodeType":"VariableDeclaration","scope":4158,"src":"3830:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:27","nodeType":"VariableDeclaration","scope":4158,"src":"3841:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:27"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"result","nameLocation":"3893:6:27","nodeType":"VariableDeclaration","scope":4158,"src":"3885:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:27"},"scope":4824,"src":"3803:4116:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4200,"nodeType":"Block","src":"8161:192:27","statements":[{"assignments":[4174],"declarations":[{"constant":false,"id":4174,"mutability":"mutable","name":"result","nameLocation":"8179:6:27","nodeType":"VariableDeclaration","scope":4200,"src":"8171:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4180,"initialValue":{"arguments":[{"id":4176,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"8195:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4177,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"8198:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4178,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"8201:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4175,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4158,4201],"referencedDeclaration":4158,"src":"8188:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4182,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"8244:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4181,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"8227:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4185,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"8264:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4186,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"8267:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4187,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"8270:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4184,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4197,"nodeType":"IfStatement","src":"8223:101:27","trueBody":{"id":4196,"nodeType":"Block","src":"8288:36:27","statements":[{"expression":{"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"8302:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4195,"nodeType":"ExpressionStatement","src":"8302:11:27"}]}},{"expression":{"id":4198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"8340:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4172,"id":4199,"nodeType":"Return","src":"8333:13:27"}]},"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"7925:121:27","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4201,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:27","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"x","nameLocation":"8075:1:27","nodeType":"VariableDeclaration","scope":4201,"src":"8067:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"y","nameLocation":"8086:1:27","nodeType":"VariableDeclaration","scope":4201,"src":"8078:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:27","nodeType":"VariableDeclaration","scope":4201,"src":"8089:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:27","nodeType":"VariableDeclaration","scope":4201,"src":"8110:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4167,"nodeType":"UserDefinedTypeName","pathNode":{"id":4166,"name":"Rounding","nameLocations":["8110:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"8110:8:27"},"referencedDeclaration":3781,"src":"8110:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:27"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4201,"src":"8152:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:27"},"scope":4824,"src":"8051:302:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4312,"nodeType":"Block","src":"8644:1585:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"8658:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4215,"nodeType":"IfStatement","src":"8654:45:27","trueBody":{"id":4214,"nodeType":"Block","src":"8666:33:27","statements":[{"expression":{"hexValue":"30","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4208,"id":4213,"nodeType":"Return","src":"8680:8:27"}]}},{"assignments":[4217],"declarations":[{"constant":false,"id":4217,"mutability":"mutable","name":"result","nameLocation":"9386:6:27","nodeType":"VariableDeclaration","scope":4312,"src":"9378:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4226,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9406:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4219,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4480,4515],"referencedDeclaration":4480,"src":"9401:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:27"},{"id":4311,"nodeType":"UncheckedBlock","src":"9815:408:27","statements":[{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9839:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9849:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9858:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9862:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"9839:35:27"},{"expression":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9888:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9898:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9907:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9911:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4248,"nodeType":"ExpressionStatement","src":"9888:35:27"},{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9937:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9947:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"9956:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9960:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"9937:35:27"},{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9986:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"9996:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10005:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10009:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4270,"nodeType":"ExpressionStatement","src":"9986:35:27"},{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10035:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10045:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10054:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10058:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"10035:35:27"},{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10084:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10094:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10103:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10107:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4292,"nodeType":"ExpressionStatement","src":"10084:35:27"},{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10133:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10143:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10152:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10156:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4303,"nodeType":"ExpressionStatement","src":"10133:35:27"},{"expression":{"arguments":[{"id":4305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10193:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10201:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"10205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4304,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10189:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4208,"id":4310,"nodeType":"Return","src":"10182:30:27"}]}]},"documentation":{"id":4202,"nodeType":"StructuredDocumentation","src":"8359:223:27","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4313,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:27","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"a","nameLocation":"8609:1:27","nodeType":"VariableDeclaration","scope":4313,"src":"8601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:27"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4313,"src":"8635:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:27"},"scope":4824,"src":"8587:1642:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"10405:164:27","statements":[{"id":4346,"nodeType":"UncheckedBlock","src":"10415:148:27","statements":[{"assignments":[4325],"declarations":[{"constant":false,"id":4325,"mutability":"mutable","name":"result","nameLocation":"10447:6:27","nodeType":"VariableDeclaration","scope":4346,"src":"10439:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4329,"initialValue":{"arguments":[{"id":4327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"10461:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4326,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4313,4348],"referencedDeclaration":4313,"src":"10456:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"10484:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4332,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"10511:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4331,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"10494:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"10524:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"10533:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4337,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"10542:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:27","trueExpression":{"hexValue":"31","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4323,"id":4345,"nodeType":"Return","src":"10477:75:27"}]}]},"documentation":{"id":4314,"nodeType":"StructuredDocumentation","src":"10235:89:27","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:27","nodeType":"FunctionDefinition","parameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"a","nameLocation":"10351:1:27","nodeType":"VariableDeclaration","scope":4348,"src":"10343:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4319,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:27","nodeType":"VariableDeclaration","scope":4348,"src":"10354:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4318,"nodeType":"UserDefinedTypeName","pathNode":{"id":4317,"name":"Rounding","nameLocations":["10354:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"10354:8:27"},"referencedDeclaration":3781,"src":"10354:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:27"},"returnParameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4348,"src":"10396:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:27"},"scope":4824,"src":"10329:240:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4479,"nodeType":"Block","src":"10760:922:27","statements":[{"assignments":[4357],"declarations":[{"constant":false,"id":4357,"mutability":"mutable","name":"result","nameLocation":"10778:6:27","nodeType":"VariableDeclaration","scope":4479,"src":"10770:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4359,"initialValue":{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:27"},{"id":4476,"nodeType":"UncheckedBlock","src":"10798:855:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10826:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"nodeType":"IfStatement","src":"10822:99:27","trueBody":{"id":4373,"nodeType":"Block","src":"10844:77:27","statements":[{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10862:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"10862:13:27"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"10893:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4372,"nodeType":"ExpressionStatement","src":"10893:13:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10938:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4389,"nodeType":"IfStatement","src":"10934:96:27","trueBody":{"id":4388,"nodeType":"Block","src":"10955:75:27","statements":[{"expression":{"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10973:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4383,"nodeType":"ExpressionStatement","src":"10973:12:27"},{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11003:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4387,"nodeType":"ExpressionStatement","src":"11003:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11047:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4404,"nodeType":"IfStatement","src":"11043:96:27","trueBody":{"id":4403,"nodeType":"Block","src":"11064:75:27","statements":[{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11082:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"11082:12:27"},{"expression":{"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11112:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4402,"nodeType":"ExpressionStatement","src":"11112:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11156:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4419,"nodeType":"IfStatement","src":"11152:96:27","trueBody":{"id":4418,"nodeType":"Block","src":"11173:75:27","statements":[{"expression":{"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11191:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4413,"nodeType":"ExpressionStatement","src":"11191:12:27"},{"expression":{"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11221:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4417,"nodeType":"ExpressionStatement","src":"11221:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11265:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4434,"nodeType":"IfStatement","src":"11261:93:27","trueBody":{"id":4433,"nodeType":"Block","src":"11281:73:27","statements":[{"expression":{"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11299:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4428,"nodeType":"ExpressionStatement","src":"11299:11:27"},{"expression":{"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11328:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4432,"nodeType":"ExpressionStatement","src":"11328:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11371:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4449,"nodeType":"IfStatement","src":"11367:93:27","trueBody":{"id":4448,"nodeType":"Block","src":"11387:73:27","statements":[{"expression":{"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11405:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4443,"nodeType":"ExpressionStatement","src":"11405:11:27"},{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11434:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"11434:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11477:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4464,"nodeType":"IfStatement","src":"11473:93:27","trueBody":{"id":4463,"nodeType":"Block","src":"11493:73:27","statements":[{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11511:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"11511:11:27"},{"expression":{"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11540:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4462,"nodeType":"ExpressionStatement","src":"11540:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11583:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4475,"nodeType":"IfStatement","src":"11579:64:27","trueBody":{"id":4474,"nodeType":"Block","src":"11599:44:27","statements":[{"expression":{"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11617:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4473,"nodeType":"ExpressionStatement","src":"11617:11:27"}]}}]},{"expression":{"id":4477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"11669:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4355,"id":4478,"nodeType":"Return","src":"11662:13:27"}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"10575:119:27","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4480,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:27","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"value","nameLocation":"10721:5:27","nodeType":"VariableDeclaration","scope":4480,"src":"10713:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:27"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4480,"src":"10751:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:27"},"scope":4824,"src":"10699:983:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4514,"nodeType":"Block","src":"11915:168:27","statements":[{"id":4513,"nodeType":"UncheckedBlock","src":"11925:152:27","statements":[{"assignments":[4492],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"result","nameLocation":"11957:6:27","nodeType":"VariableDeclaration","scope":4513,"src":"11949:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4496,"initialValue":{"arguments":[{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"11971:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4493,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4480,4515],"referencedDeclaration":4480,"src":"11966:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"11998:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4499,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"12025:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4498,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"12008:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"12043:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"12052:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:27","trueExpression":{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4490,"id":4512,"nodeType":"Return","src":"11991:75:27"}]}]},"documentation":{"id":4481,"nodeType":"StructuredDocumentation","src":"11688:142:27","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:27","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"value","nameLocation":"11857:5:27","nodeType":"VariableDeclaration","scope":4515,"src":"11849:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4486,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:27","nodeType":"VariableDeclaration","scope":4515,"src":"11864:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4485,"nodeType":"UserDefinedTypeName","pathNode":{"id":4484,"name":"Rounding","nameLocations":["11864:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"11864:8:27"},"referencedDeclaration":3781,"src":"11864:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:27"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"11906:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:27"},"scope":4824,"src":"11835:248:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"12276:854:27","statements":[{"assignments":[4524],"declarations":[{"constant":false,"id":4524,"mutability":"mutable","name":"result","nameLocation":"12294:6:27","nodeType":"VariableDeclaration","scope":4643,"src":"12286:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4526,"initialValue":{"hexValue":"30","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:27"},{"id":4640,"nodeType":"UncheckedBlock","src":"12314:787:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12342:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4543,"nodeType":"IfStatement","src":"12338:103:27","trueBody":{"id":4542,"nodeType":"Block","src":"12361:80:27","statements":[{"expression":{"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12379:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4537,"nodeType":"ExpressionStatement","src":"12379:17:27"},{"expression":{"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12414:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4541,"nodeType":"ExpressionStatement","src":"12414:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12458:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4560,"nodeType":"IfStatement","src":"12454:103:27","trueBody":{"id":4559,"nodeType":"Block","src":"12477:80:27","statements":[{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12495:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4554,"nodeType":"ExpressionStatement","src":"12495:17:27"},{"expression":{"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12530:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4558,"nodeType":"ExpressionStatement","src":"12530:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12574:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4577,"nodeType":"IfStatement","src":"12570:103:27","trueBody":{"id":4576,"nodeType":"Block","src":"12593:80:27","statements":[{"expression":{"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12611:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4571,"nodeType":"ExpressionStatement","src":"12611:17:27"},{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12646:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"12646:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12690:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"IfStatement","src":"12686:100:27","trueBody":{"id":4593,"nodeType":"Block","src":"12708:78:27","statements":[{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12726:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"12726:16:27"},{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12760:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"12760:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12803:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4611,"nodeType":"IfStatement","src":"12799:100:27","trueBody":{"id":4610,"nodeType":"Block","src":"12821:78:27","statements":[{"expression":{"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12839:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4605,"nodeType":"ExpressionStatement","src":"12839:16:27"},{"expression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12873:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4609,"nodeType":"ExpressionStatement","src":"12873:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12916:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4628,"nodeType":"IfStatement","src":"12912:100:27","trueBody":{"id":4627,"nodeType":"Block","src":"12934:78:27","statements":[{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12952:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4622,"nodeType":"ExpressionStatement","src":"12952:16:27"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"12986:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"12986:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"13029:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4639,"nodeType":"IfStatement","src":"13025:66:27","trueBody":{"id":4638,"nodeType":"Block","src":"13047:44:27","statements":[{"expression":{"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13065:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4637,"nodeType":"ExpressionStatement","src":"13065:11:27"}]}}]},{"expression":{"id":4641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13117:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4522,"id":4642,"nodeType":"Return","src":"13110:13:27"}]},"documentation":{"id":4516,"nodeType":"StructuredDocumentation","src":"12089:120:27","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:27","nodeType":"FunctionDefinition","parameters":{"id":4519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4518,"mutability":"mutable","name":"value","nameLocation":"12237:5:27","nodeType":"VariableDeclaration","scope":4644,"src":"12229:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:27"},"returnParameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4644,"src":"12267:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:27"},"scope":4824,"src":"12214:916:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4678,"nodeType":"Block","src":"13365:170:27","statements":[{"id":4677,"nodeType":"UncheckedBlock","src":"13375:154:27","statements":[{"assignments":[4656],"declarations":[{"constant":false,"id":4656,"mutability":"mutable","name":"result","nameLocation":"13407:6:27","nodeType":"VariableDeclaration","scope":4677,"src":"13399:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4660,"initialValue":{"arguments":[{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"13422:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4657,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4644,4679],"referencedDeclaration":4644,"src":"13416:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"13449:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4663,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"13476:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4662,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"13459:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"13495:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"13504:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:27","trueExpression":{"hexValue":"31","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4654,"id":4676,"nodeType":"Return","src":"13442:76:27"}]}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"13136:143:27","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4679,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:27","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"value","nameLocation":"13307:5:27","nodeType":"VariableDeclaration","scope":4679,"src":"13299:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:27","nodeType":"VariableDeclaration","scope":4679,"src":"13314:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4649,"nodeType":"UserDefinedTypeName","pathNode":{"id":4648,"name":"Rounding","nameLocations":["13314:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"13314:8:27"},"referencedDeclaration":3781,"src":"13314:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:27"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4679,"src":"13356:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:27"},"scope":4824,"src":"13284:251:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4765,"nodeType":"Block","src":"13855:600:27","statements":[{"assignments":[4688],"declarations":[{"constant":false,"id":4688,"mutability":"mutable","name":"result","nameLocation":"13873:6:27","nodeType":"VariableDeclaration","scope":4765,"src":"13865:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4687,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4690,"initialValue":{"hexValue":"30","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:27"},{"id":4762,"nodeType":"UncheckedBlock","src":"13893:533:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"13921:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4705,"nodeType":"IfStatement","src":"13917:98:27","trueBody":{"id":4704,"nodeType":"Block","src":"13939:76:27","statements":[{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"13957:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"13957:13:27"},{"expression":{"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"13988:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4703,"nodeType":"ExpressionStatement","src":"13988:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14032:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4720,"nodeType":"IfStatement","src":"14028:95:27","trueBody":{"id":4719,"nodeType":"Block","src":"14049:74:27","statements":[{"expression":{"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14067:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4714,"nodeType":"ExpressionStatement","src":"14067:12:27"},{"expression":{"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14097:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4718,"nodeType":"ExpressionStatement","src":"14097:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14140:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4735,"nodeType":"IfStatement","src":"14136:95:27","trueBody":{"id":4734,"nodeType":"Block","src":"14157:74:27","statements":[{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14175:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"14175:12:27"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4733,"nodeType":"ExpressionStatement","src":"14205:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14248:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4750,"nodeType":"IfStatement","src":"14244:95:27","trueBody":{"id":4749,"nodeType":"Block","src":"14265:74:27","statements":[{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14283:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4744,"nodeType":"ExpressionStatement","src":"14283:12:27"},{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14313:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4748,"nodeType":"ExpressionStatement","src":"14313:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"14356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4761,"nodeType":"IfStatement","src":"14352:64:27","trueBody":{"id":4760,"nodeType":"Block","src":"14372:44:27","statements":[{"expression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14390:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4759,"nodeType":"ExpressionStatement","src":"14390:11:27"}]}}]},{"expression":{"id":4763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"14442:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4686,"id":4764,"nodeType":"Return","src":"14435:13:27"}]},"documentation":{"id":4680,"nodeType":"StructuredDocumentation","src":"13541:246:27","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4766,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:27","nodeType":"FunctionDefinition","parameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"value","nameLocation":"13816:5:27","nodeType":"VariableDeclaration","scope":4766,"src":"13808:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:27"},"returnParameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4766,"src":"13846:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:27"},"scope":4824,"src":"13792:663:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4803,"nodeType":"Block","src":"14692:177:27","statements":[{"id":4802,"nodeType":"UncheckedBlock","src":"14702:161:27","statements":[{"assignments":[4778],"declarations":[{"constant":false,"id":4778,"mutability":"mutable","name":"result","nameLocation":"14734:6:27","nodeType":"VariableDeclaration","scope":4802,"src":"14726:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4782,"initialValue":{"arguments":[{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"14750:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4779,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4766,4804],"referencedDeclaration":4766,"src":"14743:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"14777:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4785,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"14804:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4784,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"14787:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3781_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"14823:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"14838:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:27","trueExpression":{"hexValue":"31","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4776,"id":4801,"nodeType":"Return","src":"14770:82:27"}]}]},"documentation":{"id":4767,"nodeType":"StructuredDocumentation","src":"14461:144:27","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4804,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:27","nodeType":"FunctionDefinition","parameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"value","nameLocation":"14634:5:27","nodeType":"VariableDeclaration","scope":4804,"src":"14626:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4772,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:27","nodeType":"VariableDeclaration","scope":4804,"src":"14641:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4771,"nodeType":"UserDefinedTypeName","pathNode":{"id":4770,"name":"Rounding","nameLocations":["14641:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"14641:8:27"},"referencedDeclaration":3781,"src":"14641:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:27"},"returnParameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4804,"src":"14683:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4774,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:27"},"scope":4824,"src":"14610:259:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4822,"nodeType":"Block","src":"15067:48:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4815,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"15090:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}],"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4813,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:27","typeDescriptions":{}}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4812,"id":4821,"nodeType":"Return","src":"15077:31:27"}]},"documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"14875:113:27","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4823,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:27","nodeType":"FunctionDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:27","nodeType":"VariableDeclaration","scope":4823,"src":"15019:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"},"typeName":{"id":4807,"nodeType":"UserDefinedTypeName","pathNode":{"id":4806,"name":"Rounding","nameLocations":["15019:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"15019:8:27"},"referencedDeclaration":3781,"src":"15019:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3781","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:27"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4823,"src":"15061:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4810,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:27"},"scope":4824,"src":"14993:122:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4825,"src":"203:14914:27","usedErrors":[3776],"usedEvents":[]}],"src":"103:15015:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[4929]},"id":4930,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4827,"nodeType":"StructuredDocumentation","src":"135:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4929,"linearizedBaseContracts":[4929],"name":"SignedMath","nameLocation":"224:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":4844,"nodeType":"Block","src":"376:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"393:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"397:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4841,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"405:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:28","trueExpression":{"id":4840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"401:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4836,"id":4843,"nodeType":"Return","src":"386:20:28"}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"241:66:28","text":" @dev Returns the largest of two signed numbers."},"id":4845,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:28","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"a","nameLocation":"332:1:28","nodeType":"VariableDeclaration","scope":4845,"src":"325:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4829,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"b","nameLocation":"342:1:28","nodeType":"VariableDeclaration","scope":4845,"src":"335:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4831,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:28"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4845,"src":"368:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4834,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:28"},"scope":4929,"src":"312:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4862,"nodeType":"Block","src":"555:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"572:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"576:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4859,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"584:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:28","trueExpression":{"id":4858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"580:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4854,"id":4861,"nodeType":"Return","src":"565:20:28"}]},"documentation":{"id":4846,"nodeType":"StructuredDocumentation","src":"419:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:28","nodeType":"FunctionDefinition","parameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4848,"mutability":"mutable","name":"a","nameLocation":"511:1:28","nodeType":"VariableDeclaration","scope":4863,"src":"504:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4847,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4850,"mutability":"mutable","name":"b","nameLocation":"521:1:28","nodeType":"VariableDeclaration","scope":4863,"src":"514:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4849,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:28"},"returnParameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4863,"src":"547:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4852,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:28"},"scope":4929,"src":"491:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4906,"nodeType":"Block","src":"797:162:28","statements":[{"assignments":[4874],"declarations":[{"constant":false,"id":4874,"mutability":"mutable","name":"x","nameLocation":"866:1:28","nodeType":"VariableDeclaration","scope":4906,"src":"859:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4873,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4887,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"871:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4876,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"875:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"882:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4880,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"886:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"911:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4893,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"931:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4891,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:28","typeDescriptions":{}}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4889,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:28","typeDescriptions":{}}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"945:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4899,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"949:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4872,"id":4905,"nodeType":"Return","src":"904:48:28"}]},"documentation":{"id":4864,"nodeType":"StructuredDocumentation","src":"598:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4907,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:28","nodeType":"FunctionDefinition","parameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"a","nameLocation":"753:1:28","nodeType":"VariableDeclaration","scope":4907,"src":"746:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4865,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4868,"mutability":"mutable","name":"b","nameLocation":"763:1:28","nodeType":"VariableDeclaration","scope":4907,"src":"756:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4867,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:28"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4907,"src":"789:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4870,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:28"},"scope":4929,"src":"729:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4927,"nodeType":"Block","src":"1103:158:28","statements":[{"id":4926,"nodeType":"UncheckedBlock","src":"1113:142:28","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"1228:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:28","subExpression":{"id":4921,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"1242:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:28","trueExpression":{"id":4920,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"1237:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:28","typeDescriptions":{}}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4914,"id":4925,"nodeType":"Return","src":"1213:31:28"}]}]},"documentation":{"id":4908,"nodeType":"StructuredDocumentation","src":"965:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4928,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:28","nodeType":"FunctionDefinition","parameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"n","nameLocation":"1068:1:28","nodeType":"VariableDeclaration","scope":4928,"src":"1061:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4909,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:28"},"returnParameters":{"id":4914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4928,"src":"1094:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:28"},"scope":4929,"src":"1048:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4930,"src":"216:1047:28","usedErrors":[],"usedEvents":[]}],"src":"109:1155:28"},"id":28},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[5542]},"id":5543,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4931,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":4932,"nodeType":"StructuredDocumentation","src":"231:1098:29","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":5542,"linearizedBaseContracts":[5542],"name":"EnumerableSet","nameLocation":"1338:13:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":4940,"members":[{"constant":false,"id":4935,"mutability":"mutable","name":"_values","nameLocation":"1862:7:29","nodeType":"VariableDeclaration","scope":4940,"src":"1852:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4934,"nodeType":"ArrayTypeName","src":"1852:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4939,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:29","nodeType":"VariableDeclaration","scope":4940,"src":"2020:44:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":4938,"keyName":"value","keyNameLocation":"2036:5:29","keyType":{"id":4936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:29","nodeType":"StructDefinition","scope":5542,"src":"1798:273:29","visibility":"public"},{"body":{"id":4981,"nodeType":"Block","src":"2310:337:29","statements":[{"condition":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:29","subExpression":{"arguments":[{"id":4952,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"2335:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"2340:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4951,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"2325:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4979,"nodeType":"Block","src":"2604:37:29","statements":[{"expression":{"hexValue":"66616c7365","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4950,"id":4978,"nodeType":"Return","src":"2618:12:29"}]},"id":4980,"nodeType":"IfStatement","src":"2320:321:29","trueBody":{"id":4976,"nodeType":"Block","src":"2348:250:29","statements":[{"expression":{"arguments":[{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"2379:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4956,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"2362:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"2362:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:29","memberName":"push","nodeType":"MemberAccess","src":"2362:16:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4963,"nodeType":"ExpressionStatement","src":"2362:23:29"},{"expression":{"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4964,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"2520:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"2520:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4968,"indexExpression":{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"2535:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":4969,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"2544:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"2544:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:29","memberName":"length","nodeType":"MemberAccess","src":"2544:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4973,"nodeType":"ExpressionStatement","src":"2520:42:29"},{"expression":{"hexValue":"74727565","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4950,"id":4975,"nodeType":"Return","src":"2576:11:29"}]}}]},"documentation":{"id":4941,"nodeType":"StructuredDocumentation","src":"2077:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:29","nodeType":"FunctionDefinition","parameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"set","nameLocation":"2267:3:29","nodeType":"VariableDeclaration","scope":4982,"src":"2255:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4943,"nodeType":"UserDefinedTypeName","pathNode":{"id":4942,"name":"Set","nameLocations":["2255:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"2255:3:29"},"referencedDeclaration":4940,"src":"2255:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4946,"mutability":"mutable","name":"value","nameLocation":"2280:5:29","nodeType":"VariableDeclaration","scope":4982,"src":"2272:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:29"},"returnParameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4982,"src":"2304:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4948,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:29"},"scope":5542,"src":"2241:406:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5065,"nodeType":"Block","src":"2887:1296:29","statements":[{"assignments":[4994],"declarations":[{"constant":false,"id":4994,"mutability":"mutable","name":"position","nameLocation":"2999:8:29","nodeType":"VariableDeclaration","scope":5065,"src":"2991:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4999,"initialValue":{"baseExpression":{"expression":{"id":4995,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"3010:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"3010:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4998,"indexExpression":{"id":4997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"3025:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"3046:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5063,"nodeType":"Block","src":"4140:37:29","statements":[{"expression":{"hexValue":"66616c7365","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4992,"id":5062,"nodeType":"Return","src":"4154:12:29"}]},"id":5064,"nodeType":"IfStatement","src":"3042:1135:29","trueBody":{"id":5060,"nodeType":"Block","src":"3061:1073:29","statements":[{"assignments":[5004],"declarations":[{"constant":false,"id":5004,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:29","nodeType":"VariableDeclaration","scope":5060,"src":"3413:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5003,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5008,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5005,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"3434:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:29"},{"assignments":[5010],"declarations":[{"constant":false,"id":5010,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:29","nodeType":"VariableDeclaration","scope":5060,"src":"3460:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5009,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5016,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5011,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"3480:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"3480:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:29","memberName":"length","nodeType":"MemberAccess","src":"3480:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"3521:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5018,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"3535:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"3517:378:29","trueBody":{"id":5043,"nodeType":"Block","src":"3546:349:29","statements":[{"assignments":[5021],"declarations":[{"constant":false,"id":5021,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:29","nodeType":"VariableDeclaration","scope":5043,"src":"3564:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5026,"initialValue":{"baseExpression":{"expression":{"id":5022,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"3584:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"3584:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5025,"indexExpression":{"id":5024,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"3596:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:29"},{"expression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5027,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"3705:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"3705:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5031,"indexExpression":{"id":5029,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"3717:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5032,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"3731:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5034,"nodeType":"ExpressionStatement","src":"3705:35:29"},{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5035,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"3844:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"3844:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5039,"indexExpression":{"id":5037,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"3859:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5040,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"3872:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5042,"nodeType":"ExpressionStatement","src":"3844:36:29"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5045,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"3973:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"3973:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:29","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:29","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5051,"nodeType":"ExpressionStatement","src":"3973:17:29"},{"expression":{"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:29","subExpression":{"baseExpression":{"expression":{"id":5052,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"4076:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"4076:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5055,"indexExpression":{"id":5054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"4091:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5057,"nodeType":"ExpressionStatement","src":"4069:28:29"},{"expression":{"hexValue":"74727565","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4992,"id":5059,"nodeType":"Return","src":"4112:11:29"}]}}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"2653:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5066,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:29","nodeType":"FunctionDefinition","parameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"set","nameLocation":"2844:3:29","nodeType":"VariableDeclaration","scope":5066,"src":"2832:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4985,"nodeType":"UserDefinedTypeName","pathNode":{"id":4984,"name":"Set","nameLocations":["2832:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"2832:3:29"},"referencedDeclaration":4940,"src":"2832:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4988,"mutability":"mutable","name":"value","nameLocation":"2857:5:29","nodeType":"VariableDeclaration","scope":5066,"src":"2849:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:29"},"returnParameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5066,"src":"2881:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4990,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:29"},"scope":5542,"src":"2815:1368:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5084,"nodeType":"Block","src":"4343:50:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":5077,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"4360:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:29","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"4360:14:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5080,"indexExpression":{"id":5079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"4375:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5076,"id":5083,"nodeType":"Return","src":"4353:33:29"}]},"documentation":{"id":5067,"nodeType":"StructuredDocumentation","src":"4189:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":5085,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:29","nodeType":"FunctionDefinition","parameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"set","nameLocation":"4295:3:29","nodeType":"VariableDeclaration","scope":5085,"src":"4283:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5069,"nodeType":"UserDefinedTypeName","pathNode":{"id":5068,"name":"Set","nameLocations":["4283:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"4283:3:29"},"referencedDeclaration":4940,"src":"4283:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5072,"mutability":"mutable","name":"value","nameLocation":"4308:5:29","nodeType":"VariableDeclaration","scope":5085,"src":"4300:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:29"},"returnParameters":{"id":5076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5085,"src":"4337:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5074,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:29"},"scope":5542,"src":"4264:129:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5098,"nodeType":"Block","src":"4539:42:29","statements":[{"expression":{"expression":{"expression":{"id":5094,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"4556:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"4556:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:29","memberName":"length","nodeType":"MemberAccess","src":"4556:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5093,"id":5097,"nodeType":"Return","src":"4549:25:29"}]},"documentation":{"id":5086,"nodeType":"StructuredDocumentation","src":"4399:70:29","text":" @dev Returns the number of values on the set. O(1)."},"id":5099,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:29","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"set","nameLocation":"4503:3:29","nodeType":"VariableDeclaration","scope":5099,"src":"4491:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5088,"nodeType":"UserDefinedTypeName","pathNode":{"id":5087,"name":"Set","nameLocations":["4491:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"4491:3:29"},"referencedDeclaration":4940,"src":"4491:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:29"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5099,"src":"4530:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:29"},"scope":5542,"src":"4474:107:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5115,"nodeType":"Block","src":"4999:42:29","statements":[{"expression":{"baseExpression":{"expression":{"id":5110,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"5016:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"5016:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5113,"indexExpression":{"id":5112,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"5028:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5109,"id":5114,"nodeType":"Return","src":"5009:25:29"}]},"documentation":{"id":5100,"nodeType":"StructuredDocumentation","src":"4587:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5116,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:29","nodeType":"FunctionDefinition","parameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"set","nameLocation":"4948:3:29","nodeType":"VariableDeclaration","scope":5116,"src":"4936:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5102,"nodeType":"UserDefinedTypeName","pathNode":{"id":5101,"name":"Set","nameLocations":["4936:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"4936:3:29"},"referencedDeclaration":4940,"src":"4936:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5105,"mutability":"mutable","name":"index","nameLocation":"4961:5:29","nodeType":"VariableDeclaration","scope":5116,"src":"4953:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5104,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:29"},"returnParameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5116,"src":"4990:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:29"},"scope":5542,"src":"4923:118:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5129,"nodeType":"Block","src":"5655:35:29","statements":[{"expression":{"expression":{"id":5126,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"5672:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"5672:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":5125,"id":5128,"nodeType":"Return","src":"5665:18:29"}]},"documentation":{"id":5117,"nodeType":"StructuredDocumentation","src":"5047:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5130,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:29","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"set","nameLocation":"5610:3:29","nodeType":"VariableDeclaration","scope":5130,"src":"5598:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5119,"nodeType":"UserDefinedTypeName","pathNode":{"id":5118,"name":"Set","nameLocations":["5598:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"5598:3:29"},"referencedDeclaration":4940,"src":"5598:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:29"},"returnParameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5130,"src":"5637:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5123,"nodeType":"ArrayTypeName","src":"5637:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:29"},"scope":5542,"src":"5581:109:29","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":5134,"members":[{"constant":false,"id":5133,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:29","nodeType":"VariableDeclaration","scope":5134,"src":"5743:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5132,"nodeType":"UserDefinedTypeName","pathNode":{"id":5131,"name":"Set","nameLocations":["5743:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"5743:3:29"},"referencedDeclaration":4940,"src":"5743:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:29","nodeType":"StructDefinition","scope":5542,"src":"5715:45:29","visibility":"public"},{"body":{"id":5151,"nodeType":"Block","src":"6006:47:29","statements":[{"expression":{"arguments":[{"expression":{"id":5146,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"6028:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"6028:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"6040:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5145,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"6023:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5144,"id":5150,"nodeType":"Return","src":"6016:30:29"}]},"documentation":{"id":5135,"nodeType":"StructuredDocumentation","src":"5766:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5152,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:29","nodeType":"FunctionDefinition","parameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"set","nameLocation":"5962:3:29","nodeType":"VariableDeclaration","scope":5152,"src":"5943:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5137,"nodeType":"UserDefinedTypeName","pathNode":{"id":5136,"name":"Bytes32Set","nameLocations":["5943:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5134,"src":"5943:10:29"},"referencedDeclaration":5134,"src":"5943:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5140,"mutability":"mutable","name":"value","nameLocation":"5975:5:29","nodeType":"VariableDeclaration","scope":5152,"src":"5967:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:29"},"returnParameters":{"id":5144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5152,"src":"6000:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5142,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:29"},"scope":5542,"src":"5930:123:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5169,"nodeType":"Block","src":"6300:50:29","statements":[{"expression":{"arguments":[{"expression":{"id":5164,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"6325:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"6325:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"6337:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5163,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"6317:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5162,"id":5168,"nodeType":"Return","src":"6310:33:29"}]},"documentation":{"id":5153,"nodeType":"StructuredDocumentation","src":"6059:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5170,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:29","nodeType":"FunctionDefinition","parameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"set","nameLocation":"6256:3:29","nodeType":"VariableDeclaration","scope":5170,"src":"6237:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5155,"nodeType":"UserDefinedTypeName","pathNode":{"id":5154,"name":"Bytes32Set","nameLocations":["6237:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5134,"src":"6237:10:29"},"referencedDeclaration":5134,"src":"6237:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5158,"mutability":"mutable","name":"value","nameLocation":"6269:5:29","nodeType":"VariableDeclaration","scope":5170,"src":"6261:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:29"},"returnParameters":{"id":5162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5170,"src":"6294:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5160,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:29"},"scope":5542,"src":"6221:129:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5187,"nodeType":"Block","src":"6517:52:29","statements":[{"expression":{"arguments":[{"expression":{"id":5182,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"6544:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"6544:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"6556:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5181,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"6534:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5180,"id":5186,"nodeType":"Return","src":"6527:35:29"}]},"documentation":{"id":5171,"nodeType":"StructuredDocumentation","src":"6356:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":5188,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:29","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"set","nameLocation":"6468:3:29","nodeType":"VariableDeclaration","scope":5188,"src":"6449:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5173,"nodeType":"UserDefinedTypeName","pathNode":{"id":5172,"name":"Bytes32Set","nameLocations":["6449:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5134,"src":"6449:10:29"},"referencedDeclaration":5134,"src":"6449:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5176,"mutability":"mutable","name":"value","nameLocation":"6481:5:29","nodeType":"VariableDeclaration","scope":5188,"src":"6473:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:29"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5188,"src":"6511:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5178,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:29"},"scope":5542,"src":"6431:138:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5202,"nodeType":"Block","src":"6722:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":5198,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"6747:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"6747:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5197,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"6739:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5196,"id":5201,"nodeType":"Return","src":"6732:26:29"}]},"documentation":{"id":5189,"nodeType":"StructuredDocumentation","src":"6575:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":5203,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:29","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"set","nameLocation":"6685:3:29","nodeType":"VariableDeclaration","scope":5203,"src":"6666:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5191,"nodeType":"UserDefinedTypeName","pathNode":{"id":5190,"name":"Bytes32Set","nameLocations":["6666:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5134,"src":"6666:10:29"},"referencedDeclaration":5134,"src":"6666:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:29"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5203,"src":"6713:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:29"},"scope":5542,"src":"6650:115:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5220,"nodeType":"Block","src":"7190:46:29","statements":[{"expression":{"arguments":[{"expression":{"id":5215,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"7211:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"7211:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5217,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7223:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5214,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"7207:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5213,"id":5219,"nodeType":"Return","src":"7200:29:29"}]},"documentation":{"id":5204,"nodeType":"StructuredDocumentation","src":"6771:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5221,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:29","nodeType":"FunctionDefinition","parameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"set","nameLocation":"7138:3:29","nodeType":"VariableDeclaration","scope":5221,"src":"7119:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5206,"nodeType":"UserDefinedTypeName","pathNode":{"id":5205,"name":"Bytes32Set","nameLocations":["7119:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5134,"src":"7119:10:29"},"referencedDeclaration":5134,"src":"7119:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5209,"mutability":"mutable","name":"index","nameLocation":"7151:5:29","nodeType":"VariableDeclaration","scope":5221,"src":"7143:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:29"},"returnParameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5221,"src":"7181:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:29"},"scope":5542,"src":"7107:129:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5250,"nodeType":"Block","src":"7857:219:29","statements":[{"assignments":[5235],"declarations":[{"constant":false,"id":5235,"mutability":"mutable","name":"store","nameLocation":"7884:5:29","nodeType":"VariableDeclaration","scope":5250,"src":"7867:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5234,"nodeType":"ArrayTypeName","src":"7867:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5240,"initialValue":{"arguments":[{"expression":{"id":5237,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"7900:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"7900:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5236,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"7892:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:29"},{"assignments":[5245],"declarations":[{"constant":false,"id":5245,"mutability":"mutable","name":"result","nameLocation":"7938:6:29","nodeType":"VariableDeclaration","scope":5250,"src":"7921:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5244,"nodeType":"ArrayTypeName","src":"7921:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5246,"nodeType":"VariableDeclarationStatement","src":"7921:23:29"},{"AST":{"nativeSrc":"8007:39:29","nodeType":"YulBlock","src":"8007:39:29","statements":[{"nativeSrc":"8021:15:29","nodeType":"YulAssignment","src":"8021:15:29","value":{"name":"store","nativeSrc":"8031:5:29","nodeType":"YulIdentifier","src":"8031:5:29"},"variableNames":[{"name":"result","nativeSrc":"8021:6:29","nodeType":"YulIdentifier","src":"8021:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5245,"isOffset":false,"isSlot":false,"src":"8021:6:29","valueSize":1},{"declaration":5235,"isOffset":false,"isSlot":false,"src":"8031:5:29","valueSize":1}],"id":5247,"nodeType":"InlineAssembly","src":"7998:48:29"},{"expression":{"id":5248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"8063:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":5230,"id":5249,"nodeType":"Return","src":"8056:13:29"}]},"documentation":{"id":5222,"nodeType":"StructuredDocumentation","src":"7242:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5251,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:29","nodeType":"FunctionDefinition","parameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"set","nameLocation":"7811:3:29","nodeType":"VariableDeclaration","scope":5251,"src":"7792:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5224,"nodeType":"UserDefinedTypeName","pathNode":{"id":5223,"name":"Bytes32Set","nameLocations":["7792:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5134,"src":"7792:10:29"},"referencedDeclaration":5134,"src":"7792:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5134_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:29"},"returnParameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5251,"src":"7839:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5228,"nodeType":"ArrayTypeName","src":"7839:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:29"},"scope":5542,"src":"7776:300:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":5255,"members":[{"constant":false,"id":5254,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:29","nodeType":"VariableDeclaration","scope":5255,"src":"8129:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5253,"nodeType":"UserDefinedTypeName","pathNode":{"id":5252,"name":"Set","nameLocations":["8129:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"8129:3:29"},"referencedDeclaration":4940,"src":"8129:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:29","nodeType":"StructDefinition","scope":5542,"src":"8101:45:29","visibility":"public"},{"body":{"id":5281,"nodeType":"Block","src":"8392:74:29","statements":[{"expression":{"arguments":[{"expression":{"id":5267,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"8414:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5254,"src":"8414:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"8450:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5273,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:29","typeDescriptions":{}}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5271,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:29","typeDescriptions":{}}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:29","typeDescriptions":{}}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5266,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"8409:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5265,"id":5280,"nodeType":"Return","src":"8402:57:29"}]},"documentation":{"id":5256,"nodeType":"StructuredDocumentation","src":"8152:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5282,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:29","nodeType":"FunctionDefinition","parameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"set","nameLocation":"8348:3:29","nodeType":"VariableDeclaration","scope":5282,"src":"8329:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5258,"nodeType":"UserDefinedTypeName","pathNode":{"id":5257,"name":"AddressSet","nameLocations":["8329:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5255,"src":"8329:10:29"},"referencedDeclaration":5255,"src":"8329:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5261,"mutability":"mutable","name":"value","nameLocation":"8361:5:29","nodeType":"VariableDeclaration","scope":5282,"src":"8353:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5260,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:29"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5282,"src":"8386:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5263,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:29"},"scope":5542,"src":"8316:150:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"8713:77:29","statements":[{"expression":{"arguments":[{"expression":{"id":5294,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"8738:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5254,"src":"8738:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"8774:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5300,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:29","typeDescriptions":{}}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5298,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:29","typeDescriptions":{}}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:29","typeDescriptions":{}}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5293,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"8730:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5292,"id":5307,"nodeType":"Return","src":"8723:60:29"}]},"documentation":{"id":5283,"nodeType":"StructuredDocumentation","src":"8472:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:29","nodeType":"FunctionDefinition","parameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"set","nameLocation":"8669:3:29","nodeType":"VariableDeclaration","scope":5309,"src":"8650:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5285,"nodeType":"UserDefinedTypeName","pathNode":{"id":5284,"name":"AddressSet","nameLocations":["8650:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5255,"src":"8650:10:29"},"referencedDeclaration":5255,"src":"8650:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5288,"mutability":"mutable","name":"value","nameLocation":"8682:5:29","nodeType":"VariableDeclaration","scope":5309,"src":"8674:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5287,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:29"},"returnParameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5309,"src":"8707:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5290,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:29"},"scope":5542,"src":"8634:156:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5335,"nodeType":"Block","src":"8957:79:29","statements":[{"expression":{"arguments":[{"expression":{"id":5321,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"8984:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5254,"src":"8984:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"9020:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5327,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:29","typeDescriptions":{}}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:29","typeDescriptions":{}}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:29","typeDescriptions":{}}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5320,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"8974:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5319,"id":5334,"nodeType":"Return","src":"8967:62:29"}]},"documentation":{"id":5310,"nodeType":"StructuredDocumentation","src":"8796:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":5336,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:29","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"mutability":"mutable","name":"set","nameLocation":"8908:3:29","nodeType":"VariableDeclaration","scope":5336,"src":"8889:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5312,"nodeType":"UserDefinedTypeName","pathNode":{"id":5311,"name":"AddressSet","nameLocations":["8889:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5255,"src":"8889:10:29"},"referencedDeclaration":5255,"src":"8889:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5315,"mutability":"mutable","name":"value","nameLocation":"8921:5:29","nodeType":"VariableDeclaration","scope":5336,"src":"8913:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5314,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:29"},"returnParameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5336,"src":"8951:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5317,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:29"},"scope":5542,"src":"8871:165:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5350,"nodeType":"Block","src":"9189:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":5346,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"9214:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5254,"src":"9214:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5345,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"9206:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5344,"id":5349,"nodeType":"Return","src":"9199:26:29"}]},"documentation":{"id":5337,"nodeType":"StructuredDocumentation","src":"9042:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":5351,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:29","nodeType":"FunctionDefinition","parameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"set","nameLocation":"9152:3:29","nodeType":"VariableDeclaration","scope":5351,"src":"9133:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5339,"nodeType":"UserDefinedTypeName","pathNode":{"id":5338,"name":"AddressSet","nameLocations":["9133:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5255,"src":"9133:10:29"},"referencedDeclaration":5255,"src":"9133:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:29"},"returnParameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5351,"src":"9180:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5342,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:29"},"scope":5542,"src":"9117:115:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5377,"nodeType":"Block","src":"9657:73:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":5369,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"9702:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5254,"src":"9702:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5371,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"9714:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5368,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"9698:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5366,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:29","typeDescriptions":{}}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5364,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:29","typeDescriptions":{}}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5362,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:29","typeDescriptions":{}}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5361,"id":5376,"nodeType":"Return","src":"9667:56:29"}]},"documentation":{"id":5352,"nodeType":"StructuredDocumentation","src":"9238:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5378,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:29","nodeType":"FunctionDefinition","parameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"set","nameLocation":"9605:3:29","nodeType":"VariableDeclaration","scope":5378,"src":"9586:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5354,"nodeType":"UserDefinedTypeName","pathNode":{"id":5353,"name":"AddressSet","nameLocations":["9586:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5255,"src":"9586:10:29"},"referencedDeclaration":5255,"src":"9586:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"index","nameLocation":"9618:5:29","nodeType":"VariableDeclaration","scope":5378,"src":"9610:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5356,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:29"},"returnParameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5378,"src":"9648:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5359,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:29"},"scope":5542,"src":"9574:156:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5407,"nodeType":"Block","src":"10351:219:29","statements":[{"assignments":[5392],"declarations":[{"constant":false,"id":5392,"mutability":"mutable","name":"store","nameLocation":"10378:5:29","nodeType":"VariableDeclaration","scope":5407,"src":"10361:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5391,"nodeType":"ArrayTypeName","src":"10361:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5397,"initialValue":{"arguments":[{"expression":{"id":5394,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"10394:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5254,"src":"10394:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5393,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"10386:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:29"},{"assignments":[5402],"declarations":[{"constant":false,"id":5402,"mutability":"mutable","name":"result","nameLocation":"10432:6:29","nodeType":"VariableDeclaration","scope":5407,"src":"10415:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5400,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5401,"nodeType":"ArrayTypeName","src":"10415:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5403,"nodeType":"VariableDeclarationStatement","src":"10415:23:29"},{"AST":{"nativeSrc":"10501:39:29","nodeType":"YulBlock","src":"10501:39:29","statements":[{"nativeSrc":"10515:15:29","nodeType":"YulAssignment","src":"10515:15:29","value":{"name":"store","nativeSrc":"10525:5:29","nodeType":"YulIdentifier","src":"10525:5:29"},"variableNames":[{"name":"result","nativeSrc":"10515:6:29","nodeType":"YulIdentifier","src":"10515:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5402,"isOffset":false,"isSlot":false,"src":"10515:6:29","valueSize":1},{"declaration":5392,"isOffset":false,"isSlot":false,"src":"10525:5:29","valueSize":1}],"id":5404,"nodeType":"InlineAssembly","src":"10492:48:29"},{"expression":{"id":5405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"10557:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5387,"id":5406,"nodeType":"Return","src":"10550:13:29"}]},"documentation":{"id":5379,"nodeType":"StructuredDocumentation","src":"9736:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5408,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:29","nodeType":"FunctionDefinition","parameters":{"id":5383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5382,"mutability":"mutable","name":"set","nameLocation":"10305:3:29","nodeType":"VariableDeclaration","scope":5408,"src":"10286:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5381,"nodeType":"UserDefinedTypeName","pathNode":{"id":5380,"name":"AddressSet","nameLocations":["10286:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5255,"src":"10286:10:29"},"referencedDeclaration":5255,"src":"10286:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5255_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:29"},"returnParameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5408,"src":"10333:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5384,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5385,"nodeType":"ArrayTypeName","src":"10333:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:29"},"scope":5542,"src":"10270:300:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":5412,"members":[{"constant":false,"id":5411,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:29","nodeType":"VariableDeclaration","scope":5412,"src":"10617:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5410,"nodeType":"UserDefinedTypeName","pathNode":{"id":5409,"name":"Set","nameLocations":["10617:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":4940,"src":"10617:3:29"},"referencedDeclaration":4940,"src":"10617:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:29","nodeType":"StructDefinition","scope":5542,"src":"10592:42:29","visibility":"public"},{"body":{"id":5432,"nodeType":"Block","src":"10877:56:29","statements":[{"expression":{"arguments":[{"expression":{"id":5424,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"10899:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5411,"src":"10899:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"10919:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:29","typeDescriptions":{}}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5423,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"10894:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5422,"id":5431,"nodeType":"Return","src":"10887:39:29"}]},"documentation":{"id":5413,"nodeType":"StructuredDocumentation","src":"10640:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:29","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"set","nameLocation":"10833:3:29","nodeType":"VariableDeclaration","scope":5433,"src":"10817:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5415,"nodeType":"UserDefinedTypeName","pathNode":{"id":5414,"name":"UintSet","nameLocations":["10817:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5412,"src":"10817:7:29"},"referencedDeclaration":5412,"src":"10817:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5418,"mutability":"mutable","name":"value","nameLocation":"10846:5:29","nodeType":"VariableDeclaration","scope":5433,"src":"10838:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:29"},"returnParameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"10871:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5420,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:29"},"scope":5542,"src":"10804:129:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5453,"nodeType":"Block","src":"11177:59:29","statements":[{"expression":{"arguments":[{"expression":{"id":5445,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"11202:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5411,"src":"11202:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"11222:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:29","typeDescriptions":{}}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5444,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"11194:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5443,"id":5452,"nodeType":"Return","src":"11187:42:29"}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"10939:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5454,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:29","nodeType":"FunctionDefinition","parameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"set","nameLocation":"11133:3:29","nodeType":"VariableDeclaration","scope":5454,"src":"11117:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5436,"nodeType":"UserDefinedTypeName","pathNode":{"id":5435,"name":"UintSet","nameLocations":["11117:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5412,"src":"11117:7:29"},"referencedDeclaration":5412,"src":"11117:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5439,"mutability":"mutable","name":"value","nameLocation":"11146:5:29","nodeType":"VariableDeclaration","scope":5454,"src":"11138:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:29"},"returnParameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5454,"src":"11171:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5441,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:29"},"scope":5542,"src":"11101:135:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5474,"nodeType":"Block","src":"11400:61:29","statements":[{"expression":{"arguments":[{"expression":{"id":5466,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"11427:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5411,"src":"11427:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"11447:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:29","typeDescriptions":{}}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5465,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"11417:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5464,"id":5473,"nodeType":"Return","src":"11410:44:29"}]},"documentation":{"id":5455,"nodeType":"StructuredDocumentation","src":"11242:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":5475,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:29","nodeType":"FunctionDefinition","parameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"set","nameLocation":"11351:3:29","nodeType":"VariableDeclaration","scope":5475,"src":"11335:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5457,"nodeType":"UserDefinedTypeName","pathNode":{"id":5456,"name":"UintSet","nameLocations":["11335:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5412,"src":"11335:7:29"},"referencedDeclaration":5412,"src":"11335:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5460,"mutability":"mutable","name":"value","nameLocation":"11364:5:29","nodeType":"VariableDeclaration","scope":5475,"src":"11356:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5459,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:29"},"returnParameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5475,"src":"11394:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5462,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:29"},"scope":5542,"src":"11317:144:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5489,"nodeType":"Block","src":"11611:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":5485,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"11636:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5411,"src":"11636:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5484,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"11628:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5483,"id":5488,"nodeType":"Return","src":"11621:26:29"}]},"documentation":{"id":5476,"nodeType":"StructuredDocumentation","src":"11467:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":5490,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:29","nodeType":"FunctionDefinition","parameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"set","nameLocation":"11574:3:29","nodeType":"VariableDeclaration","scope":5490,"src":"11558:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5478,"nodeType":"UserDefinedTypeName","pathNode":{"id":5477,"name":"UintSet","nameLocations":["11558:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5412,"src":"11558:7:29"},"referencedDeclaration":5412,"src":"11558:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:29"},"returnParameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5490,"src":"11602:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:29"},"scope":5542,"src":"11542:112:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5510,"nodeType":"Block","src":"12076:55:29","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5504,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"12105:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5411,"src":"12105:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5506,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"12117:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5503,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"12101:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:29","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5500,"id":5509,"nodeType":"Return","src":"12086:38:29"}]},"documentation":{"id":5491,"nodeType":"StructuredDocumentation","src":"11660:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5511,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:29","nodeType":"FunctionDefinition","parameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"set","nameLocation":"12024:3:29","nodeType":"VariableDeclaration","scope":5511,"src":"12008:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5493,"nodeType":"UserDefinedTypeName","pathNode":{"id":5492,"name":"UintSet","nameLocations":["12008:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5412,"src":"12008:7:29"},"referencedDeclaration":5412,"src":"12008:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5496,"mutability":"mutable","name":"index","nameLocation":"12037:5:29","nodeType":"VariableDeclaration","scope":5511,"src":"12029:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5495,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:29"},"returnParameters":{"id":5500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5511,"src":"12067:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:29"},"scope":5542,"src":"11996:135:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5540,"nodeType":"Block","src":"12749:219:29","statements":[{"assignments":[5525],"declarations":[{"constant":false,"id":5525,"mutability":"mutable","name":"store","nameLocation":"12776:5:29","nodeType":"VariableDeclaration","scope":5540,"src":"12759:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5524,"nodeType":"ArrayTypeName","src":"12759:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5530,"initialValue":{"arguments":[{"expression":{"id":5527,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"12792:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5411,"src":"12792:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4940_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5526,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"12784:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4940_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:29"},{"assignments":[5535],"declarations":[{"constant":false,"id":5535,"mutability":"mutable","name":"result","nameLocation":"12830:6:29","nodeType":"VariableDeclaration","scope":5540,"src":"12813:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5533,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5534,"nodeType":"ArrayTypeName","src":"12813:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5536,"nodeType":"VariableDeclarationStatement","src":"12813:23:29"},{"AST":{"nativeSrc":"12899:39:29","nodeType":"YulBlock","src":"12899:39:29","statements":[{"nativeSrc":"12913:15:29","nodeType":"YulAssignment","src":"12913:15:29","value":{"name":"store","nativeSrc":"12923:5:29","nodeType":"YulIdentifier","src":"12923:5:29"},"variableNames":[{"name":"result","nativeSrc":"12913:6:29","nodeType":"YulIdentifier","src":"12913:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5535,"isOffset":false,"isSlot":false,"src":"12913:6:29","valueSize":1},{"declaration":5525,"isOffset":false,"isSlot":false,"src":"12923:5:29","valueSize":1}],"id":5537,"nodeType":"InlineAssembly","src":"12890:48:29"},{"expression":{"id":5538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"12955:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5520,"id":5539,"nodeType":"Return","src":"12948:13:29"}]},"documentation":{"id":5512,"nodeType":"StructuredDocumentation","src":"12137:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5541,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:29","nodeType":"FunctionDefinition","parameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"set","nameLocation":"12703:3:29","nodeType":"VariableDeclaration","scope":5541,"src":"12687:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5514,"nodeType":"UserDefinedTypeName","pathNode":{"id":5513,"name":"UintSet","nameLocations":["12687:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5412,"src":"12687:7:29"},"referencedDeclaration":5412,"src":"12687:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5412_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:29"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5541,"src":"12731:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5517,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5518,"nodeType":"ArrayTypeName","src":"12731:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:29"},"scope":5542,"src":"12671:297:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5543,"src":"1330:11640:29","usedErrors":[],"usedEvents":[]}],"src":"205:12766:29"},"id":29},"contracts/BSSToken.sol":{"ast":{"absolutePath":"contracts/BSSToken.sol","exportedSymbols":{"BSSToken":[5640],"Context":[2318],"ECDSA":[3433],"EIP712":[3660],"ERC20":[1371],"ERC20Burnable":[1495],"ERC20Pausable":[1529],"ERC20Permit":[1683],"IERC20":[1449],"IERC20Errors":[761],"IERC20Metadata":[1709],"IERC20Permit":[1745],"Nonces":[2386],"Ownable":[526],"Pausable":[2503]},"id":5641,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5544,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"39:24:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5641,"sourceUnit":1372,"src":"67:55:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":5546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5641,"sourceUnit":1496,"src":"124:74:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":5547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5641,"sourceUnit":1530,"src":"200:74:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5641,"sourceUnit":527,"src":"276:52:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":5549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5641,"sourceUnit":1684,"src":"330:72:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5550,"name":"ERC20","nameLocations":["427:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"427:5:30"},"id":5551,"nodeType":"InheritanceSpecifier","src":"427:5:30"},{"baseName":{"id":5552,"name":"ERC20Burnable","nameLocations":["434:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"434:13:30"},"id":5553,"nodeType":"InheritanceSpecifier","src":"434:13:30"},{"baseName":{"id":5554,"name":"ERC20Pausable","nameLocations":["449:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":1529,"src":"449:13:30"},"id":5555,"nodeType":"InheritanceSpecifier","src":"449:13:30"},{"baseName":{"id":5556,"name":"Ownable","nameLocations":["464:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"464:7:30"},"id":5557,"nodeType":"InheritanceSpecifier","src":"464:7:30"},{"baseName":{"id":5558,"name":"ERC20Permit","nameLocations":["473:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":1683,"src":"473:11:30"},"id":5559,"nodeType":"InheritanceSpecifier","src":"473:11:30"}],"canonicalName":"BSSToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5640,"linearizedBaseContracts":[5640,1683,2386,3660,719,1745,526,1529,2503,1495,1371,761,1709,1449,2318],"name":"BSSToken","nameLocation":"415:8:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":5584,"nodeType":"Block","src":"607:67:30","statements":[{"expression":{"arguments":[{"expression":{"id":5574,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"624:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"628:6:30","memberName":"sender","nodeType":"MemberAccess","src":"624:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030303030","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"636:10:30","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"649:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5578,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"655:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"655:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"649:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"636:29:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5573,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"618:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"618:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5583,"nodeType":"ExpressionStatement","src":"618:48:30"}]},"id":5585,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"425353546f6b656e","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"521:10:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_99a7e65911965f2b0c9cb59d1b01a69aa39490643b56401331e6d053c9536aa2","typeString":"literal_string \"BSSToken\""},"value":"BSSToken"},{"hexValue":"425353","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"533:5:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_166e2e46cf2da1034f9ae2249dcd6d41994abaeb15666854f89236c448d458d5","typeString":"literal_string \"BSS\""},"value":"BSS"}],"id":5564,"kind":"baseConstructorSpecifier","modifierName":{"id":5561,"name":"ERC20","nameLocations":["515:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"515:5:30"},"nodeType":"ModifierInvocation","src":"515:24:30"},{"arguments":[{"expression":{"id":5566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"557:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"561:6:30","memberName":"sender","nodeType":"MemberAccess","src":"557:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5568,"kind":"baseConstructorSpecifier","modifierName":{"id":5565,"name":"Ownable","nameLocations":["549:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"549:7:30"},"nodeType":"ModifierInvocation","src":"549:19:30"},{"arguments":[{"hexValue":"425353546f6b656e","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"590:10:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_99a7e65911965f2b0c9cb59d1b01a69aa39490643b56401331e6d053c9536aa2","typeString":"literal_string \"BSSToken\""},"value":"BSSToken"}],"id":5571,"kind":"baseConstructorSpecifier","modifierName":{"id":5569,"name":"ERC20Permit","nameLocations":["578:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":1683,"src":"578:11:30"},"nodeType":"ModifierInvocation","src":"578:23:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5560,"nodeType":"ParameterList","parameters":[],"src":"503:2:30"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[],"src":"607:0:30"},"scope":5640,"src":"492:182:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5593,"nodeType":"Block","src":"716:27:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5590,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"727:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"727:8:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5592,"nodeType":"ExpressionStatement","src":"727:8:30"}]},"functionSelector":"8456cb59","id":5594,"implemented":true,"kind":"function","modifiers":[{"id":5588,"kind":"modifierInvocation","modifierName":{"id":5587,"name":"onlyOwner","nameLocations":["706:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"706:9:30"},"nodeType":"ModifierInvocation","src":"706:9:30"}],"name":"pause","nameLocation":"691:5:30","nodeType":"FunctionDefinition","parameters":{"id":5586,"nodeType":"ParameterList","parameters":[],"src":"696:2:30"},"returnParameters":{"id":5589,"nodeType":"ParameterList","parameters":[],"src":"716:0:30"},"scope":5640,"src":"682:61:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5602,"nodeType":"Block","src":"787:29:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5599,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"798:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"798:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5601,"nodeType":"ExpressionStatement","src":"798:10:30"}]},"functionSelector":"3f4ba83a","id":5603,"implemented":true,"kind":"function","modifiers":[{"id":5597,"kind":"modifierInvocation","modifierName":{"id":5596,"name":"onlyOwner","nameLocations":["777:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"777:9:30"},"nodeType":"ModifierInvocation","src":"777:9:30"}],"name":"unpause","nameLocation":"760:7:30","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[],"src":"767:2:30"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[],"src":"787:0:30"},"scope":5640,"src":"751:65:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5617,"nodeType":"Block","src":"883:36:30","statements":[{"expression":{"arguments":[{"id":5613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"900:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5614,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"904:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5612,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"894:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"894:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5616,"nodeType":"ExpressionStatement","src":"894:17:30"}]},"functionSelector":"40c10f19","id":5618,"implemented":true,"kind":"function","modifiers":[{"id":5610,"kind":"modifierInvocation","modifierName":{"id":5609,"name":"onlyOwner","nameLocations":["873:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"873:9:30"},"nodeType":"ModifierInvocation","src":"873:9:30"}],"name":"mint","nameLocation":"833:4:30","nodeType":"FunctionDefinition","parameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"to","nameLocation":"846:2:30","nodeType":"VariableDeclaration","scope":5618,"src":"838:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5604,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5607,"mutability":"mutable","name":"amount","nameLocation":"858:6:30","nodeType":"VariableDeclaration","scope":5618,"src":"850:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"837:28:30"},"returnParameters":{"id":5611,"nodeType":"ParameterList","parameters":[],"src":"883:0:30"},"scope":5640,"src":"824:95:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1178,1528],"body":{"id":5638,"nodeType":"Block","src":"1118:49:30","statements":[{"expression":{"arguments":[{"id":5633,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"1143:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5634,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"1149:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"1153:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5630,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1129:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BSSToken_$5640_$","typeString":"type(contract super BSSToken)"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1135:7:30","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1528,"src":"1129:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1129:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5637,"nodeType":"ExpressionStatement","src":"1129:30:30"}]},"id":5639,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1006:7:30","nodeType":"FunctionDefinition","overrides":{"id":5628,"nodeType":"OverrideSpecifier","overrides":[{"id":5626,"name":"ERC20","nameLocations":["1091:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"1091:5:30"},{"id":5627,"name":"ERC20Pausable","nameLocations":["1098:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":1529,"src":"1098:13:30"}],"src":"1082:30:30"},"parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"from","nameLocation":"1022:4:30","nodeType":"VariableDeclaration","scope":5639,"src":"1014:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5619,"name":"address","nodeType":"ElementaryTypeName","src":"1014:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5622,"mutability":"mutable","name":"to","nameLocation":"1036:2:30","nodeType":"VariableDeclaration","scope":5639,"src":"1028:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5621,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5624,"mutability":"mutable","name":"value","nameLocation":"1048:5:30","nodeType":"VariableDeclaration","scope":5639,"src":"1040:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1013:41:30"},"returnParameters":{"id":5629,"nodeType":"ParameterList","parameters":[],"src":"1118:0:30"},"scope":5640,"src":"997:170:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5641,"src":"406:764:30","usedErrors":[392,397,731,736,741,750,755,760,1560,1567,2328,2408,2411,2517,2519,3096,3101,3106],"usedEvents":[403,699,1383,1392,2400,2405]}],"src":"39:1131:30"},"id":30},"contracts/Vault.sol":{"ast":{"absolutePath":"contracts/Vault.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[668],"Address":[2288],"Context":[2318],"EnumerableSet":[5542],"IAccessControlEnumerable":[694],"IERC20":[1449],"IERC20Permit":[1745],"Ownable":[526],"SafeERC20":[2035],"Vault":[5792]},"id":5793,"nodeType":"SourceUnit","nodes":[{"id":5642,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"0:24:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5793,"sourceUnit":2036,"src":"28:65:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5644,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5793,"sourceUnit":1450,"src":"95:56:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5793,"sourceUnit":527,"src":"153:52:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":5646,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5793,"sourceUnit":669,"src":"207:79:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5647,"name":"Ownable","nameLocations":["308:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"308:7:31"},"id":5648,"nodeType":"InheritanceSpecifier","src":"308:7:31"},{"baseName":{"id":5649,"name":"AccessControlEnumerable","nameLocations":["317:23:31"],"nodeType":"IdentifierPath","referencedDeclaration":668,"src":"317:23:31"},"id":5650,"nodeType":"InheritanceSpecifier","src":"317:23:31"}],"canonicalName":"Vault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5792,"linearizedBaseContracts":[5792,668,295,3758,3770,694,378,526,2318],"name":"Vault","nameLocation":"299:5:31","nodeType":"ContractDefinition","nodes":[{"body":{"id":5663,"nodeType":"Block","src":"390:63:31","statements":[{"expression":{"arguments":[{"id":5658,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"412:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5659,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"432:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"432:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5657,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[635],"referencedDeclaration":635,"src":"401:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"401:44:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5662,"nodeType":"ExpressionStatement","src":"401:44:31"}]},"id":5664,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5653,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"376:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"376:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5655,"kind":"baseConstructorSpecifier","modifierName":{"id":5652,"name":"Ownable","nameLocations":["368:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"368:7:31"},"nodeType":"ModifierInvocation","src":"368:21:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5651,"nodeType":"ParameterList","parameters":[],"src":"365:2:31"},"returnParameters":{"id":5656,"nodeType":"ParameterList","parameters":[],"src":"390:0:31"},"scope":5792,"src":"354:99:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"id":5667,"mutability":"mutable","name":"token","nameLocation":"476:5:31","nodeType":"VariableDeclaration","scope":5792,"src":"461:20:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":5666,"nodeType":"UserDefinedTypeName","pathNode":{"id":5665,"name":"IERC20","nameLocations":["461:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"461:6:31"},"referencedDeclaration":1449,"src":"461:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"functionSelector":"f516440c","id":5669,"mutability":"mutable","name":"maxWithdrawAmount","nameLocation":"539:17:31","nodeType":"VariableDeclaration","scope":5792,"src":"524:32:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5668,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2287e96a","id":5671,"mutability":"mutable","name":"withdrawEnabled","nameLocation":"575:15:31","nodeType":"VariableDeclaration","scope":5792,"src":"563:27:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5670,"name":"bool","nodeType":"ElementaryTypeName","src":"563:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":true,"functionSelector":"85f438c1","id":5676,"mutability":"constant","name":"WITHDRAWER_ROLE","nameLocation":"621:15:31","nodeType":"VariableDeclaration","scope":5792,"src":"597:70:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"597:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"574954484452415745525f524f4c45","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"649:17:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4","typeString":"literal_string \"WITHDRAWER_ROLE\""},"value":"WITHDRAWER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4","typeString":"literal_string \"WITHDRAWER_ROLE\""}],"id":5673,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"639:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":5694,"nodeType":"Block","src":"716:172:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5679,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"749:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"749:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5681,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"760:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"760:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"749:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":5685,"name":"WITHDRAWER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"784:15:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5686,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"801:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"801:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5684,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"776:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"776:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"749:65:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420612077697468647261776572","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"829:28:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","typeString":"literal_string \"Caller is not a withdrawer\""},"value":"Caller is not a withdrawer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","typeString":"literal_string \"Caller is not a withdrawer\""}],"id":5678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"727:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"727:141:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5692,"nodeType":"ExpressionStatement","src":"727:141:31"},{"id":5693,"nodeType":"PlaceholderStatement","src":"879:1:31"}]},"id":5695,"name":"onlyWithdrawer","nameLocation":"699:14:31","nodeType":"ModifierDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[],"src":"713:2:31"},"src":"690:198:31","virtual":false,"visibility":"internal"},{"body":{"id":5706,"nodeType":"Block","src":"956:46:31","statements":[{"expression":{"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5702,"name":"withdrawEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"967:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5703,"name":"_isEnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"985:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"967:27:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5705,"nodeType":"ExpressionStatement","src":"967:27:31"}]},"functionSelector":"827a560b","id":5707,"implemented":true,"kind":"function","modifiers":[{"id":5700,"kind":"modifierInvocation","modifierName":{"id":5699,"name":"onlyOwner","nameLocations":["946:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"946:9:31"},"nodeType":"ModifierInvocation","src":"946:9:31"}],"name":"setWithdrawEnable","nameLocation":"905:17:31","nodeType":"FunctionDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5697,"mutability":"mutable","name":"_isEnable","nameLocation":"928:9:31","nodeType":"VariableDeclaration","scope":5707,"src":"923:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5696,"name":"bool","nodeType":"ElementaryTypeName","src":"923:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"922:16:31"},"returnParameters":{"id":5701,"nodeType":"ParameterList","parameters":[],"src":"956:0:31"},"scope":5792,"src":"896:106:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5718,"nodeType":"Block","src":"1077:49:31","statements":[{"expression":{"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5714,"name":"maxWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"1088:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5715,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"1108:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1088:30:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5717,"nodeType":"ExpressionStatement","src":"1088:30:31"}]},"functionSelector":"df74e028","id":5719,"implemented":true,"kind":"function","modifiers":[{"id":5712,"kind":"modifierInvocation","modifierName":{"id":5711,"name":"onlyOwner","nameLocations":["1067:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1067:9:31"},"nodeType":"ModifierInvocation","src":"1067:9:31"}],"name":"setMaxWithdrawAmount","nameLocation":"1019:20:31","nodeType":"FunctionDefinition","parameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"_maxAmount","nameLocation":"1048:10:31","nodeType":"VariableDeclaration","scope":5719,"src":"1040:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1039:20:31"},"returnParameters":{"id":5713,"nodeType":"ParameterList","parameters":[],"src":"1077:0:31"},"scope":5792,"src":"1010:116:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5731,"nodeType":"Block","src":"1184:33:31","statements":[{"expression":{"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5727,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"1195:5:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5728,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"1203:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"src":"1195:14:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":5730,"nodeType":"ExpressionStatement","src":"1195:14:31"}]},"functionSelector":"144fa6d7","id":5732,"implemented":true,"kind":"function","modifiers":[{"id":5725,"kind":"modifierInvocation","modifierName":{"id":5724,"name":"onlyOwner","nameLocations":["1174:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1174:9:31"},"nodeType":"ModifierInvocation","src":"1174:9:31"}],"name":"setToken","nameLocation":"1143:8:31","nodeType":"FunctionDefinition","parameters":{"id":5723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"_token","nameLocation":"1159:6:31","nodeType":"VariableDeclaration","scope":5732,"src":"1152:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},"typeName":{"id":5721,"nodeType":"UserDefinedTypeName","pathNode":{"id":5720,"name":"IERC20","nameLocations":["1152:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"1152:6:31"},"referencedDeclaration":1449,"src":"1152:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1151:15:31"},"returnParameters":{"id":5726,"nodeType":"ParameterList","parameters":[],"src":"1184:0:31"},"scope":5792,"src":"1134:83:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5760,"nodeType":"Block","src":"1297:184:31","statements":[{"expression":{"arguments":[{"id":5742,"name":"withdrawEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"1316:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177206973206e6f7420617661696c61626c65","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1333:27:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62","typeString":"literal_string \"Withdraw is not available\""},"value":"Withdraw is not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62","typeString":"literal_string \"Withdraw is not available\""}],"id":5741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1308:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5745,"nodeType":"ExpressionStatement","src":"1308:53:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"1380:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5748,"name":"maxWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"1391:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1380:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564206d6178696d756d20616d6f756e74","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:23:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b","typeString":"literal_string \"Exceed maximum amount\""},"value":"Exceed maximum amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b","typeString":"literal_string \"Exceed maximum amount\""}],"id":5746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1372:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:62:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5752,"nodeType":"ExpressionStatement","src":"1372:62:31"},{"expression":{"arguments":[{"id":5756,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"1460:3:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5757,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"1465:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5753,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"1445:5:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:8:31","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1416,"src":"1445:14:31","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5759,"nodeType":"ExpressionStatement","src":"1445:28:31"}]},"functionSelector":"f3fef3a3","id":5761,"implemented":true,"kind":"function","modifiers":[{"id":5739,"kind":"modifierInvocation","modifierName":{"id":5738,"name":"onlyWithdrawer","nameLocations":["1282:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":5695,"src":"1282:14:31"},"nodeType":"ModifierInvocation","src":"1282:14:31"}],"name":"withdraw","nameLocation":"1234:8:31","nodeType":"FunctionDefinition","parameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"_to","nameLocation":"1251:3:31","nodeType":"VariableDeclaration","scope":5761,"src":"1243:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5733,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5736,"mutability":"mutable","name":"_amount","nameLocation":"1264:7:31","nodeType":"VariableDeclaration","scope":5761,"src":"1256:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1242:30:31"},"returnParameters":{"id":5740,"nodeType":"ParameterList","parameters":[],"src":"1297:0:31"},"scope":5792,"src":"1225:256:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5790,"nodeType":"Block","src":"1532:215:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5769,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1581:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1585:6:31","memberName":"sender","nodeType":"MemberAccess","src":"1581:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5767,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"1565:5:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1571:9:31","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"1565:15:31","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1565:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5772,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"1596:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1565:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206163636f756e742062616c616e6365","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1618:30:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b","typeString":"literal_string \"Insufficient account balance\""},"value":"Insufficient account balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b","typeString":"literal_string \"Insufficient account balance\""}],"id":5766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1543:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:116:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5776,"nodeType":"ExpressionStatement","src":"1543:116:31"},{"expression":{"arguments":[{"id":5780,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"1697:5:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"}},{"expression":{"id":5781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1704:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1708:6:31","memberName":"sender","nodeType":"MemberAccess","src":"1704:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5785,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1724:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$5792","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$5792","typeString":"contract Vault"}],"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5783,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:31","typeDescriptions":{}}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5787,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"1731:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1449","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5777,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"1670:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2035_$","typeString":"type(library SafeERC20)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1680:16:31","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1822,"src":"1670:26:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1449_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1670:69:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5789,"nodeType":"ExpressionStatement","src":"1670:69:31"}]},"functionSelector":"b6b55f25","id":5791,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1498:7:31","nodeType":"FunctionDefinition","parameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"_amount","nameLocation":"1514:7:31","nodeType":"VariableDeclaration","scope":5791,"src":"1506:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1505:17:31"},"returnParameters":{"id":5765,"nodeType":"ParameterList","parameters":[],"src":"1532:0:31"},"scope":5792,"src":"1489:258:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5793,"src":"290:1460:31","usedErrors":[305,308,392,397,1762,2043,2048,2051],"usedEvents":[317,326,335,403]}],"src":"0:1752:31"},"id":31}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb1c906fcd870fc8dfedb63bfb1bc58b4d2a7469bc13cc44d996fda430693850a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd98c7779af61b220166cf952a05f6aca82ec859744d407d29043f8100adfb9c\",\"dweb:/ipfs/Qmd6ftRk6cJgdooybM6F1X26R4SSUeNksv6Gni2NwEnKDw\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c852090f5890660000c25e74d3d5b4369345bc7c21484a89c002b367d9d86af64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C DUP6 KECCAK256 SWAP1 CREATE2 DUP10 MOD PUSH1 0x0 0xC 0x25 0xE7 0x4D RETURNDATASIZE JUMPDEST NUMBER PUSH10 0x345BC7C21484A89C002B CALLDATASIZE PUSH30 0x9D86AF64736F6C6343000815003300000000000000000000000000000000 ","sourceMap":"751:5018:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c852090f5890660000c25e74d3d5b4369345bc7c21484a89c002b367d9d86af64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C DUP6 KECCAK256 SWAP1 CREATE2 DUP10 MOD PUSH1 0x0 0xC 0x25 0xE7 0x4D RETURNDATASIZE JUMPDEST NUMBER PUSH10 0x345BC7C21484A89C002B CALLDATASIZE PUSH30 0x9D86AF64736F6C6343000815003300000000000000000000000000000000 ","sourceMap":"751:5018:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220389b23939af997d43c73e2897b3999539c34c43c9401a75ed8279da9cc660c0964736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SWAP12 0x23 SWAP4 SWAP11 0xF9 SWAP8 0xD4 EXTCODECOPY PUSH20 0xE2897B3999539C34C43C9401A75ED8279DA9CC66 0xC MULMOD PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"195:6066:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220389b23939af997d43c73e2897b3999539c34c43c9401a75ed8279da9cc660c0964736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SWAP12 0x23 SWAP4 SWAP11 0xF9 SWAP8 0xD4 EXTCODECOPY PUSH20 0xE2897B3999539C34C43C9401A75ED8279DA9CC66 0xC MULMOD PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"195:6066:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fde96d3a5d4b60e472ede6c2ee0ab65a0097c5f3a2e1113995eb5275e781e90764736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xE9 PUSH14 0x3A5D4B60E472EDE6C2EE0AB65A00 SWAP8 0xC5 RETURN LOG2 0xE1 GT CODECOPY SWAP6 0xEB MSTORE PUSH22 0xE781E90764736F6C6343000815003300000000000000 ","sourceMap":"1255:3053:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fde96d3a5d4b60e472ede6c2ee0ab65a0097c5f3a2e1113995eb5275e781e90764736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xE9 PUSH14 0x3A5D4B60E472EDE6C2EE0AB65A00 SWAP8 0xC5 RETURN LOG2 0xE1 GT CODECOPY SWAP6 0xEB MSTORE PUSH22 0xE781E90764736F6C6343000815003300000000000000 ","sourceMap":"1255:3053:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040216e3853c23746ae9d1c9cb236ce6c90545673d03d3acb5fbd5dce95862c6564736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x21 PUSH15 0x3853C23746AE9D1C9CB236CE6C9054 JUMP PUSH20 0xD03D3ACB5FBD5DCE95862C6564736F6C63430008 ISZERO STOP CALLER ","sourceMap":"1245:2685:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040216e3853c23746ae9d1c9cb236ce6c90545673d03d3acb5fbd5dce95862c6564736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x21 PUSH15 0x3853C23746AE9D1C9CB236CE6C9054 JUMP PUSH20 0xD03D3ACB5FBD5DCE95862C6564736F6C63430008 ISZERO STOP CALLER ","sourceMap":"1245:2685:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1ee51b816ac7769950201ff832f9e31eaf67a58cf1560a11fcb269d411ea16c64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xEE MLOAD 0xB8 AND 0xAC PUSH24 0x69950201FF832F9E31EAF67A58CF1560A11FCB269D411EA1 PUSH13 0x64736F6C634300081500330000 ","sourceMap":"251:2847:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1ee51b816ac7769950201ff832f9e31eaf67a58cf1560a11fcb269d411ea16c64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xEE MLOAD 0xB8 AND 0xAC PUSH24 0x69950201FF832F9E31EAF67A58CF1560A11FCB269D411EA1 PUSH13 0x64736F6C634300081500330000 ","sourceMap":"251:2847:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1a38c14a73dbfed1ad316f51d53c843f5a0c145c19709416ed4f9dba99257ff64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 LOG3 DUP13 EQ 0xA7 RETURNDATASIZE 0xBF 0xED BYTE 0xD3 AND CREATE2 SAR MSTORE8 0xC8 NUMBER CREATE2 LOG0 0xC1 GASLIMIT 0xC1 SWAP8 MULMOD COINBASE PUSH15 0xD4F9DBA99257FF64736F6C63430008 ISZERO STOP CALLER ","sourceMap":"344:7386:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1a38c14a73dbfed1ad316f51d53c843f5a0c145c19709416ed4f9dba99257ff64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 LOG3 DUP13 EQ 0xA7 RETURNDATASIZE 0xBF 0xED BYTE 0xD3 AND CREATE2 SAR MSTORE8 0xC8 NUMBER CREATE2 LOG0 0xC1 GASLIMIT 0xC1 SWAP8 MULMOD COINBASE PUSH15 0xD4F9DBA99257FF64736F6C63430008 ISZERO STOP CALLER ","sourceMap":"344:7386:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f8d52b67239c2aa285a966328b0df9eaae1f979875c65962f43ba8c7bff0f5f64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F DUP14 MSTORE 0xB6 PUSH19 0x39C2AA285A966328B0DF9EAAE1F979875C6596 0x2F NUMBER 0xBA DUP13 PUSH28 0xFF0F5F64736F6C634300081500330000000000000000000000000000 ","sourceMap":"521:3235:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f8d52b67239c2aa285a966328b0df9eaae1f979875c65962f43ba8c7bff0f5f64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F DUP14 MSTORE 0xB6 PUSH19 0x39C2AA285A966328B0DF9EAAE1F979875C6596 0x2F NUMBER 0xBA DUP13 PUSH28 0xFF0F5F64736F6C634300081500330000000000000000000000000000 ","sourceMap":"521:3235:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee77ab7d7535c7da699b2c5f983b9bf8d7b47dd6185236474d7899ff471f6cbb64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH24 0xAB7D7535C7DA699B2C5F983B9BF8D7B47DD6185236474D78 SWAP10 SELFDESTRUCT SELFBALANCE 0x1F PUSH13 0xBB64736F6C6343000815003300 ","sourceMap":"203:14914:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee77ab7d7535c7da699b2c5f983b9bf8d7b47dd6185236474d7899ff471f6cbb64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH24 0xAB7D7535C7DA699B2C5F983B9BF8D7B47DD6185236474D78 SWAP10 SELFDESTRUCT SELFBALANCE 0x1F PUSH13 0xBB64736F6C6343000815003300 ","sourceMap":"203:14914:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203bea322c39933d5bec78614f0527368722519b6d606e7da3f47afeab194a47a464736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xEA ORIGIN 0x2C CODECOPY SWAP4 RETURNDATASIZE JUMPDEST 0xEC PUSH25 0x614F0527368722519B6D606E7DA3F47AFEAB194A47A464736F PUSH13 0x63430008150033000000000000 ","sourceMap":"216:1047:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203bea322c39933d5bec78614f0527368722519b6d606e7da3f47afeab194a47a464736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xEA ORIGIN 0x2C CODECOPY SWAP4 RETURNDATASIZE JUMPDEST 0xEC PUSH25 0x614F0527368722519B6D606E7DA3F47AFEAB194A47A464736F PUSH13 0x63430008150033000000000000 ","sourceMap":"216:1047:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071616b0394ab6d6dc93e4dc157ebc7d224f135a394fabdf3c28ee6364faf58bf64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x616B0394AB6D6DC93E4DC157EBC7D224F135 LOG3 SWAP5 STATICCALL 0xBD RETURN 0xC2 DUP15 0xE6 CALLDATASIZE 0x4F 0xAF PC 0xBF PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"1330:11640:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071616b0394ab6d6dc93e4dc157ebc7d224f135a394fabdf3c28ee6364faf58bf64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x616B0394AB6D6DC93E4DC157EBC7D224F135 LOG3 SWAP5 STATICCALL 0xBD RETURN 0xC2 DUP15 0xE6 CALLDATASIZE 0x4F 0xAF PC 0xBF PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"1330:11640:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"contracts/BSSToken.sol":{"BSSToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1578":{"entryPoint":null,"id":1578,"parameterSlots":1,"returnSlots":0},"@_2420":{"entryPoint":null,"id":2420,"parameterSlots":0,"returnSlots":0},"@_3530":{"entryPoint":null,"id":3530,"parameterSlots":2,"returnSlots":0},"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_5585":{"entryPoint":null,"id":5585,"parameterSlots":0,"returnSlots":0},"@_908":{"entryPoint":null,"id":908,"parameterSlots":2,"returnSlots":0},"@_buildDomainSeparator_3577":{"entryPoint":970,"id":3577,"parameterSlots":0,"returnSlots":1},"@_mint_1211":{"entryPoint":1072,"id":1211,"parameterSlots":2,"returnSlots":0},"@_requireNotPaused_2457":{"entryPoint":1396,"id":2457,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":684,"id":525,"parameterSlots":1,"returnSlots":0},"@_update_1178":{"entryPoint":1470,"id":1178,"parameterSlots":3,"returnSlots":0},"@_update_1528":{"entryPoint":1356,"id":1528,"parameterSlots":3,"returnSlots":0},"@_update_5639":{"entryPoint":1332,"id":5639,"parameterSlots":3,"returnSlots":0},"@decimals_935":{"entryPoint":1063,"id":935,"parameterSlots":0,"returnSlots":1},"@getStringSlot_2807":{"entryPoint":1322,"id":2807,"parameterSlots":1,"returnSlots":1},"@paused_2445":{"entryPoint":2030,"id":2445,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_2661":{"entryPoint":882,"id":2661,"parameterSlots":2,"returnSlots":1},"@toShortString_2563":{"entryPoint":1213,"id":2563,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2970,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3582,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3599,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2987,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4109,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3616,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4170,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3899,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2211,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3888,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2053,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3709,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4050,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":3076,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":3416,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":3167,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3497,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2532,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2950,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3572,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2918,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2347,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3403,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2493,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3938,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2367,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2687,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3726,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2232,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2158,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2657,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2357,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2625,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3016,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2111,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2064,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2407,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":3915,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":3770,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2248,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":3063,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2612,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2465,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2261,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2417,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2460,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:12936:32","nodeType":"YulBlock","src":"0:12936:32","statements":[{"body":{"nativeSrc":"66:40:32","nodeType":"YulBlock","src":"66:40:32","statements":[{"nativeSrc":"77:22:32","nodeType":"YulAssignment","src":"77:22:32","value":{"arguments":[{"name":"value","nativeSrc":"93:5:32","nodeType":"YulIdentifier","src":"93:5:32"}],"functionName":{"name":"mload","nativeSrc":"87:5:32","nodeType":"YulIdentifier","src":"87:5:32"},"nativeSrc":"87:12:32","nodeType":"YulFunctionCall","src":"87:12:32"},"variableNames":[{"name":"length","nativeSrc":"77:6:32","nodeType":"YulIdentifier","src":"77:6:32"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:32","nodeType":"YulTypedName","src":"49:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:32","nodeType":"YulTypedName","src":"59:6:32","type":""}],"src":"7:99:32"},{"body":{"nativeSrc":"140:152:32","nodeType":"YulBlock","src":"140:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:32","nodeType":"YulLiteral","src":"157:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:32","nodeType":"YulLiteral","src":"160:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:32","nodeType":"YulIdentifier","src":"150:6:32"},"nativeSrc":"150:88:32","nodeType":"YulFunctionCall","src":"150:88:32"},"nativeSrc":"150:88:32","nodeType":"YulExpressionStatement","src":"150:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:32","nodeType":"YulLiteral","src":"254:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:32","nodeType":"YulLiteral","src":"257:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:32","nodeType":"YulIdentifier","src":"247:6:32"},"nativeSrc":"247:15:32","nodeType":"YulFunctionCall","src":"247:15:32"},"nativeSrc":"247:15:32","nodeType":"YulExpressionStatement","src":"247:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:32","nodeType":"YulLiteral","src":"278:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:32","nodeType":"YulLiteral","src":"281:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:32","nodeType":"YulIdentifier","src":"271:6:32"},"nativeSrc":"271:15:32","nodeType":"YulFunctionCall","src":"271:15:32"},"nativeSrc":"271:15:32","nodeType":"YulExpressionStatement","src":"271:15:32"}]},"name":"panic_error_0x41","nativeSrc":"112:180:32","nodeType":"YulFunctionDefinition","src":"112:180:32"},{"body":{"nativeSrc":"326:152:32","nodeType":"YulBlock","src":"326:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:32","nodeType":"YulLiteral","src":"343:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:32","nodeType":"YulLiteral","src":"346:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:32","nodeType":"YulIdentifier","src":"336:6:32"},"nativeSrc":"336:88:32","nodeType":"YulFunctionCall","src":"336:88:32"},"nativeSrc":"336:88:32","nodeType":"YulExpressionStatement","src":"336:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:32","nodeType":"YulLiteral","src":"440:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:32","nodeType":"YulLiteral","src":"443:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:32","nodeType":"YulIdentifier","src":"433:6:32"},"nativeSrc":"433:15:32","nodeType":"YulFunctionCall","src":"433:15:32"},"nativeSrc":"433:15:32","nodeType":"YulExpressionStatement","src":"433:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:32","nodeType":"YulLiteral","src":"464:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:32","nodeType":"YulLiteral","src":"467:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:32","nodeType":"YulIdentifier","src":"457:6:32"},"nativeSrc":"457:15:32","nodeType":"YulFunctionCall","src":"457:15:32"},"nativeSrc":"457:15:32","nodeType":"YulExpressionStatement","src":"457:15:32"}]},"name":"panic_error_0x22","nativeSrc":"298:180:32","nodeType":"YulFunctionDefinition","src":"298:180:32"},{"body":{"nativeSrc":"535:269:32","nodeType":"YulBlock","src":"535:269:32","statements":[{"nativeSrc":"545:22:32","nodeType":"YulAssignment","src":"545:22:32","value":{"arguments":[{"name":"data","nativeSrc":"559:4:32","nodeType":"YulIdentifier","src":"559:4:32"},{"kind":"number","nativeSrc":"565:1:32","nodeType":"YulLiteral","src":"565:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:32","nodeType":"YulIdentifier","src":"555:3:32"},"nativeSrc":"555:12:32","nodeType":"YulFunctionCall","src":"555:12:32"},"variableNames":[{"name":"length","nativeSrc":"545:6:32","nodeType":"YulIdentifier","src":"545:6:32"}]},{"nativeSrc":"576:38:32","nodeType":"YulVariableDeclaration","src":"576:38:32","value":{"arguments":[{"name":"data","nativeSrc":"606:4:32","nodeType":"YulIdentifier","src":"606:4:32"},{"kind":"number","nativeSrc":"612:1:32","nodeType":"YulLiteral","src":"612:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:32","nodeType":"YulIdentifier","src":"602:3:32"},"nativeSrc":"602:12:32","nodeType":"YulFunctionCall","src":"602:12:32"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:32","nodeType":"YulTypedName","src":"580:18:32","type":""}]},{"body":{"nativeSrc":"653:51:32","nodeType":"YulBlock","src":"653:51:32","statements":[{"nativeSrc":"667:27:32","nodeType":"YulAssignment","src":"667:27:32","value":{"arguments":[{"name":"length","nativeSrc":"681:6:32","nodeType":"YulIdentifier","src":"681:6:32"},{"kind":"number","nativeSrc":"689:4:32","nodeType":"YulLiteral","src":"689:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:32","nodeType":"YulIdentifier","src":"677:3:32"},"nativeSrc":"677:17:32","nodeType":"YulFunctionCall","src":"677:17:32"},"variableNames":[{"name":"length","nativeSrc":"667:6:32","nodeType":"YulIdentifier","src":"667:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:32","nodeType":"YulIdentifier","src":"633:18:32"}],"functionName":{"name":"iszero","nativeSrc":"626:6:32","nodeType":"YulIdentifier","src":"626:6:32"},"nativeSrc":"626:26:32","nodeType":"YulFunctionCall","src":"626:26:32"},"nativeSrc":"623:81:32","nodeType":"YulIf","src":"623:81:32"},{"body":{"nativeSrc":"756:42:32","nodeType":"YulBlock","src":"756:42:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:32","nodeType":"YulIdentifier","src":"770:16:32"},"nativeSrc":"770:18:32","nodeType":"YulFunctionCall","src":"770:18:32"},"nativeSrc":"770:18:32","nodeType":"YulExpressionStatement","src":"770:18:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:32","nodeType":"YulIdentifier","src":"720:18:32"},{"arguments":[{"name":"length","nativeSrc":"743:6:32","nodeType":"YulIdentifier","src":"743:6:32"},{"kind":"number","nativeSrc":"751:2:32","nodeType":"YulLiteral","src":"751:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:32","nodeType":"YulIdentifier","src":"740:2:32"},"nativeSrc":"740:14:32","nodeType":"YulFunctionCall","src":"740:14:32"}],"functionName":{"name":"eq","nativeSrc":"717:2:32","nodeType":"YulIdentifier","src":"717:2:32"},"nativeSrc":"717:38:32","nodeType":"YulFunctionCall","src":"717:38:32"},"nativeSrc":"714:84:32","nodeType":"YulIf","src":"714:84:32"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:32","nodeType":"YulTypedName","src":"519:4:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:32","nodeType":"YulTypedName","src":"528:6:32","type":""}],"src":"484:320:32"},{"body":{"nativeSrc":"864:87:32","nodeType":"YulBlock","src":"864:87:32","statements":[{"nativeSrc":"874:11:32","nodeType":"YulAssignment","src":"874:11:32","value":{"name":"ptr","nativeSrc":"882:3:32","nodeType":"YulIdentifier","src":"882:3:32"},"variableNames":[{"name":"data","nativeSrc":"874:4:32","nodeType":"YulIdentifier","src":"874:4:32"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:32","nodeType":"YulLiteral","src":"902:1:32","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:32","nodeType":"YulIdentifier","src":"905:3:32"}],"functionName":{"name":"mstore","nativeSrc":"895:6:32","nodeType":"YulIdentifier","src":"895:6:32"},"nativeSrc":"895:14:32","nodeType":"YulFunctionCall","src":"895:14:32"},"nativeSrc":"895:14:32","nodeType":"YulExpressionStatement","src":"895:14:32"},{"nativeSrc":"918:26:32","nodeType":"YulAssignment","src":"918:26:32","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:32","nodeType":"YulLiteral","src":"936:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:32","nodeType":"YulLiteral","src":"939:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:32","nodeType":"YulIdentifier","src":"926:9:32"},"nativeSrc":"926:18:32","nodeType":"YulFunctionCall","src":"926:18:32"},"variableNames":[{"name":"data","nativeSrc":"918:4:32","nodeType":"YulIdentifier","src":"918:4:32"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:32","nodeType":"YulTypedName","src":"851:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:32","nodeType":"YulTypedName","src":"859:4:32","type":""}],"src":"810:141:32"},{"body":{"nativeSrc":"1001:49:32","nodeType":"YulBlock","src":"1001:49:32","statements":[{"nativeSrc":"1011:33:32","nodeType":"YulAssignment","src":"1011:33:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:32","nodeType":"YulIdentifier","src":"1029:5:32"},{"kind":"number","nativeSrc":"1036:2:32","nodeType":"YulLiteral","src":"1036:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:32","nodeType":"YulIdentifier","src":"1025:3:32"},"nativeSrc":"1025:14:32","nodeType":"YulFunctionCall","src":"1025:14:32"},{"kind":"number","nativeSrc":"1041:2:32","nodeType":"YulLiteral","src":"1041:2:32","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:32","nodeType":"YulIdentifier","src":"1021:3:32"},"nativeSrc":"1021:23:32","nodeType":"YulFunctionCall","src":"1021:23:32"},"variableNames":[{"name":"result","nativeSrc":"1011:6:32","nodeType":"YulIdentifier","src":"1011:6:32"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:32","nodeType":"YulTypedName","src":"984:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:32","nodeType":"YulTypedName","src":"994:6:32","type":""}],"src":"957:93:32"},{"body":{"nativeSrc":"1109:54:32","nodeType":"YulBlock","src":"1109:54:32","statements":[{"nativeSrc":"1119:37:32","nodeType":"YulAssignment","src":"1119:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:32","nodeType":"YulIdentifier","src":"1144:4:32"},{"name":"value","nativeSrc":"1150:5:32","nodeType":"YulIdentifier","src":"1150:5:32"}],"functionName":{"name":"shl","nativeSrc":"1140:3:32","nodeType":"YulIdentifier","src":"1140:3:32"},"nativeSrc":"1140:16:32","nodeType":"YulFunctionCall","src":"1140:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:32","nodeType":"YulIdentifier","src":"1119:8:32"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:32","nodeType":"YulTypedName","src":"1084:4:32","type":""},{"name":"value","nativeSrc":"1090:5:32","nodeType":"YulTypedName","src":"1090:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:32","nodeType":"YulTypedName","src":"1100:8:32","type":""}],"src":"1056:107:32"},{"body":{"nativeSrc":"1245:317:32","nodeType":"YulBlock","src":"1245:317:32","statements":[{"nativeSrc":"1255:35:32","nodeType":"YulVariableDeclaration","src":"1255:35:32","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:32","nodeType":"YulIdentifier","src":"1276:10:32"},{"kind":"number","nativeSrc":"1288:1:32","nodeType":"YulLiteral","src":"1288:1:32","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:32","nodeType":"YulIdentifier","src":"1272:3:32"},"nativeSrc":"1272:18:32","nodeType":"YulFunctionCall","src":"1272:18:32"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:32","nodeType":"YulTypedName","src":"1259:9:32","type":""}]},{"nativeSrc":"1299:109:32","nodeType":"YulVariableDeclaration","src":"1299:109:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:32","nodeType":"YulIdentifier","src":"1330:9:32"},{"kind":"number","nativeSrc":"1341:66:32","nodeType":"YulLiteral","src":"1341:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:32","nodeType":"YulIdentifier","src":"1311:18:32"},"nativeSrc":"1311:97:32","nodeType":"YulFunctionCall","src":"1311:97:32"},"variables":[{"name":"mask","nativeSrc":"1303:4:32","nodeType":"YulTypedName","src":"1303:4:32","type":""}]},{"nativeSrc":"1417:51:32","nodeType":"YulAssignment","src":"1417:51:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:32","nodeType":"YulIdentifier","src":"1448:9:32"},{"name":"toInsert","nativeSrc":"1459:8:32","nodeType":"YulIdentifier","src":"1459:8:32"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:32","nodeType":"YulIdentifier","src":"1429:18:32"},"nativeSrc":"1429:39:32","nodeType":"YulFunctionCall","src":"1429:39:32"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:32","nodeType":"YulIdentifier","src":"1417:8:32"}]},{"nativeSrc":"1477:30:32","nodeType":"YulAssignment","src":"1477:30:32","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:32","nodeType":"YulIdentifier","src":"1490:5:32"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:32","nodeType":"YulIdentifier","src":"1501:4:32"}],"functionName":{"name":"not","nativeSrc":"1497:3:32","nodeType":"YulIdentifier","src":"1497:3:32"},"nativeSrc":"1497:9:32","nodeType":"YulFunctionCall","src":"1497:9:32"}],"functionName":{"name":"and","nativeSrc":"1486:3:32","nodeType":"YulIdentifier","src":"1486:3:32"},"nativeSrc":"1486:21:32","nodeType":"YulFunctionCall","src":"1486:21:32"},"variableNames":[{"name":"value","nativeSrc":"1477:5:32","nodeType":"YulIdentifier","src":"1477:5:32"}]},{"nativeSrc":"1516:40:32","nodeType":"YulAssignment","src":"1516:40:32","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:32","nodeType":"YulIdentifier","src":"1529:5:32"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:32","nodeType":"YulIdentifier","src":"1540:8:32"},{"name":"mask","nativeSrc":"1550:4:32","nodeType":"YulIdentifier","src":"1550:4:32"}],"functionName":{"name":"and","nativeSrc":"1536:3:32","nodeType":"YulIdentifier","src":"1536:3:32"},"nativeSrc":"1536:19:32","nodeType":"YulFunctionCall","src":"1536:19:32"}],"functionName":{"name":"or","nativeSrc":"1526:2:32","nodeType":"YulIdentifier","src":"1526:2:32"},"nativeSrc":"1526:30:32","nodeType":"YulFunctionCall","src":"1526:30:32"},"variableNames":[{"name":"result","nativeSrc":"1516:6:32","nodeType":"YulIdentifier","src":"1516:6:32"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:32","nodeType":"YulTypedName","src":"1206:5:32","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:32","nodeType":"YulTypedName","src":"1213:10:32","type":""},{"name":"toInsert","nativeSrc":"1225:8:32","nodeType":"YulTypedName","src":"1225:8:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:32","nodeType":"YulTypedName","src":"1238:6:32","type":""}],"src":"1169:393:32"},{"body":{"nativeSrc":"1613:32:32","nodeType":"YulBlock","src":"1613:32:32","statements":[{"nativeSrc":"1623:16:32","nodeType":"YulAssignment","src":"1623:16:32","value":{"name":"value","nativeSrc":"1634:5:32","nodeType":"YulIdentifier","src":"1634:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:32","nodeType":"YulIdentifier","src":"1623:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:32","nodeType":"YulTypedName","src":"1595:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:32","nodeType":"YulTypedName","src":"1605:7:32","type":""}],"src":"1568:77:32"},{"body":{"nativeSrc":"1683:28:32","nodeType":"YulBlock","src":"1683:28:32","statements":[{"nativeSrc":"1693:12:32","nodeType":"YulAssignment","src":"1693:12:32","value":{"name":"value","nativeSrc":"1700:5:32","nodeType":"YulIdentifier","src":"1700:5:32"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:32","nodeType":"YulIdentifier","src":"1693:3:32"}]}]},"name":"identity","nativeSrc":"1651:60:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:32","nodeType":"YulTypedName","src":"1669:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:32","nodeType":"YulTypedName","src":"1679:3:32","type":""}],"src":"1651:60:32"},{"body":{"nativeSrc":"1777:82:32","nodeType":"YulBlock","src":"1777:82:32","statements":[{"nativeSrc":"1787:66:32","nodeType":"YulAssignment","src":"1787:66:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:32","nodeType":"YulIdentifier","src":"1845:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:32","nodeType":"YulIdentifier","src":"1827:17:32"},"nativeSrc":"1827:24:32","nodeType":"YulFunctionCall","src":"1827:24:32"}],"functionName":{"name":"identity","nativeSrc":"1818:8:32","nodeType":"YulIdentifier","src":"1818:8:32"},"nativeSrc":"1818:34:32","nodeType":"YulFunctionCall","src":"1818:34:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:32","nodeType":"YulIdentifier","src":"1800:17:32"},"nativeSrc":"1800:53:32","nodeType":"YulFunctionCall","src":"1800:53:32"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:32","nodeType":"YulIdentifier","src":"1787:9:32"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:32","nodeType":"YulTypedName","src":"1757:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:32","nodeType":"YulTypedName","src":"1767:9:32","type":""}],"src":"1717:142:32"},{"body":{"nativeSrc":"1912:28:32","nodeType":"YulBlock","src":"1912:28:32","statements":[{"nativeSrc":"1922:12:32","nodeType":"YulAssignment","src":"1922:12:32","value":{"name":"value","nativeSrc":"1929:5:32","nodeType":"YulIdentifier","src":"1929:5:32"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:32","nodeType":"YulIdentifier","src":"1922:3:32"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:32","nodeType":"YulTypedName","src":"1898:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:32","nodeType":"YulTypedName","src":"1908:3:32","type":""}],"src":"1865:75:32"},{"body":{"nativeSrc":"2022:193:32","nodeType":"YulBlock","src":"2022:193:32","statements":[{"nativeSrc":"2032:63:32","nodeType":"YulVariableDeclaration","src":"2032:63:32","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:32","nodeType":"YulIdentifier","src":"2087:7:32"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:32","nodeType":"YulIdentifier","src":"2056:30:32"},"nativeSrc":"2056:39:32","nodeType":"YulFunctionCall","src":"2056:39:32"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:32","nodeType":"YulTypedName","src":"2036:16:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:32","nodeType":"YulIdentifier","src":"2111:4:32"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:32","nodeType":"YulIdentifier","src":"2151:4:32"}],"functionName":{"name":"sload","nativeSrc":"2145:5:32","nodeType":"YulIdentifier","src":"2145:5:32"},"nativeSrc":"2145:11:32","nodeType":"YulFunctionCall","src":"2145:11:32"},{"name":"offset","nativeSrc":"2158:6:32","nodeType":"YulIdentifier","src":"2158:6:32"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:32","nodeType":"YulIdentifier","src":"2190:16:32"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:32","nodeType":"YulIdentifier","src":"2166:23:32"},"nativeSrc":"2166:41:32","nodeType":"YulFunctionCall","src":"2166:41:32"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:32","nodeType":"YulIdentifier","src":"2117:27:32"},"nativeSrc":"2117:91:32","nodeType":"YulFunctionCall","src":"2117:91:32"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:32","nodeType":"YulIdentifier","src":"2104:6:32"},"nativeSrc":"2104:105:32","nodeType":"YulFunctionCall","src":"2104:105:32"},"nativeSrc":"2104:105:32","nodeType":"YulExpressionStatement","src":"2104:105:32"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:32","nodeType":"YulTypedName","src":"1999:4:32","type":""},{"name":"offset","nativeSrc":"2005:6:32","nodeType":"YulTypedName","src":"2005:6:32","type":""},{"name":"value_0","nativeSrc":"2013:7:32","nodeType":"YulTypedName","src":"2013:7:32","type":""}],"src":"1946:269:32"},{"body":{"nativeSrc":"2270:24:32","nodeType":"YulBlock","src":"2270:24:32","statements":[{"nativeSrc":"2280:8:32","nodeType":"YulAssignment","src":"2280:8:32","value":{"kind":"number","nativeSrc":"2287:1:32","nodeType":"YulLiteral","src":"2287:1:32","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:32","nodeType":"YulIdentifier","src":"2280:3:32"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:32","nodeType":"YulTypedName","src":"2266:3:32","type":""}],"src":"2221:73:32"},{"body":{"nativeSrc":"2353:136:32","nodeType":"YulBlock","src":"2353:136:32","statements":[{"nativeSrc":"2363:46:32","nodeType":"YulVariableDeclaration","src":"2363:46:32","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:32","nodeType":"YulIdentifier","src":"2377:30:32"},"nativeSrc":"2377:32:32","nodeType":"YulFunctionCall","src":"2377:32:32"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:32","nodeType":"YulTypedName","src":"2367:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:32","nodeType":"YulIdentifier","src":"2462:4:32"},{"name":"offset","nativeSrc":"2468:6:32","nodeType":"YulIdentifier","src":"2468:6:32"},{"name":"zero_0","nativeSrc":"2476:6:32","nodeType":"YulIdentifier","src":"2476:6:32"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:32","nodeType":"YulIdentifier","src":"2418:43:32"},"nativeSrc":"2418:65:32","nodeType":"YulFunctionCall","src":"2418:65:32"},"nativeSrc":"2418:65:32","nodeType":"YulExpressionStatement","src":"2418:65:32"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:32","nodeType":"YulTypedName","src":"2339:4:32","type":""},{"name":"offset","nativeSrc":"2345:6:32","nodeType":"YulTypedName","src":"2345:6:32","type":""}],"src":"2300:189:32"},{"body":{"nativeSrc":"2545:136:32","nodeType":"YulBlock","src":"2545:136:32","statements":[{"body":{"nativeSrc":"2612:63:32","nodeType":"YulBlock","src":"2612:63:32","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:32","nodeType":"YulIdentifier","src":"2656:5:32"},{"kind":"number","nativeSrc":"2663:1:32","nodeType":"YulLiteral","src":"2663:1:32","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:32","nodeType":"YulIdentifier","src":"2626:29:32"},"nativeSrc":"2626:39:32","nodeType":"YulFunctionCall","src":"2626:39:32"},"nativeSrc":"2626:39:32","nodeType":"YulExpressionStatement","src":"2626:39:32"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:32","nodeType":"YulIdentifier","src":"2565:5:32"},{"name":"end","nativeSrc":"2572:3:32","nodeType":"YulIdentifier","src":"2572:3:32"}],"functionName":{"name":"lt","nativeSrc":"2562:2:32","nodeType":"YulIdentifier","src":"2562:2:32"},"nativeSrc":"2562:14:32","nodeType":"YulFunctionCall","src":"2562:14:32"},"nativeSrc":"2555:120:32","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:32","nodeType":"YulBlock","src":"2577:26:32","statements":[{"nativeSrc":"2579:22:32","nodeType":"YulAssignment","src":"2579:22:32","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:32","nodeType":"YulIdentifier","src":"2592:5:32"},{"kind":"number","nativeSrc":"2599:1:32","nodeType":"YulLiteral","src":"2599:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:32","nodeType":"YulIdentifier","src":"2588:3:32"},"nativeSrc":"2588:13:32","nodeType":"YulFunctionCall","src":"2588:13:32"},"variableNames":[{"name":"start","nativeSrc":"2579:5:32","nodeType":"YulIdentifier","src":"2579:5:32"}]}]},"pre":{"nativeSrc":"2559:2:32","nodeType":"YulBlock","src":"2559:2:32","statements":[]},"src":"2555:120:32"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:32","nodeType":"YulTypedName","src":"2533:5:32","type":""},{"name":"end","nativeSrc":"2540:3:32","nodeType":"YulTypedName","src":"2540:3:32","type":""}],"src":"2495:186:32"},{"body":{"nativeSrc":"2766:464:32","nodeType":"YulBlock","src":"2766:464:32","statements":[{"body":{"nativeSrc":"2792:431:32","nodeType":"YulBlock","src":"2792:431:32","statements":[{"nativeSrc":"2806:54:32","nodeType":"YulVariableDeclaration","src":"2806:54:32","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:32","nodeType":"YulIdentifier","src":"2854:5:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:32","nodeType":"YulIdentifier","src":"2822:31:32"},"nativeSrc":"2822:38:32","nodeType":"YulFunctionCall","src":"2822:38:32"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:32","nodeType":"YulTypedName","src":"2810:8:32","type":""}]},{"nativeSrc":"2873:63:32","nodeType":"YulVariableDeclaration","src":"2873:63:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:32","nodeType":"YulIdentifier","src":"2896:8:32"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:32","nodeType":"YulIdentifier","src":"2924:10:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:32","nodeType":"YulIdentifier","src":"2906:17:32"},"nativeSrc":"2906:29:32","nodeType":"YulFunctionCall","src":"2906:29:32"}],"functionName":{"name":"add","nativeSrc":"2892:3:32","nodeType":"YulIdentifier","src":"2892:3:32"},"nativeSrc":"2892:44:32","nodeType":"YulFunctionCall","src":"2892:44:32"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:32","nodeType":"YulTypedName","src":"2877:11:32","type":""}]},{"body":{"nativeSrc":"3093:27:32","nodeType":"YulBlock","src":"3093:27:32","statements":[{"nativeSrc":"3095:23:32","nodeType":"YulAssignment","src":"3095:23:32","value":{"name":"dataArea","nativeSrc":"3110:8:32","nodeType":"YulIdentifier","src":"3110:8:32"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:32","nodeType":"YulIdentifier","src":"3095:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:32","nodeType":"YulIdentifier","src":"3077:10:32"},{"kind":"number","nativeSrc":"3089:2:32","nodeType":"YulLiteral","src":"3089:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:32","nodeType":"YulIdentifier","src":"3074:2:32"},"nativeSrc":"3074:18:32","nodeType":"YulFunctionCall","src":"3074:18:32"},"nativeSrc":"3071:49:32","nodeType":"YulIf","src":"3071:49:32"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:32","nodeType":"YulIdentifier","src":"3162:11:32"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:32","nodeType":"YulIdentifier","src":"3179:8:32"},{"arguments":[{"name":"len","nativeSrc":"3207:3:32","nodeType":"YulIdentifier","src":"3207:3:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:32","nodeType":"YulIdentifier","src":"3189:17:32"},"nativeSrc":"3189:22:32","nodeType":"YulFunctionCall","src":"3189:22:32"}],"functionName":{"name":"add","nativeSrc":"3175:3:32","nodeType":"YulIdentifier","src":"3175:3:32"},"nativeSrc":"3175:37:32","nodeType":"YulFunctionCall","src":"3175:37:32"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:32","nodeType":"YulIdentifier","src":"3133:28:32"},"nativeSrc":"3133:80:32","nodeType":"YulFunctionCall","src":"3133:80:32"},"nativeSrc":"3133:80:32","nodeType":"YulExpressionStatement","src":"3133:80:32"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:32","nodeType":"YulIdentifier","src":"2783:3:32"},{"kind":"number","nativeSrc":"2788:2:32","nodeType":"YulLiteral","src":"2788:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:32","nodeType":"YulIdentifier","src":"2780:2:32"},"nativeSrc":"2780:11:32","nodeType":"YulFunctionCall","src":"2780:11:32"},"nativeSrc":"2777:446:32","nodeType":"YulIf","src":"2777:446:32"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:32","nodeType":"YulTypedName","src":"2742:5:32","type":""},{"name":"len","nativeSrc":"2749:3:32","nodeType":"YulTypedName","src":"2749:3:32","type":""},{"name":"startIndex","nativeSrc":"2754:10:32","nodeType":"YulTypedName","src":"2754:10:32","type":""}],"src":"2687:543:32"},{"body":{"nativeSrc":"3299:54:32","nodeType":"YulBlock","src":"3299:54:32","statements":[{"nativeSrc":"3309:37:32","nodeType":"YulAssignment","src":"3309:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:32","nodeType":"YulIdentifier","src":"3334:4:32"},{"name":"value","nativeSrc":"3340:5:32","nodeType":"YulIdentifier","src":"3340:5:32"}],"functionName":{"name":"shr","nativeSrc":"3330:3:32","nodeType":"YulIdentifier","src":"3330:3:32"},"nativeSrc":"3330:16:32","nodeType":"YulFunctionCall","src":"3330:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:32","nodeType":"YulIdentifier","src":"3309:8:32"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:32","nodeType":"YulTypedName","src":"3274:4:32","type":""},{"name":"value","nativeSrc":"3280:5:32","nodeType":"YulTypedName","src":"3280:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:32","nodeType":"YulTypedName","src":"3290:8:32","type":""}],"src":"3236:117:32"},{"body":{"nativeSrc":"3410:118:32","nodeType":"YulBlock","src":"3410:118:32","statements":[{"nativeSrc":"3420:68:32","nodeType":"YulVariableDeclaration","src":"3420:68:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:32","nodeType":"YulLiteral","src":"3469:1:32","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:32","nodeType":"YulIdentifier","src":"3472:5:32"}],"functionName":{"name":"mul","nativeSrc":"3465:3:32","nodeType":"YulIdentifier","src":"3465:3:32"},"nativeSrc":"3465:13:32","nodeType":"YulFunctionCall","src":"3465:13:32"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:32","nodeType":"YulLiteral","src":"3484:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:32","nodeType":"YulIdentifier","src":"3480:3:32"},"nativeSrc":"3480:6:32","nodeType":"YulFunctionCall","src":"3480:6:32"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:32","nodeType":"YulIdentifier","src":"3436:28:32"},"nativeSrc":"3436:51:32","nodeType":"YulFunctionCall","src":"3436:51:32"}],"functionName":{"name":"not","nativeSrc":"3432:3:32","nodeType":"YulIdentifier","src":"3432:3:32"},"nativeSrc":"3432:56:32","nodeType":"YulFunctionCall","src":"3432:56:32"},"variables":[{"name":"mask","nativeSrc":"3424:4:32","nodeType":"YulTypedName","src":"3424:4:32","type":""}]},{"nativeSrc":"3497:25:32","nodeType":"YulAssignment","src":"3497:25:32","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:32","nodeType":"YulIdentifier","src":"3511:4:32"},{"name":"mask","nativeSrc":"3517:4:32","nodeType":"YulIdentifier","src":"3517:4:32"}],"functionName":{"name":"and","nativeSrc":"3507:3:32","nodeType":"YulIdentifier","src":"3507:3:32"},"nativeSrc":"3507:15:32","nodeType":"YulFunctionCall","src":"3507:15:32"},"variableNames":[{"name":"result","nativeSrc":"3497:6:32","nodeType":"YulIdentifier","src":"3497:6:32"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:32","nodeType":"YulTypedName","src":"3387:4:32","type":""},{"name":"bytes","nativeSrc":"3393:5:32","nodeType":"YulTypedName","src":"3393:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:32","nodeType":"YulTypedName","src":"3403:6:32","type":""}],"src":"3359:169:32"},{"body":{"nativeSrc":"3614:214:32","nodeType":"YulBlock","src":"3614:214:32","statements":[{"nativeSrc":"3747:37:32","nodeType":"YulAssignment","src":"3747:37:32","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:32","nodeType":"YulIdentifier","src":"3774:4:32"},{"name":"len","nativeSrc":"3780:3:32","nodeType":"YulIdentifier","src":"3780:3:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:32","nodeType":"YulIdentifier","src":"3755:18:32"},"nativeSrc":"3755:29:32","nodeType":"YulFunctionCall","src":"3755:29:32"},"variableNames":[{"name":"data","nativeSrc":"3747:4:32","nodeType":"YulIdentifier","src":"3747:4:32"}]},{"nativeSrc":"3793:29:32","nodeType":"YulAssignment","src":"3793:29:32","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:32","nodeType":"YulIdentifier","src":"3804:4:32"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:32","nodeType":"YulLiteral","src":"3814:1:32","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:32","nodeType":"YulIdentifier","src":"3817:3:32"}],"functionName":{"name":"mul","nativeSrc":"3810:3:32","nodeType":"YulIdentifier","src":"3810:3:32"},"nativeSrc":"3810:11:32","nodeType":"YulFunctionCall","src":"3810:11:32"}],"functionName":{"name":"or","nativeSrc":"3801:2:32","nodeType":"YulIdentifier","src":"3801:2:32"},"nativeSrc":"3801:21:32","nodeType":"YulFunctionCall","src":"3801:21:32"},"variableNames":[{"name":"used","nativeSrc":"3793:4:32","nodeType":"YulIdentifier","src":"3793:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:32","nodeType":"YulTypedName","src":"3595:4:32","type":""},{"name":"len","nativeSrc":"3601:3:32","nodeType":"YulTypedName","src":"3601:3:32","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:32","nodeType":"YulTypedName","src":"3609:4:32","type":""}],"src":"3533:295:32"},{"body":{"nativeSrc":"3925:1303:32","nodeType":"YulBlock","src":"3925:1303:32","statements":[{"nativeSrc":"3936:51:32","nodeType":"YulVariableDeclaration","src":"3936:51:32","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:32","nodeType":"YulIdentifier","src":"3983:3:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:32","nodeType":"YulIdentifier","src":"3950:32:32"},"nativeSrc":"3950:37:32","nodeType":"YulFunctionCall","src":"3950:37:32"},"variables":[{"name":"newLen","nativeSrc":"3940:6:32","nodeType":"YulTypedName","src":"3940:6:32","type":""}]},{"body":{"nativeSrc":"4072:22:32","nodeType":"YulBlock","src":"4072:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:32","nodeType":"YulIdentifier","src":"4074:16:32"},"nativeSrc":"4074:18:32","nodeType":"YulFunctionCall","src":"4074:18:32"},"nativeSrc":"4074:18:32","nodeType":"YulExpressionStatement","src":"4074:18:32"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:32","nodeType":"YulIdentifier","src":"4044:6:32"},{"kind":"number","nativeSrc":"4052:18:32","nodeType":"YulLiteral","src":"4052:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:32","nodeType":"YulIdentifier","src":"4041:2:32"},"nativeSrc":"4041:30:32","nodeType":"YulFunctionCall","src":"4041:30:32"},"nativeSrc":"4038:56:32","nodeType":"YulIf","src":"4038:56:32"},{"nativeSrc":"4104:52:32","nodeType":"YulVariableDeclaration","src":"4104:52:32","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:32","nodeType":"YulIdentifier","src":"4150:4:32"}],"functionName":{"name":"sload","nativeSrc":"4144:5:32","nodeType":"YulIdentifier","src":"4144:5:32"},"nativeSrc":"4144:11:32","nodeType":"YulFunctionCall","src":"4144:11:32"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:32","nodeType":"YulIdentifier","src":"4118:25:32"},"nativeSrc":"4118:38:32","nodeType":"YulFunctionCall","src":"4118:38:32"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:32","nodeType":"YulTypedName","src":"4108:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:32","nodeType":"YulIdentifier","src":"4249:4:32"},{"name":"oldLen","nativeSrc":"4255:6:32","nodeType":"YulIdentifier","src":"4255:6:32"},{"name":"newLen","nativeSrc":"4263:6:32","nodeType":"YulIdentifier","src":"4263:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:32","nodeType":"YulIdentifier","src":"4203:45:32"},"nativeSrc":"4203:67:32","nodeType":"YulFunctionCall","src":"4203:67:32"},"nativeSrc":"4203:67:32","nodeType":"YulExpressionStatement","src":"4203:67:32"},{"nativeSrc":"4280:18:32","nodeType":"YulVariableDeclaration","src":"4280:18:32","value":{"kind":"number","nativeSrc":"4297:1:32","nodeType":"YulLiteral","src":"4297:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:32","nodeType":"YulTypedName","src":"4284:9:32","type":""}]},{"nativeSrc":"4308:17:32","nodeType":"YulAssignment","src":"4308:17:32","value":{"kind":"number","nativeSrc":"4321:4:32","nodeType":"YulLiteral","src":"4321:4:32","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:32","nodeType":"YulIdentifier","src":"4308:9:32"}]},{"cases":[{"body":{"nativeSrc":"4372:611:32","nodeType":"YulBlock","src":"4372:611:32","statements":[{"nativeSrc":"4386:37:32","nodeType":"YulVariableDeclaration","src":"4386:37:32","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:32","nodeType":"YulIdentifier","src":"4405:6:32"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:32","nodeType":"YulLiteral","src":"4417:4:32","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:32","nodeType":"YulIdentifier","src":"4413:3:32"},"nativeSrc":"4413:9:32","nodeType":"YulFunctionCall","src":"4413:9:32"}],"functionName":{"name":"and","nativeSrc":"4401:3:32","nodeType":"YulIdentifier","src":"4401:3:32"},"nativeSrc":"4401:22:32","nodeType":"YulFunctionCall","src":"4401:22:32"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:32","nodeType":"YulTypedName","src":"4390:7:32","type":""}]},{"nativeSrc":"4437:51:32","nodeType":"YulVariableDeclaration","src":"4437:51:32","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:32","nodeType":"YulIdentifier","src":"4483:4:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:32","nodeType":"YulIdentifier","src":"4451:31:32"},"nativeSrc":"4451:37:32","nodeType":"YulFunctionCall","src":"4451:37:32"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:32","nodeType":"YulTypedName","src":"4441:6:32","type":""}]},{"nativeSrc":"4501:10:32","nodeType":"YulVariableDeclaration","src":"4501:10:32","value":{"kind":"number","nativeSrc":"4510:1:32","nodeType":"YulLiteral","src":"4510:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:32","nodeType":"YulTypedName","src":"4505:1:32","type":""}]},{"body":{"nativeSrc":"4569:163:32","nodeType":"YulBlock","src":"4569:163:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:32","nodeType":"YulIdentifier","src":"4594:6:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:32","nodeType":"YulIdentifier","src":"4612:3:32"},{"name":"srcOffset","nativeSrc":"4617:9:32","nodeType":"YulIdentifier","src":"4617:9:32"}],"functionName":{"name":"add","nativeSrc":"4608:3:32","nodeType":"YulIdentifier","src":"4608:3:32"},"nativeSrc":"4608:19:32","nodeType":"YulFunctionCall","src":"4608:19:32"}],"functionName":{"name":"mload","nativeSrc":"4602:5:32","nodeType":"YulIdentifier","src":"4602:5:32"},"nativeSrc":"4602:26:32","nodeType":"YulFunctionCall","src":"4602:26:32"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:32","nodeType":"YulIdentifier","src":"4587:6:32"},"nativeSrc":"4587:42:32","nodeType":"YulFunctionCall","src":"4587:42:32"},"nativeSrc":"4587:42:32","nodeType":"YulExpressionStatement","src":"4587:42:32"},{"nativeSrc":"4646:24:32","nodeType":"YulAssignment","src":"4646:24:32","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:32","nodeType":"YulIdentifier","src":"4660:6:32"},{"kind":"number","nativeSrc":"4668:1:32","nodeType":"YulLiteral","src":"4668:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:32","nodeType":"YulIdentifier","src":"4656:3:32"},"nativeSrc":"4656:14:32","nodeType":"YulFunctionCall","src":"4656:14:32"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:32","nodeType":"YulIdentifier","src":"4646:6:32"}]},{"nativeSrc":"4687:31:32","nodeType":"YulAssignment","src":"4687:31:32","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:32","nodeType":"YulIdentifier","src":"4704:9:32"},{"kind":"number","nativeSrc":"4715:2:32","nodeType":"YulLiteral","src":"4715:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:32","nodeType":"YulIdentifier","src":"4700:3:32"},"nativeSrc":"4700:18:32","nodeType":"YulFunctionCall","src":"4700:18:32"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:32","nodeType":"YulIdentifier","src":"4687:9:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:32","nodeType":"YulIdentifier","src":"4535:1:32"},{"name":"loopEnd","nativeSrc":"4538:7:32","nodeType":"YulIdentifier","src":"4538:7:32"}],"functionName":{"name":"lt","nativeSrc":"4532:2:32","nodeType":"YulIdentifier","src":"4532:2:32"},"nativeSrc":"4532:14:32","nodeType":"YulFunctionCall","src":"4532:14:32"},"nativeSrc":"4524:208:32","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:32","nodeType":"YulBlock","src":"4547:21:32","statements":[{"nativeSrc":"4549:17:32","nodeType":"YulAssignment","src":"4549:17:32","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:32","nodeType":"YulIdentifier","src":"4558:1:32"},{"kind":"number","nativeSrc":"4561:4:32","nodeType":"YulLiteral","src":"4561:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:32","nodeType":"YulIdentifier","src":"4554:3:32"},"nativeSrc":"4554:12:32","nodeType":"YulFunctionCall","src":"4554:12:32"},"variableNames":[{"name":"i","nativeSrc":"4549:1:32","nodeType":"YulIdentifier","src":"4549:1:32"}]}]},"pre":{"nativeSrc":"4528:3:32","nodeType":"YulBlock","src":"4528:3:32","statements":[]},"src":"4524:208:32"},{"body":{"nativeSrc":"4768:156:32","nodeType":"YulBlock","src":"4768:156:32","statements":[{"nativeSrc":"4786:43:32","nodeType":"YulVariableDeclaration","src":"4786:43:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:32","nodeType":"YulIdentifier","src":"4813:3:32"},{"name":"srcOffset","nativeSrc":"4818:9:32","nodeType":"YulIdentifier","src":"4818:9:32"}],"functionName":{"name":"add","nativeSrc":"4809:3:32","nodeType":"YulIdentifier","src":"4809:3:32"},"nativeSrc":"4809:19:32","nodeType":"YulFunctionCall","src":"4809:19:32"}],"functionName":{"name":"mload","nativeSrc":"4803:5:32","nodeType":"YulIdentifier","src":"4803:5:32"},"nativeSrc":"4803:26:32","nodeType":"YulFunctionCall","src":"4803:26:32"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:32","nodeType":"YulTypedName","src":"4790:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:32","nodeType":"YulIdentifier","src":"4853:6:32"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:32","nodeType":"YulIdentifier","src":"4880:9:32"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:32","nodeType":"YulIdentifier","src":"4895:6:32"},{"kind":"number","nativeSrc":"4903:4:32","nodeType":"YulLiteral","src":"4903:4:32","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:32","nodeType":"YulIdentifier","src":"4891:3:32"},"nativeSrc":"4891:17:32","nodeType":"YulFunctionCall","src":"4891:17:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:32","nodeType":"YulIdentifier","src":"4861:18:32"},"nativeSrc":"4861:48:32","nodeType":"YulFunctionCall","src":"4861:48:32"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:32","nodeType":"YulIdentifier","src":"4846:6:32"},"nativeSrc":"4846:64:32","nodeType":"YulFunctionCall","src":"4846:64:32"},"nativeSrc":"4846:64:32","nodeType":"YulExpressionStatement","src":"4846:64:32"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:32","nodeType":"YulIdentifier","src":"4751:7:32"},{"name":"newLen","nativeSrc":"4760:6:32","nodeType":"YulIdentifier","src":"4760:6:32"}],"functionName":{"name":"lt","nativeSrc":"4748:2:32","nodeType":"YulIdentifier","src":"4748:2:32"},"nativeSrc":"4748:19:32","nodeType":"YulFunctionCall","src":"4748:19:32"},"nativeSrc":"4745:179:32","nodeType":"YulIf","src":"4745:179:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:32","nodeType":"YulIdentifier","src":"4944:4:32"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:32","nodeType":"YulIdentifier","src":"4958:6:32"},{"kind":"number","nativeSrc":"4966:1:32","nodeType":"YulLiteral","src":"4966:1:32","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:32","nodeType":"YulIdentifier","src":"4954:3:32"},"nativeSrc":"4954:14:32","nodeType":"YulFunctionCall","src":"4954:14:32"},{"kind":"number","nativeSrc":"4970:1:32","nodeType":"YulLiteral","src":"4970:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:32","nodeType":"YulIdentifier","src":"4950:3:32"},"nativeSrc":"4950:22:32","nodeType":"YulFunctionCall","src":"4950:22:32"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:32","nodeType":"YulIdentifier","src":"4937:6:32"},"nativeSrc":"4937:36:32","nodeType":"YulFunctionCall","src":"4937:36:32"},"nativeSrc":"4937:36:32","nodeType":"YulExpressionStatement","src":"4937:36:32"}]},"nativeSrc":"4365:618:32","nodeType":"YulCase","src":"4365:618:32","value":{"kind":"number","nativeSrc":"4370:1:32","nodeType":"YulLiteral","src":"4370:1:32","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:32","nodeType":"YulBlock","src":"5000:222:32","statements":[{"nativeSrc":"5014:14:32","nodeType":"YulVariableDeclaration","src":"5014:14:32","value":{"kind":"number","nativeSrc":"5027:1:32","nodeType":"YulLiteral","src":"5027:1:32","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:32","nodeType":"YulTypedName","src":"5018:5:32","type":""}]},{"body":{"nativeSrc":"5051:67:32","nodeType":"YulBlock","src":"5051:67:32","statements":[{"nativeSrc":"5069:35:32","nodeType":"YulAssignment","src":"5069:35:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:32","nodeType":"YulIdentifier","src":"5088:3:32"},{"name":"srcOffset","nativeSrc":"5093:9:32","nodeType":"YulIdentifier","src":"5093:9:32"}],"functionName":{"name":"add","nativeSrc":"5084:3:32","nodeType":"YulIdentifier","src":"5084:3:32"},"nativeSrc":"5084:19:32","nodeType":"YulFunctionCall","src":"5084:19:32"}],"functionName":{"name":"mload","nativeSrc":"5078:5:32","nodeType":"YulIdentifier","src":"5078:5:32"},"nativeSrc":"5078:26:32","nodeType":"YulFunctionCall","src":"5078:26:32"},"variableNames":[{"name":"value","nativeSrc":"5069:5:32","nodeType":"YulIdentifier","src":"5069:5:32"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:32","nodeType":"YulIdentifier","src":"5044:6:32"},"nativeSrc":"5041:77:32","nodeType":"YulIf","src":"5041:77:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:32","nodeType":"YulIdentifier","src":"5138:4:32"},{"arguments":[{"name":"value","nativeSrc":"5197:5:32","nodeType":"YulIdentifier","src":"5197:5:32"},{"name":"newLen","nativeSrc":"5204:6:32","nodeType":"YulIdentifier","src":"5204:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:32","nodeType":"YulIdentifier","src":"5144:52:32"},"nativeSrc":"5144:67:32","nodeType":"YulFunctionCall","src":"5144:67:32"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:32","nodeType":"YulIdentifier","src":"5131:6:32"},"nativeSrc":"5131:81:32","nodeType":"YulFunctionCall","src":"5131:81:32"},"nativeSrc":"5131:81:32","nodeType":"YulExpressionStatement","src":"5131:81:32"}]},"nativeSrc":"4992:230:32","nodeType":"YulCase","src":"4992:230:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:32","nodeType":"YulIdentifier","src":"4345:6:32"},{"kind":"number","nativeSrc":"4353:2:32","nodeType":"YulLiteral","src":"4353:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:32","nodeType":"YulIdentifier","src":"4342:2:32"},"nativeSrc":"4342:14:32","nodeType":"YulFunctionCall","src":"4342:14:32"},"nativeSrc":"4335:887:32","nodeType":"YulSwitch","src":"4335:887:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:32","nodeType":"YulTypedName","src":"3914:4:32","type":""},{"name":"src","nativeSrc":"3920:3:32","nodeType":"YulTypedName","src":"3920:3:32","type":""}],"src":"3833:1395:32"},{"body":{"nativeSrc":"5279:81:32","nodeType":"YulBlock","src":"5279:81:32","statements":[{"nativeSrc":"5289:65:32","nodeType":"YulAssignment","src":"5289:65:32","value":{"arguments":[{"name":"value","nativeSrc":"5304:5:32","nodeType":"YulIdentifier","src":"5304:5:32"},{"kind":"number","nativeSrc":"5311:42:32","nodeType":"YulLiteral","src":"5311:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5300:3:32","nodeType":"YulIdentifier","src":"5300:3:32"},"nativeSrc":"5300:54:32","nodeType":"YulFunctionCall","src":"5300:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"5289:7:32","nodeType":"YulIdentifier","src":"5289:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"5234:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5261:5:32","nodeType":"YulTypedName","src":"5261:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5271:7:32","nodeType":"YulTypedName","src":"5271:7:32","type":""}],"src":"5234:126:32"},{"body":{"nativeSrc":"5411:51:32","nodeType":"YulBlock","src":"5411:51:32","statements":[{"nativeSrc":"5421:35:32","nodeType":"YulAssignment","src":"5421:35:32","value":{"arguments":[{"name":"value","nativeSrc":"5450:5:32","nodeType":"YulIdentifier","src":"5450:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5432:17:32","nodeType":"YulIdentifier","src":"5432:17:32"},"nativeSrc":"5432:24:32","nodeType":"YulFunctionCall","src":"5432:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"5421:7:32","nodeType":"YulIdentifier","src":"5421:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"5366:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5393:5:32","nodeType":"YulTypedName","src":"5393:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5403:7:32","nodeType":"YulTypedName","src":"5403:7:32","type":""}],"src":"5366:96:32"},{"body":{"nativeSrc":"5533:53:32","nodeType":"YulBlock","src":"5533:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5550:3:32","nodeType":"YulIdentifier","src":"5550:3:32"},{"arguments":[{"name":"value","nativeSrc":"5573:5:32","nodeType":"YulIdentifier","src":"5573:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5555:17:32","nodeType":"YulIdentifier","src":"5555:17:32"},"nativeSrc":"5555:24:32","nodeType":"YulFunctionCall","src":"5555:24:32"}],"functionName":{"name":"mstore","nativeSrc":"5543:6:32","nodeType":"YulIdentifier","src":"5543:6:32"},"nativeSrc":"5543:37:32","nodeType":"YulFunctionCall","src":"5543:37:32"},"nativeSrc":"5543:37:32","nodeType":"YulExpressionStatement","src":"5543:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5468:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5521:5:32","nodeType":"YulTypedName","src":"5521:5:32","type":""},{"name":"pos","nativeSrc":"5528:3:32","nodeType":"YulTypedName","src":"5528:3:32","type":""}],"src":"5468:118:32"},{"body":{"nativeSrc":"5690:124:32","nodeType":"YulBlock","src":"5690:124:32","statements":[{"nativeSrc":"5700:26:32","nodeType":"YulAssignment","src":"5700:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"5712:9:32","nodeType":"YulIdentifier","src":"5712:9:32"},{"kind":"number","nativeSrc":"5723:2:32","nodeType":"YulLiteral","src":"5723:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5708:3:32","nodeType":"YulIdentifier","src":"5708:3:32"},"nativeSrc":"5708:18:32","nodeType":"YulFunctionCall","src":"5708:18:32"},"variableNames":[{"name":"tail","nativeSrc":"5700:4:32","nodeType":"YulIdentifier","src":"5700:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5780:6:32","nodeType":"YulIdentifier","src":"5780:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"5793:9:32","nodeType":"YulIdentifier","src":"5793:9:32"},{"kind":"number","nativeSrc":"5804:1:32","nodeType":"YulLiteral","src":"5804:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5789:3:32","nodeType":"YulIdentifier","src":"5789:3:32"},"nativeSrc":"5789:17:32","nodeType":"YulFunctionCall","src":"5789:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5736:43:32","nodeType":"YulIdentifier","src":"5736:43:32"},"nativeSrc":"5736:71:32","nodeType":"YulFunctionCall","src":"5736:71:32"},"nativeSrc":"5736:71:32","nodeType":"YulExpressionStatement","src":"5736:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5592:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5662:9:32","nodeType":"YulTypedName","src":"5662:9:32","type":""},{"name":"value0","nativeSrc":"5674:6:32","nodeType":"YulTypedName","src":"5674:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5685:4:32","nodeType":"YulTypedName","src":"5685:4:32","type":""}],"src":"5592:222:32"},{"body":{"nativeSrc":"5848:152:32","nodeType":"YulBlock","src":"5848:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5865:1:32","nodeType":"YulLiteral","src":"5865:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5868:77:32","nodeType":"YulLiteral","src":"5868:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5858:6:32","nodeType":"YulIdentifier","src":"5858:6:32"},"nativeSrc":"5858:88:32","nodeType":"YulFunctionCall","src":"5858:88:32"},"nativeSrc":"5858:88:32","nodeType":"YulExpressionStatement","src":"5858:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5962:1:32","nodeType":"YulLiteral","src":"5962:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"5965:4:32","nodeType":"YulLiteral","src":"5965:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5955:6:32","nodeType":"YulIdentifier","src":"5955:6:32"},"nativeSrc":"5955:15:32","nodeType":"YulFunctionCall","src":"5955:15:32"},"nativeSrc":"5955:15:32","nodeType":"YulExpressionStatement","src":"5955:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5986:1:32","nodeType":"YulLiteral","src":"5986:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5989:4:32","nodeType":"YulLiteral","src":"5989:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5979:6:32","nodeType":"YulIdentifier","src":"5979:6:32"},"nativeSrc":"5979:15:32","nodeType":"YulFunctionCall","src":"5979:15:32"},"nativeSrc":"5979:15:32","nodeType":"YulExpressionStatement","src":"5979:15:32"}]},"name":"panic_error_0x11","nativeSrc":"5820:180:32","nodeType":"YulFunctionDefinition","src":"5820:180:32"},{"body":{"nativeSrc":"6057:51:32","nodeType":"YulBlock","src":"6057:51:32","statements":[{"nativeSrc":"6067:34:32","nodeType":"YulAssignment","src":"6067:34:32","value":{"arguments":[{"kind":"number","nativeSrc":"6092:1:32","nodeType":"YulLiteral","src":"6092:1:32","type":"","value":"1"},{"name":"value","nativeSrc":"6095:5:32","nodeType":"YulIdentifier","src":"6095:5:32"}],"functionName":{"name":"shr","nativeSrc":"6088:3:32","nodeType":"YulIdentifier","src":"6088:3:32"},"nativeSrc":"6088:13:32","nodeType":"YulFunctionCall","src":"6088:13:32"},"variableNames":[{"name":"newValue","nativeSrc":"6067:8:32","nodeType":"YulIdentifier","src":"6067:8:32"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"6006:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6038:5:32","nodeType":"YulTypedName","src":"6038:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6048:8:32","nodeType":"YulTypedName","src":"6048:8:32","type":""}],"src":"6006:102:32"},{"body":{"nativeSrc":"6187:775:32","nodeType":"YulBlock","src":"6187:775:32","statements":[{"nativeSrc":"6197:15:32","nodeType":"YulAssignment","src":"6197:15:32","value":{"name":"_power","nativeSrc":"6206:6:32","nodeType":"YulIdentifier","src":"6206:6:32"},"variableNames":[{"name":"power","nativeSrc":"6197:5:32","nodeType":"YulIdentifier","src":"6197:5:32"}]},{"nativeSrc":"6221:14:32","nodeType":"YulAssignment","src":"6221:14:32","value":{"name":"_base","nativeSrc":"6230:5:32","nodeType":"YulIdentifier","src":"6230:5:32"},"variableNames":[{"name":"base","nativeSrc":"6221:4:32","nodeType":"YulIdentifier","src":"6221:4:32"}]},{"body":{"nativeSrc":"6279:677:32","nodeType":"YulBlock","src":"6279:677:32","statements":[{"body":{"nativeSrc":"6367:22:32","nodeType":"YulBlock","src":"6367:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6369:16:32","nodeType":"YulIdentifier","src":"6369:16:32"},"nativeSrc":"6369:18:32","nodeType":"YulFunctionCall","src":"6369:18:32"},"nativeSrc":"6369:18:32","nodeType":"YulExpressionStatement","src":"6369:18:32"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"6345:4:32","nodeType":"YulIdentifier","src":"6345:4:32"},{"arguments":[{"name":"max","nativeSrc":"6355:3:32","nodeType":"YulIdentifier","src":"6355:3:32"},{"name":"base","nativeSrc":"6360:4:32","nodeType":"YulIdentifier","src":"6360:4:32"}],"functionName":{"name":"div","nativeSrc":"6351:3:32","nodeType":"YulIdentifier","src":"6351:3:32"},"nativeSrc":"6351:14:32","nodeType":"YulFunctionCall","src":"6351:14:32"}],"functionName":{"name":"gt","nativeSrc":"6342:2:32","nodeType":"YulIdentifier","src":"6342:2:32"},"nativeSrc":"6342:24:32","nodeType":"YulFunctionCall","src":"6342:24:32"},"nativeSrc":"6339:50:32","nodeType":"YulIf","src":"6339:50:32"},{"body":{"nativeSrc":"6434:419:32","nodeType":"YulBlock","src":"6434:419:32","statements":[{"nativeSrc":"6814:25:32","nodeType":"YulAssignment","src":"6814:25:32","value":{"arguments":[{"name":"power","nativeSrc":"6827:5:32","nodeType":"YulIdentifier","src":"6827:5:32"},{"name":"base","nativeSrc":"6834:4:32","nodeType":"YulIdentifier","src":"6834:4:32"}],"functionName":{"name":"mul","nativeSrc":"6823:3:32","nodeType":"YulIdentifier","src":"6823:3:32"},"nativeSrc":"6823:16:32","nodeType":"YulFunctionCall","src":"6823:16:32"},"variableNames":[{"name":"power","nativeSrc":"6814:5:32","nodeType":"YulIdentifier","src":"6814:5:32"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"6409:8:32","nodeType":"YulIdentifier","src":"6409:8:32"},{"kind":"number","nativeSrc":"6419:1:32","nodeType":"YulLiteral","src":"6419:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6405:3:32","nodeType":"YulIdentifier","src":"6405:3:32"},"nativeSrc":"6405:16:32","nodeType":"YulFunctionCall","src":"6405:16:32"},"nativeSrc":"6402:451:32","nodeType":"YulIf","src":"6402:451:32"},{"nativeSrc":"6866:23:32","nodeType":"YulAssignment","src":"6866:23:32","value":{"arguments":[{"name":"base","nativeSrc":"6878:4:32","nodeType":"YulIdentifier","src":"6878:4:32"},{"name":"base","nativeSrc":"6884:4:32","nodeType":"YulIdentifier","src":"6884:4:32"}],"functionName":{"name":"mul","nativeSrc":"6874:3:32","nodeType":"YulIdentifier","src":"6874:3:32"},"nativeSrc":"6874:15:32","nodeType":"YulFunctionCall","src":"6874:15:32"},"variableNames":[{"name":"base","nativeSrc":"6866:4:32","nodeType":"YulIdentifier","src":"6866:4:32"}]},{"nativeSrc":"6902:44:32","nodeType":"YulAssignment","src":"6902:44:32","value":{"arguments":[{"name":"exponent","nativeSrc":"6937:8:32","nodeType":"YulIdentifier","src":"6937:8:32"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"6914:22:32","nodeType":"YulIdentifier","src":"6914:22:32"},"nativeSrc":"6914:32:32","nodeType":"YulFunctionCall","src":"6914:32:32"},"variableNames":[{"name":"exponent","nativeSrc":"6902:8:32","nodeType":"YulIdentifier","src":"6902:8:32"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"6255:8:32","nodeType":"YulIdentifier","src":"6255:8:32"},{"kind":"number","nativeSrc":"6265:1:32","nodeType":"YulLiteral","src":"6265:1:32","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"6252:2:32","nodeType":"YulIdentifier","src":"6252:2:32"},"nativeSrc":"6252:15:32","nodeType":"YulFunctionCall","src":"6252:15:32"},"nativeSrc":"6244:712:32","nodeType":"YulForLoop","post":{"nativeSrc":"6268:2:32","nodeType":"YulBlock","src":"6268:2:32","statements":[]},"pre":{"nativeSrc":"6248:3:32","nodeType":"YulBlock","src":"6248:3:32","statements":[]},"src":"6244:712:32"}]},"name":"checked_exp_helper","nativeSrc":"6114:848:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"6142:6:32","nodeType":"YulTypedName","src":"6142:6:32","type":""},{"name":"_base","nativeSrc":"6150:5:32","nodeType":"YulTypedName","src":"6150:5:32","type":""},{"name":"exponent","nativeSrc":"6157:8:32","nodeType":"YulTypedName","src":"6157:8:32","type":""},{"name":"max","nativeSrc":"6167:3:32","nodeType":"YulTypedName","src":"6167:3:32","type":""}],"returnVariables":[{"name":"power","nativeSrc":"6175:5:32","nodeType":"YulTypedName","src":"6175:5:32","type":""},{"name":"base","nativeSrc":"6182:4:32","nodeType":"YulTypedName","src":"6182:4:32","type":""}],"src":"6114:848:32"},{"body":{"nativeSrc":"7028:1013:32","nodeType":"YulBlock","src":"7028:1013:32","statements":[{"body":{"nativeSrc":"7223:20:32","nodeType":"YulBlock","src":"7223:20:32","statements":[{"nativeSrc":"7225:10:32","nodeType":"YulAssignment","src":"7225:10:32","value":{"kind":"number","nativeSrc":"7234:1:32","nodeType":"YulLiteral","src":"7234:1:32","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"7225:5:32","nodeType":"YulIdentifier","src":"7225:5:32"}]},{"nativeSrc":"7236:5:32","nodeType":"YulLeave","src":"7236:5:32"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7213:8:32","nodeType":"YulIdentifier","src":"7213:8:32"}],"functionName":{"name":"iszero","nativeSrc":"7206:6:32","nodeType":"YulIdentifier","src":"7206:6:32"},"nativeSrc":"7206:16:32","nodeType":"YulFunctionCall","src":"7206:16:32"},"nativeSrc":"7203:40:32","nodeType":"YulIf","src":"7203:40:32"},{"body":{"nativeSrc":"7268:20:32","nodeType":"YulBlock","src":"7268:20:32","statements":[{"nativeSrc":"7270:10:32","nodeType":"YulAssignment","src":"7270:10:32","value":{"kind":"number","nativeSrc":"7279:1:32","nodeType":"YulLiteral","src":"7279:1:32","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"7270:5:32","nodeType":"YulIdentifier","src":"7270:5:32"}]},{"nativeSrc":"7281:5:32","nodeType":"YulLeave","src":"7281:5:32"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"7262:4:32","nodeType":"YulIdentifier","src":"7262:4:32"}],"functionName":{"name":"iszero","nativeSrc":"7255:6:32","nodeType":"YulIdentifier","src":"7255:6:32"},"nativeSrc":"7255:12:32","nodeType":"YulFunctionCall","src":"7255:12:32"},"nativeSrc":"7252:36:32","nodeType":"YulIf","src":"7252:36:32"},{"cases":[{"body":{"nativeSrc":"7398:20:32","nodeType":"YulBlock","src":"7398:20:32","statements":[{"nativeSrc":"7400:10:32","nodeType":"YulAssignment","src":"7400:10:32","value":{"kind":"number","nativeSrc":"7409:1:32","nodeType":"YulLiteral","src":"7409:1:32","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"7400:5:32","nodeType":"YulIdentifier","src":"7400:5:32"}]},{"nativeSrc":"7411:5:32","nodeType":"YulLeave","src":"7411:5:32"}]},"nativeSrc":"7391:27:32","nodeType":"YulCase","src":"7391:27:32","value":{"kind":"number","nativeSrc":"7396:1:32","nodeType":"YulLiteral","src":"7396:1:32","type":"","value":"1"}},{"body":{"nativeSrc":"7442:176:32","nodeType":"YulBlock","src":"7442:176:32","statements":[{"body":{"nativeSrc":"7477:22:32","nodeType":"YulBlock","src":"7477:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7479:16:32","nodeType":"YulIdentifier","src":"7479:16:32"},"nativeSrc":"7479:18:32","nodeType":"YulFunctionCall","src":"7479:18:32"},"nativeSrc":"7479:18:32","nodeType":"YulExpressionStatement","src":"7479:18:32"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7462:8:32","nodeType":"YulIdentifier","src":"7462:8:32"},{"kind":"number","nativeSrc":"7472:3:32","nodeType":"YulLiteral","src":"7472:3:32","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"7459:2:32","nodeType":"YulIdentifier","src":"7459:2:32"},"nativeSrc":"7459:17:32","nodeType":"YulFunctionCall","src":"7459:17:32"},"nativeSrc":"7456:43:32","nodeType":"YulIf","src":"7456:43:32"},{"nativeSrc":"7512:25:32","nodeType":"YulAssignment","src":"7512:25:32","value":{"arguments":[{"kind":"number","nativeSrc":"7525:1:32","nodeType":"YulLiteral","src":"7525:1:32","type":"","value":"2"},{"name":"exponent","nativeSrc":"7528:8:32","nodeType":"YulIdentifier","src":"7528:8:32"}],"functionName":{"name":"exp","nativeSrc":"7521:3:32","nodeType":"YulIdentifier","src":"7521:3:32"},"nativeSrc":"7521:16:32","nodeType":"YulFunctionCall","src":"7521:16:32"},"variableNames":[{"name":"power","nativeSrc":"7512:5:32","nodeType":"YulIdentifier","src":"7512:5:32"}]},{"body":{"nativeSrc":"7568:22:32","nodeType":"YulBlock","src":"7568:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7570:16:32","nodeType":"YulIdentifier","src":"7570:16:32"},"nativeSrc":"7570:18:32","nodeType":"YulFunctionCall","src":"7570:18:32"},"nativeSrc":"7570:18:32","nodeType":"YulExpressionStatement","src":"7570:18:32"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"7556:5:32","nodeType":"YulIdentifier","src":"7556:5:32"},{"name":"max","nativeSrc":"7563:3:32","nodeType":"YulIdentifier","src":"7563:3:32"}],"functionName":{"name":"gt","nativeSrc":"7553:2:32","nodeType":"YulIdentifier","src":"7553:2:32"},"nativeSrc":"7553:14:32","nodeType":"YulFunctionCall","src":"7553:14:32"},"nativeSrc":"7550:40:32","nodeType":"YulIf","src":"7550:40:32"},{"nativeSrc":"7603:5:32","nodeType":"YulLeave","src":"7603:5:32"}]},"nativeSrc":"7427:191:32","nodeType":"YulCase","src":"7427:191:32","value":{"kind":"number","nativeSrc":"7432:1:32","nodeType":"YulLiteral","src":"7432:1:32","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"7348:4:32","nodeType":"YulIdentifier","src":"7348:4:32"},"nativeSrc":"7341:277:32","nodeType":"YulSwitch","src":"7341:277:32"},{"body":{"nativeSrc":"7750:123:32","nodeType":"YulBlock","src":"7750:123:32","statements":[{"nativeSrc":"7764:28:32","nodeType":"YulAssignment","src":"7764:28:32","value":{"arguments":[{"name":"base","nativeSrc":"7777:4:32","nodeType":"YulIdentifier","src":"7777:4:32"},{"name":"exponent","nativeSrc":"7783:8:32","nodeType":"YulIdentifier","src":"7783:8:32"}],"functionName":{"name":"exp","nativeSrc":"7773:3:32","nodeType":"YulIdentifier","src":"7773:3:32"},"nativeSrc":"7773:19:32","nodeType":"YulFunctionCall","src":"7773:19:32"},"variableNames":[{"name":"power","nativeSrc":"7764:5:32","nodeType":"YulIdentifier","src":"7764:5:32"}]},{"body":{"nativeSrc":"7823:22:32","nodeType":"YulBlock","src":"7823:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7825:16:32","nodeType":"YulIdentifier","src":"7825:16:32"},"nativeSrc":"7825:18:32","nodeType":"YulFunctionCall","src":"7825:18:32"},"nativeSrc":"7825:18:32","nodeType":"YulExpressionStatement","src":"7825:18:32"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"7811:5:32","nodeType":"YulIdentifier","src":"7811:5:32"},{"name":"max","nativeSrc":"7818:3:32","nodeType":"YulIdentifier","src":"7818:3:32"}],"functionName":{"name":"gt","nativeSrc":"7808:2:32","nodeType":"YulIdentifier","src":"7808:2:32"},"nativeSrc":"7808:14:32","nodeType":"YulFunctionCall","src":"7808:14:32"},"nativeSrc":"7805:40:32","nodeType":"YulIf","src":"7805:40:32"},{"nativeSrc":"7858:5:32","nodeType":"YulLeave","src":"7858:5:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"7653:4:32","nodeType":"YulIdentifier","src":"7653:4:32"},{"kind":"number","nativeSrc":"7659:2:32","nodeType":"YulLiteral","src":"7659:2:32","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"7650:2:32","nodeType":"YulIdentifier","src":"7650:2:32"},"nativeSrc":"7650:12:32","nodeType":"YulFunctionCall","src":"7650:12:32"},{"arguments":[{"name":"exponent","nativeSrc":"7667:8:32","nodeType":"YulIdentifier","src":"7667:8:32"},{"kind":"number","nativeSrc":"7677:2:32","nodeType":"YulLiteral","src":"7677:2:32","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"7664:2:32","nodeType":"YulIdentifier","src":"7664:2:32"},"nativeSrc":"7664:16:32","nodeType":"YulFunctionCall","src":"7664:16:32"}],"functionName":{"name":"and","nativeSrc":"7646:3:32","nodeType":"YulIdentifier","src":"7646:3:32"},"nativeSrc":"7646:35:32","nodeType":"YulFunctionCall","src":"7646:35:32"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"7702:4:32","nodeType":"YulIdentifier","src":"7702:4:32"},{"kind":"number","nativeSrc":"7708:3:32","nodeType":"YulLiteral","src":"7708:3:32","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"7699:2:32","nodeType":"YulIdentifier","src":"7699:2:32"},"nativeSrc":"7699:13:32","nodeType":"YulFunctionCall","src":"7699:13:32"},{"arguments":[{"name":"exponent","nativeSrc":"7717:8:32","nodeType":"YulIdentifier","src":"7717:8:32"},{"kind":"number","nativeSrc":"7727:2:32","nodeType":"YulLiteral","src":"7727:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7714:2:32","nodeType":"YulIdentifier","src":"7714:2:32"},"nativeSrc":"7714:16:32","nodeType":"YulFunctionCall","src":"7714:16:32"}],"functionName":{"name":"and","nativeSrc":"7695:3:32","nodeType":"YulIdentifier","src":"7695:3:32"},"nativeSrc":"7695:36:32","nodeType":"YulFunctionCall","src":"7695:36:32"}],"functionName":{"name":"or","nativeSrc":"7630:2:32","nodeType":"YulIdentifier","src":"7630:2:32"},"nativeSrc":"7630:111:32","nodeType":"YulFunctionCall","src":"7630:111:32"},"nativeSrc":"7627:246:32","nodeType":"YulIf","src":"7627:246:32"},{"nativeSrc":"7883:57:32","nodeType":"YulAssignment","src":"7883:57:32","value":{"arguments":[{"kind":"number","nativeSrc":"7917:1:32","nodeType":"YulLiteral","src":"7917:1:32","type":"","value":"1"},{"name":"base","nativeSrc":"7920:4:32","nodeType":"YulIdentifier","src":"7920:4:32"},{"name":"exponent","nativeSrc":"7926:8:32","nodeType":"YulIdentifier","src":"7926:8:32"},{"name":"max","nativeSrc":"7936:3:32","nodeType":"YulIdentifier","src":"7936:3:32"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"7898:18:32","nodeType":"YulIdentifier","src":"7898:18:32"},"nativeSrc":"7898:42:32","nodeType":"YulFunctionCall","src":"7898:42:32"},"variableNames":[{"name":"power","nativeSrc":"7883:5:32","nodeType":"YulIdentifier","src":"7883:5:32"},{"name":"base","nativeSrc":"7890:4:32","nodeType":"YulIdentifier","src":"7890:4:32"}]},{"body":{"nativeSrc":"7979:22:32","nodeType":"YulBlock","src":"7979:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7981:16:32","nodeType":"YulIdentifier","src":"7981:16:32"},"nativeSrc":"7981:18:32","nodeType":"YulFunctionCall","src":"7981:18:32"},"nativeSrc":"7981:18:32","nodeType":"YulExpressionStatement","src":"7981:18:32"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"7956:5:32","nodeType":"YulIdentifier","src":"7956:5:32"},{"arguments":[{"name":"max","nativeSrc":"7967:3:32","nodeType":"YulIdentifier","src":"7967:3:32"},{"name":"base","nativeSrc":"7972:4:32","nodeType":"YulIdentifier","src":"7972:4:32"}],"functionName":{"name":"div","nativeSrc":"7963:3:32","nodeType":"YulIdentifier","src":"7963:3:32"},"nativeSrc":"7963:14:32","nodeType":"YulFunctionCall","src":"7963:14:32"}],"functionName":{"name":"gt","nativeSrc":"7953:2:32","nodeType":"YulIdentifier","src":"7953:2:32"},"nativeSrc":"7953:25:32","nodeType":"YulFunctionCall","src":"7953:25:32"},"nativeSrc":"7950:51:32","nodeType":"YulIf","src":"7950:51:32"},{"nativeSrc":"8010:25:32","nodeType":"YulAssignment","src":"8010:25:32","value":{"arguments":[{"name":"power","nativeSrc":"8023:5:32","nodeType":"YulIdentifier","src":"8023:5:32"},{"name":"base","nativeSrc":"8030:4:32","nodeType":"YulIdentifier","src":"8030:4:32"}],"functionName":{"name":"mul","nativeSrc":"8019:3:32","nodeType":"YulIdentifier","src":"8019:3:32"},"nativeSrc":"8019:16:32","nodeType":"YulFunctionCall","src":"8019:16:32"},"variableNames":[{"name":"power","nativeSrc":"8010:5:32","nodeType":"YulIdentifier","src":"8010:5:32"}]}]},"name":"checked_exp_unsigned","nativeSrc":"6968:1073:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"6998:4:32","nodeType":"YulTypedName","src":"6998:4:32","type":""},{"name":"exponent","nativeSrc":"7004:8:32","nodeType":"YulTypedName","src":"7004:8:32","type":""},{"name":"max","nativeSrc":"7014:3:32","nodeType":"YulTypedName","src":"7014:3:32","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7022:5:32","nodeType":"YulTypedName","src":"7022:5:32","type":""}],"src":"6968:1073:32"},{"body":{"nativeSrc":"8090:43:32","nodeType":"YulBlock","src":"8090:43:32","statements":[{"nativeSrc":"8100:27:32","nodeType":"YulAssignment","src":"8100:27:32","value":{"arguments":[{"name":"value","nativeSrc":"8115:5:32","nodeType":"YulIdentifier","src":"8115:5:32"},{"kind":"number","nativeSrc":"8122:4:32","nodeType":"YulLiteral","src":"8122:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"8111:3:32","nodeType":"YulIdentifier","src":"8111:3:32"},"nativeSrc":"8111:16:32","nodeType":"YulFunctionCall","src":"8111:16:32"},"variableNames":[{"name":"cleaned","nativeSrc":"8100:7:32","nodeType":"YulIdentifier","src":"8100:7:32"}]}]},"name":"cleanup_t_uint8","nativeSrc":"8047:86:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8072:5:32","nodeType":"YulTypedName","src":"8072:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8082:7:32","nodeType":"YulTypedName","src":"8082:7:32","type":""}],"src":"8047:86:32"},{"body":{"nativeSrc":"8203:217:32","nodeType":"YulBlock","src":"8203:217:32","statements":[{"nativeSrc":"8213:31:32","nodeType":"YulAssignment","src":"8213:31:32","value":{"arguments":[{"name":"base","nativeSrc":"8239:4:32","nodeType":"YulIdentifier","src":"8239:4:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8221:17:32","nodeType":"YulIdentifier","src":"8221:17:32"},"nativeSrc":"8221:23:32","nodeType":"YulFunctionCall","src":"8221:23:32"},"variableNames":[{"name":"base","nativeSrc":"8213:4:32","nodeType":"YulIdentifier","src":"8213:4:32"}]},{"nativeSrc":"8253:37:32","nodeType":"YulAssignment","src":"8253:37:32","value":{"arguments":[{"name":"exponent","nativeSrc":"8281:8:32","nodeType":"YulIdentifier","src":"8281:8:32"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"8265:15:32","nodeType":"YulIdentifier","src":"8265:15:32"},"nativeSrc":"8265:25:32","nodeType":"YulFunctionCall","src":"8265:25:32"},"variableNames":[{"name":"exponent","nativeSrc":"8253:8:32","nodeType":"YulIdentifier","src":"8253:8:32"}]},{"nativeSrc":"8300:113:32","nodeType":"YulAssignment","src":"8300:113:32","value":{"arguments":[{"name":"base","nativeSrc":"8330:4:32","nodeType":"YulIdentifier","src":"8330:4:32"},{"name":"exponent","nativeSrc":"8336:8:32","nodeType":"YulIdentifier","src":"8336:8:32"},{"kind":"number","nativeSrc":"8346:66:32","nodeType":"YulLiteral","src":"8346:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"8309:20:32","nodeType":"YulIdentifier","src":"8309:20:32"},"nativeSrc":"8309:104:32","nodeType":"YulFunctionCall","src":"8309:104:32"},"variableNames":[{"name":"power","nativeSrc":"8300:5:32","nodeType":"YulIdentifier","src":"8300:5:32"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"8139:281:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"8178:4:32","nodeType":"YulTypedName","src":"8178:4:32","type":""},{"name":"exponent","nativeSrc":"8184:8:32","nodeType":"YulTypedName","src":"8184:8:32","type":""}],"returnVariables":[{"name":"power","nativeSrc":"8197:5:32","nodeType":"YulTypedName","src":"8197:5:32","type":""}],"src":"8139:281:32"},{"body":{"nativeSrc":"8474:362:32","nodeType":"YulBlock","src":"8474:362:32","statements":[{"nativeSrc":"8484:25:32","nodeType":"YulAssignment","src":"8484:25:32","value":{"arguments":[{"name":"x","nativeSrc":"8507:1:32","nodeType":"YulIdentifier","src":"8507:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8489:17:32","nodeType":"YulIdentifier","src":"8489:17:32"},"nativeSrc":"8489:20:32","nodeType":"YulFunctionCall","src":"8489:20:32"},"variableNames":[{"name":"x","nativeSrc":"8484:1:32","nodeType":"YulIdentifier","src":"8484:1:32"}]},{"nativeSrc":"8518:25:32","nodeType":"YulAssignment","src":"8518:25:32","value":{"arguments":[{"name":"y","nativeSrc":"8541:1:32","nodeType":"YulIdentifier","src":"8541:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8523:17:32","nodeType":"YulIdentifier","src":"8523:17:32"},"nativeSrc":"8523:20:32","nodeType":"YulFunctionCall","src":"8523:20:32"},"variableNames":[{"name":"y","nativeSrc":"8518:1:32","nodeType":"YulIdentifier","src":"8518:1:32"}]},{"nativeSrc":"8552:28:32","nodeType":"YulVariableDeclaration","src":"8552:28:32","value":{"arguments":[{"name":"x","nativeSrc":"8575:1:32","nodeType":"YulIdentifier","src":"8575:1:32"},{"name":"y","nativeSrc":"8578:1:32","nodeType":"YulIdentifier","src":"8578:1:32"}],"functionName":{"name":"mul","nativeSrc":"8571:3:32","nodeType":"YulIdentifier","src":"8571:3:32"},"nativeSrc":"8571:9:32","nodeType":"YulFunctionCall","src":"8571:9:32"},"variables":[{"name":"product_raw","nativeSrc":"8556:11:32","nodeType":"YulTypedName","src":"8556:11:32","type":""}]},{"nativeSrc":"8589:41:32","nodeType":"YulAssignment","src":"8589:41:32","value":{"arguments":[{"name":"product_raw","nativeSrc":"8618:11:32","nodeType":"YulIdentifier","src":"8618:11:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8600:17:32","nodeType":"YulIdentifier","src":"8600:17:32"},"nativeSrc":"8600:30:32","nodeType":"YulFunctionCall","src":"8600:30:32"},"variableNames":[{"name":"product","nativeSrc":"8589:7:32","nodeType":"YulIdentifier","src":"8589:7:32"}]},{"body":{"nativeSrc":"8807:22:32","nodeType":"YulBlock","src":"8807:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8809:16:32","nodeType":"YulIdentifier","src":"8809:16:32"},"nativeSrc":"8809:18:32","nodeType":"YulFunctionCall","src":"8809:18:32"},"nativeSrc":"8809:18:32","nodeType":"YulExpressionStatement","src":"8809:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"8740:1:32","nodeType":"YulIdentifier","src":"8740:1:32"}],"functionName":{"name":"iszero","nativeSrc":"8733:6:32","nodeType":"YulIdentifier","src":"8733:6:32"},"nativeSrc":"8733:9:32","nodeType":"YulFunctionCall","src":"8733:9:32"},{"arguments":[{"name":"y","nativeSrc":"8763:1:32","nodeType":"YulIdentifier","src":"8763:1:32"},{"arguments":[{"name":"product","nativeSrc":"8770:7:32","nodeType":"YulIdentifier","src":"8770:7:32"},{"name":"x","nativeSrc":"8779:1:32","nodeType":"YulIdentifier","src":"8779:1:32"}],"functionName":{"name":"div","nativeSrc":"8766:3:32","nodeType":"YulIdentifier","src":"8766:3:32"},"nativeSrc":"8766:15:32","nodeType":"YulFunctionCall","src":"8766:15:32"}],"functionName":{"name":"eq","nativeSrc":"8760:2:32","nodeType":"YulIdentifier","src":"8760:2:32"},"nativeSrc":"8760:22:32","nodeType":"YulFunctionCall","src":"8760:22:32"}],"functionName":{"name":"or","nativeSrc":"8713:2:32","nodeType":"YulIdentifier","src":"8713:2:32"},"nativeSrc":"8713:83:32","nodeType":"YulFunctionCall","src":"8713:83:32"}],"functionName":{"name":"iszero","nativeSrc":"8693:6:32","nodeType":"YulIdentifier","src":"8693:6:32"},"nativeSrc":"8693:113:32","nodeType":"YulFunctionCall","src":"8693:113:32"},"nativeSrc":"8690:139:32","nodeType":"YulIf","src":"8690:139:32"}]},"name":"checked_mul_t_uint256","nativeSrc":"8426:410:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8457:1:32","nodeType":"YulTypedName","src":"8457:1:32","type":""},{"name":"y","nativeSrc":"8460:1:32","nodeType":"YulTypedName","src":"8460:1:32","type":""}],"returnVariables":[{"name":"product","nativeSrc":"8466:7:32","nodeType":"YulTypedName","src":"8466:7:32","type":""}],"src":"8426:410:32"},{"body":{"nativeSrc":"8887:32:32","nodeType":"YulBlock","src":"8887:32:32","statements":[{"nativeSrc":"8897:16:32","nodeType":"YulAssignment","src":"8897:16:32","value":{"name":"value","nativeSrc":"8908:5:32","nodeType":"YulIdentifier","src":"8908:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"8897:7:32","nodeType":"YulIdentifier","src":"8897:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8842:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8869:5:32","nodeType":"YulTypedName","src":"8869:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8879:7:32","nodeType":"YulTypedName","src":"8879:7:32","type":""}],"src":"8842:77:32"},{"body":{"nativeSrc":"8990:53:32","nodeType":"YulBlock","src":"8990:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9007:3:32","nodeType":"YulIdentifier","src":"9007:3:32"},{"arguments":[{"name":"value","nativeSrc":"9030:5:32","nodeType":"YulIdentifier","src":"9030:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9012:17:32","nodeType":"YulIdentifier","src":"9012:17:32"},"nativeSrc":"9012:24:32","nodeType":"YulFunctionCall","src":"9012:24:32"}],"functionName":{"name":"mstore","nativeSrc":"9000:6:32","nodeType":"YulIdentifier","src":"9000:6:32"},"nativeSrc":"9000:37:32","nodeType":"YulFunctionCall","src":"9000:37:32"},"nativeSrc":"9000:37:32","nodeType":"YulExpressionStatement","src":"9000:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8925:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8978:5:32","nodeType":"YulTypedName","src":"8978:5:32","type":""},{"name":"pos","nativeSrc":"8985:3:32","nodeType":"YulTypedName","src":"8985:3:32","type":""}],"src":"8925:118:32"},{"body":{"nativeSrc":"9114:53:32","nodeType":"YulBlock","src":"9114:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9131:3:32","nodeType":"YulIdentifier","src":"9131:3:32"},{"arguments":[{"name":"value","nativeSrc":"9154:5:32","nodeType":"YulIdentifier","src":"9154:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9136:17:32","nodeType":"YulIdentifier","src":"9136:17:32"},"nativeSrc":"9136:24:32","nodeType":"YulFunctionCall","src":"9136:24:32"}],"functionName":{"name":"mstore","nativeSrc":"9124:6:32","nodeType":"YulIdentifier","src":"9124:6:32"},"nativeSrc":"9124:37:32","nodeType":"YulFunctionCall","src":"9124:37:32"},"nativeSrc":"9124:37:32","nodeType":"YulExpressionStatement","src":"9124:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9049:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9102:5:32","nodeType":"YulTypedName","src":"9102:5:32","type":""},{"name":"pos","nativeSrc":"9109:3:32","nodeType":"YulTypedName","src":"9109:3:32","type":""}],"src":"9049:118:32"},{"body":{"nativeSrc":"9383:454:32","nodeType":"YulBlock","src":"9383:454:32","statements":[{"nativeSrc":"9393:27:32","nodeType":"YulAssignment","src":"9393:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"9405:9:32","nodeType":"YulIdentifier","src":"9405:9:32"},{"kind":"number","nativeSrc":"9416:3:32","nodeType":"YulLiteral","src":"9416:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9401:3:32","nodeType":"YulIdentifier","src":"9401:3:32"},"nativeSrc":"9401:19:32","nodeType":"YulFunctionCall","src":"9401:19:32"},"variableNames":[{"name":"tail","nativeSrc":"9393:4:32","nodeType":"YulIdentifier","src":"9393:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9474:6:32","nodeType":"YulIdentifier","src":"9474:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9487:9:32","nodeType":"YulIdentifier","src":"9487:9:32"},{"kind":"number","nativeSrc":"9498:1:32","nodeType":"YulLiteral","src":"9498:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9483:3:32","nodeType":"YulIdentifier","src":"9483:3:32"},"nativeSrc":"9483:17:32","nodeType":"YulFunctionCall","src":"9483:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9430:43:32","nodeType":"YulIdentifier","src":"9430:43:32"},"nativeSrc":"9430:71:32","nodeType":"YulFunctionCall","src":"9430:71:32"},"nativeSrc":"9430:71:32","nodeType":"YulExpressionStatement","src":"9430:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9555:6:32","nodeType":"YulIdentifier","src":"9555:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9568:9:32","nodeType":"YulIdentifier","src":"9568:9:32"},{"kind":"number","nativeSrc":"9579:2:32","nodeType":"YulLiteral","src":"9579:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9564:3:32","nodeType":"YulIdentifier","src":"9564:3:32"},"nativeSrc":"9564:18:32","nodeType":"YulFunctionCall","src":"9564:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9511:43:32","nodeType":"YulIdentifier","src":"9511:43:32"},"nativeSrc":"9511:72:32","nodeType":"YulFunctionCall","src":"9511:72:32"},"nativeSrc":"9511:72:32","nodeType":"YulExpressionStatement","src":"9511:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"9637:6:32","nodeType":"YulIdentifier","src":"9637:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9650:9:32","nodeType":"YulIdentifier","src":"9650:9:32"},{"kind":"number","nativeSrc":"9661:2:32","nodeType":"YulLiteral","src":"9661:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9646:3:32","nodeType":"YulIdentifier","src":"9646:3:32"},"nativeSrc":"9646:18:32","nodeType":"YulFunctionCall","src":"9646:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9593:43:32","nodeType":"YulIdentifier","src":"9593:43:32"},"nativeSrc":"9593:72:32","nodeType":"YulFunctionCall","src":"9593:72:32"},"nativeSrc":"9593:72:32","nodeType":"YulExpressionStatement","src":"9593:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"9719:6:32","nodeType":"YulIdentifier","src":"9719:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9732:9:32","nodeType":"YulIdentifier","src":"9732:9:32"},{"kind":"number","nativeSrc":"9743:2:32","nodeType":"YulLiteral","src":"9743:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9728:3:32","nodeType":"YulIdentifier","src":"9728:3:32"},"nativeSrc":"9728:18:32","nodeType":"YulFunctionCall","src":"9728:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9675:43:32","nodeType":"YulIdentifier","src":"9675:43:32"},"nativeSrc":"9675:72:32","nodeType":"YulFunctionCall","src":"9675:72:32"},"nativeSrc":"9675:72:32","nodeType":"YulExpressionStatement","src":"9675:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"9801:6:32","nodeType":"YulIdentifier","src":"9801:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9814:9:32","nodeType":"YulIdentifier","src":"9814:9:32"},{"kind":"number","nativeSrc":"9825:3:32","nodeType":"YulLiteral","src":"9825:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9810:3:32","nodeType":"YulIdentifier","src":"9810:3:32"},"nativeSrc":"9810:19:32","nodeType":"YulFunctionCall","src":"9810:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9757:43:32","nodeType":"YulIdentifier","src":"9757:43:32"},"nativeSrc":"9757:73:32","nodeType":"YulFunctionCall","src":"9757:73:32"},"nativeSrc":"9757:73:32","nodeType":"YulExpressionStatement","src":"9757:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"9173:664:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9323:9:32","nodeType":"YulTypedName","src":"9323:9:32","type":""},{"name":"value4","nativeSrc":"9335:6:32","nodeType":"YulTypedName","src":"9335:6:32","type":""},{"name":"value3","nativeSrc":"9343:6:32","nodeType":"YulTypedName","src":"9343:6:32","type":""},{"name":"value2","nativeSrc":"9351:6:32","nodeType":"YulTypedName","src":"9351:6:32","type":""},{"name":"value1","nativeSrc":"9359:6:32","nodeType":"YulTypedName","src":"9359:6:32","type":""},{"name":"value0","nativeSrc":"9367:6:32","nodeType":"YulTypedName","src":"9367:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9378:4:32","nodeType":"YulTypedName","src":"9378:4:32","type":""}],"src":"9173:664:32"},{"body":{"nativeSrc":"9939:73:32","nodeType":"YulBlock","src":"9939:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9956:3:32","nodeType":"YulIdentifier","src":"9956:3:32"},{"name":"length","nativeSrc":"9961:6:32","nodeType":"YulIdentifier","src":"9961:6:32"}],"functionName":{"name":"mstore","nativeSrc":"9949:6:32","nodeType":"YulIdentifier","src":"9949:6:32"},"nativeSrc":"9949:19:32","nodeType":"YulFunctionCall","src":"9949:19:32"},"nativeSrc":"9949:19:32","nodeType":"YulExpressionStatement","src":"9949:19:32"},{"nativeSrc":"9977:29:32","nodeType":"YulAssignment","src":"9977:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"9996:3:32","nodeType":"YulIdentifier","src":"9996:3:32"},{"kind":"number","nativeSrc":"10001:4:32","nodeType":"YulLiteral","src":"10001:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9992:3:32","nodeType":"YulIdentifier","src":"9992:3:32"},"nativeSrc":"9992:14:32","nodeType":"YulFunctionCall","src":"9992:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"9977:11:32","nodeType":"YulIdentifier","src":"9977:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9843:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9911:3:32","nodeType":"YulTypedName","src":"9911:3:32","type":""},{"name":"length","nativeSrc":"9916:6:32","nodeType":"YulTypedName","src":"9916:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9927:11:32","nodeType":"YulTypedName","src":"9927:11:32","type":""}],"src":"9843:169:32"},{"body":{"nativeSrc":"10080:184:32","nodeType":"YulBlock","src":"10080:184:32","statements":[{"nativeSrc":"10090:10:32","nodeType":"YulVariableDeclaration","src":"10090:10:32","value":{"kind":"number","nativeSrc":"10099:1:32","nodeType":"YulLiteral","src":"10099:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10094:1:32","nodeType":"YulTypedName","src":"10094:1:32","type":""}]},{"body":{"nativeSrc":"10159:63:32","nodeType":"YulBlock","src":"10159:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10184:3:32","nodeType":"YulIdentifier","src":"10184:3:32"},{"name":"i","nativeSrc":"10189:1:32","nodeType":"YulIdentifier","src":"10189:1:32"}],"functionName":{"name":"add","nativeSrc":"10180:3:32","nodeType":"YulIdentifier","src":"10180:3:32"},"nativeSrc":"10180:11:32","nodeType":"YulFunctionCall","src":"10180:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10203:3:32","nodeType":"YulIdentifier","src":"10203:3:32"},{"name":"i","nativeSrc":"10208:1:32","nodeType":"YulIdentifier","src":"10208:1:32"}],"functionName":{"name":"add","nativeSrc":"10199:3:32","nodeType":"YulIdentifier","src":"10199:3:32"},"nativeSrc":"10199:11:32","nodeType":"YulFunctionCall","src":"10199:11:32"}],"functionName":{"name":"mload","nativeSrc":"10193:5:32","nodeType":"YulIdentifier","src":"10193:5:32"},"nativeSrc":"10193:18:32","nodeType":"YulFunctionCall","src":"10193:18:32"}],"functionName":{"name":"mstore","nativeSrc":"10173:6:32","nodeType":"YulIdentifier","src":"10173:6:32"},"nativeSrc":"10173:39:32","nodeType":"YulFunctionCall","src":"10173:39:32"},"nativeSrc":"10173:39:32","nodeType":"YulExpressionStatement","src":"10173:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10120:1:32","nodeType":"YulIdentifier","src":"10120:1:32"},{"name":"length","nativeSrc":"10123:6:32","nodeType":"YulIdentifier","src":"10123:6:32"}],"functionName":{"name":"lt","nativeSrc":"10117:2:32","nodeType":"YulIdentifier","src":"10117:2:32"},"nativeSrc":"10117:13:32","nodeType":"YulFunctionCall","src":"10117:13:32"},"nativeSrc":"10109:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"10131:19:32","nodeType":"YulBlock","src":"10131:19:32","statements":[{"nativeSrc":"10133:15:32","nodeType":"YulAssignment","src":"10133:15:32","value":{"arguments":[{"name":"i","nativeSrc":"10142:1:32","nodeType":"YulIdentifier","src":"10142:1:32"},{"kind":"number","nativeSrc":"10145:2:32","nodeType":"YulLiteral","src":"10145:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10138:3:32","nodeType":"YulIdentifier","src":"10138:3:32"},"nativeSrc":"10138:10:32","nodeType":"YulFunctionCall","src":"10138:10:32"},"variableNames":[{"name":"i","nativeSrc":"10133:1:32","nodeType":"YulIdentifier","src":"10133:1:32"}]}]},"pre":{"nativeSrc":"10113:3:32","nodeType":"YulBlock","src":"10113:3:32","statements":[]},"src":"10109:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10242:3:32","nodeType":"YulIdentifier","src":"10242:3:32"},{"name":"length","nativeSrc":"10247:6:32","nodeType":"YulIdentifier","src":"10247:6:32"}],"functionName":{"name":"add","nativeSrc":"10238:3:32","nodeType":"YulIdentifier","src":"10238:3:32"},"nativeSrc":"10238:16:32","nodeType":"YulFunctionCall","src":"10238:16:32"},{"kind":"number","nativeSrc":"10256:1:32","nodeType":"YulLiteral","src":"10256:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10231:6:32","nodeType":"YulIdentifier","src":"10231:6:32"},"nativeSrc":"10231:27:32","nodeType":"YulFunctionCall","src":"10231:27:32"},"nativeSrc":"10231:27:32","nodeType":"YulExpressionStatement","src":"10231:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10018:246:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10062:3:32","nodeType":"YulTypedName","src":"10062:3:32","type":""},{"name":"dst","nativeSrc":"10067:3:32","nodeType":"YulTypedName","src":"10067:3:32","type":""},{"name":"length","nativeSrc":"10072:6:32","nodeType":"YulTypedName","src":"10072:6:32","type":""}],"src":"10018:246:32"},{"body":{"nativeSrc":"10318:54:32","nodeType":"YulBlock","src":"10318:54:32","statements":[{"nativeSrc":"10328:38:32","nodeType":"YulAssignment","src":"10328:38:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10346:5:32","nodeType":"YulIdentifier","src":"10346:5:32"},{"kind":"number","nativeSrc":"10353:2:32","nodeType":"YulLiteral","src":"10353:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10342:3:32","nodeType":"YulIdentifier","src":"10342:3:32"},"nativeSrc":"10342:14:32","nodeType":"YulFunctionCall","src":"10342:14:32"},{"arguments":[{"kind":"number","nativeSrc":"10362:2:32","nodeType":"YulLiteral","src":"10362:2:32","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"10358:3:32","nodeType":"YulIdentifier","src":"10358:3:32"},"nativeSrc":"10358:7:32","nodeType":"YulFunctionCall","src":"10358:7:32"}],"functionName":{"name":"and","nativeSrc":"10338:3:32","nodeType":"YulIdentifier","src":"10338:3:32"},"nativeSrc":"10338:28:32","nodeType":"YulFunctionCall","src":"10338:28:32"},"variableNames":[{"name":"result","nativeSrc":"10328:6:32","nodeType":"YulIdentifier","src":"10328:6:32"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"10270:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10301:5:32","nodeType":"YulTypedName","src":"10301:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"10311:6:32","nodeType":"YulTypedName","src":"10311:6:32","type":""}],"src":"10270:102:32"},{"body":{"nativeSrc":"10470:285:32","nodeType":"YulBlock","src":"10470:285:32","statements":[{"nativeSrc":"10480:53:32","nodeType":"YulVariableDeclaration","src":"10480:53:32","value":{"arguments":[{"name":"value","nativeSrc":"10527:5:32","nodeType":"YulIdentifier","src":"10527:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"10494:32:32","nodeType":"YulIdentifier","src":"10494:32:32"},"nativeSrc":"10494:39:32","nodeType":"YulFunctionCall","src":"10494:39:32"},"variables":[{"name":"length","nativeSrc":"10484:6:32","nodeType":"YulTypedName","src":"10484:6:32","type":""}]},{"nativeSrc":"10542:78:32","nodeType":"YulAssignment","src":"10542:78:32","value":{"arguments":[{"name":"pos","nativeSrc":"10608:3:32","nodeType":"YulIdentifier","src":"10608:3:32"},{"name":"length","nativeSrc":"10613:6:32","nodeType":"YulIdentifier","src":"10613:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10549:58:32","nodeType":"YulIdentifier","src":"10549:58:32"},"nativeSrc":"10549:71:32","nodeType":"YulFunctionCall","src":"10549:71:32"},"variableNames":[{"name":"pos","nativeSrc":"10542:3:32","nodeType":"YulIdentifier","src":"10542:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10668:5:32","nodeType":"YulIdentifier","src":"10668:5:32"},{"kind":"number","nativeSrc":"10675:4:32","nodeType":"YulLiteral","src":"10675:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10664:3:32","nodeType":"YulIdentifier","src":"10664:3:32"},"nativeSrc":"10664:16:32","nodeType":"YulFunctionCall","src":"10664:16:32"},{"name":"pos","nativeSrc":"10682:3:32","nodeType":"YulIdentifier","src":"10682:3:32"},{"name":"length","nativeSrc":"10687:6:32","nodeType":"YulIdentifier","src":"10687:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10629:34:32","nodeType":"YulIdentifier","src":"10629:34:32"},"nativeSrc":"10629:65:32","nodeType":"YulFunctionCall","src":"10629:65:32"},"nativeSrc":"10629:65:32","nodeType":"YulExpressionStatement","src":"10629:65:32"},{"nativeSrc":"10703:46:32","nodeType":"YulAssignment","src":"10703:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"10714:3:32","nodeType":"YulIdentifier","src":"10714:3:32"},{"arguments":[{"name":"length","nativeSrc":"10741:6:32","nodeType":"YulIdentifier","src":"10741:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10719:21:32","nodeType":"YulIdentifier","src":"10719:21:32"},"nativeSrc":"10719:29:32","nodeType":"YulFunctionCall","src":"10719:29:32"}],"functionName":{"name":"add","nativeSrc":"10710:3:32","nodeType":"YulIdentifier","src":"10710:3:32"},"nativeSrc":"10710:39:32","nodeType":"YulFunctionCall","src":"10710:39:32"},"variableNames":[{"name":"end","nativeSrc":"10703:3:32","nodeType":"YulIdentifier","src":"10703:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10378:377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10451:5:32","nodeType":"YulTypedName","src":"10451:5:32","type":""},{"name":"pos","nativeSrc":"10458:3:32","nodeType":"YulTypedName","src":"10458:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10466:3:32","nodeType":"YulTypedName","src":"10466:3:32","type":""}],"src":"10378:377:32"},{"body":{"nativeSrc":"10879:195:32","nodeType":"YulBlock","src":"10879:195:32","statements":[{"nativeSrc":"10889:26:32","nodeType":"YulAssignment","src":"10889:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"10901:9:32","nodeType":"YulIdentifier","src":"10901:9:32"},{"kind":"number","nativeSrc":"10912:2:32","nodeType":"YulLiteral","src":"10912:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10897:3:32","nodeType":"YulIdentifier","src":"10897:3:32"},"nativeSrc":"10897:18:32","nodeType":"YulFunctionCall","src":"10897:18:32"},"variableNames":[{"name":"tail","nativeSrc":"10889:4:32","nodeType":"YulIdentifier","src":"10889:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10936:9:32","nodeType":"YulIdentifier","src":"10936:9:32"},{"kind":"number","nativeSrc":"10947:1:32","nodeType":"YulLiteral","src":"10947:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10932:3:32","nodeType":"YulIdentifier","src":"10932:3:32"},"nativeSrc":"10932:17:32","nodeType":"YulFunctionCall","src":"10932:17:32"},{"arguments":[{"name":"tail","nativeSrc":"10955:4:32","nodeType":"YulIdentifier","src":"10955:4:32"},{"name":"headStart","nativeSrc":"10961:9:32","nodeType":"YulIdentifier","src":"10961:9:32"}],"functionName":{"name":"sub","nativeSrc":"10951:3:32","nodeType":"YulIdentifier","src":"10951:3:32"},"nativeSrc":"10951:20:32","nodeType":"YulFunctionCall","src":"10951:20:32"}],"functionName":{"name":"mstore","nativeSrc":"10925:6:32","nodeType":"YulIdentifier","src":"10925:6:32"},"nativeSrc":"10925:47:32","nodeType":"YulFunctionCall","src":"10925:47:32"},"nativeSrc":"10925:47:32","nodeType":"YulExpressionStatement","src":"10925:47:32"},{"nativeSrc":"10981:86:32","nodeType":"YulAssignment","src":"10981:86:32","value":{"arguments":[{"name":"value0","nativeSrc":"11053:6:32","nodeType":"YulIdentifier","src":"11053:6:32"},{"name":"tail","nativeSrc":"11062:4:32","nodeType":"YulIdentifier","src":"11062:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10989:63:32","nodeType":"YulIdentifier","src":"10989:63:32"},"nativeSrc":"10989:78:32","nodeType":"YulFunctionCall","src":"10989:78:32"},"variableNames":[{"name":"tail","nativeSrc":"10981:4:32","nodeType":"YulIdentifier","src":"10981:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10761:313:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10851:9:32","nodeType":"YulTypedName","src":"10851:9:32","type":""},{"name":"value0","nativeSrc":"10863:6:32","nodeType":"YulTypedName","src":"10863:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10874:4:32","nodeType":"YulTypedName","src":"10874:4:32","type":""}],"src":"10761:313:32"},{"body":{"nativeSrc":"11138:40:32","nodeType":"YulBlock","src":"11138:40:32","statements":[{"nativeSrc":"11149:22:32","nodeType":"YulAssignment","src":"11149:22:32","value":{"arguments":[{"name":"value","nativeSrc":"11165:5:32","nodeType":"YulIdentifier","src":"11165:5:32"}],"functionName":{"name":"mload","nativeSrc":"11159:5:32","nodeType":"YulIdentifier","src":"11159:5:32"},"nativeSrc":"11159:12:32","nodeType":"YulFunctionCall","src":"11159:12:32"},"variableNames":[{"name":"length","nativeSrc":"11149:6:32","nodeType":"YulIdentifier","src":"11149:6:32"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11080:98:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11121:5:32","nodeType":"YulTypedName","src":"11121:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11131:6:32","nodeType":"YulTypedName","src":"11131:6:32","type":""}],"src":"11080:98:32"},{"body":{"nativeSrc":"11240:60:32","nodeType":"YulBlock","src":"11240:60:32","statements":[{"nativeSrc":"11250:11:32","nodeType":"YulAssignment","src":"11250:11:32","value":{"name":"ptr","nativeSrc":"11258:3:32","nodeType":"YulIdentifier","src":"11258:3:32"},"variableNames":[{"name":"data","nativeSrc":"11250:4:32","nodeType":"YulIdentifier","src":"11250:4:32"}]},{"nativeSrc":"11271:22:32","nodeType":"YulAssignment","src":"11271:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"11283:3:32","nodeType":"YulIdentifier","src":"11283:3:32"},{"kind":"number","nativeSrc":"11288:4:32","nodeType":"YulLiteral","src":"11288:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11279:3:32","nodeType":"YulIdentifier","src":"11279:3:32"},"nativeSrc":"11279:14:32","nodeType":"YulFunctionCall","src":"11279:14:32"},"variableNames":[{"name":"data","nativeSrc":"11271:4:32","nodeType":"YulIdentifier","src":"11271:4:32"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"11184:116:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11227:3:32","nodeType":"YulTypedName","src":"11227:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"11235:4:32","nodeType":"YulTypedName","src":"11235:4:32","type":""}],"src":"11184:116:32"},{"body":{"nativeSrc":"11361:99:32","nodeType":"YulBlock","src":"11361:99:32","statements":[{"nativeSrc":"11372:42:32","nodeType":"YulVariableDeclaration","src":"11372:42:32","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"11409:3:32","nodeType":"YulIdentifier","src":"11409:3:32"}],"functionName":{"name":"mload","nativeSrc":"11403:5:32","nodeType":"YulIdentifier","src":"11403:5:32"},"nativeSrc":"11403:10:32","nodeType":"YulFunctionCall","src":"11403:10:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"11385:17:32","nodeType":"YulIdentifier","src":"11385:17:32"},"nativeSrc":"11385:29:32","nodeType":"YulFunctionCall","src":"11385:29:32"},"variables":[{"name":"value","nativeSrc":"11376:5:32","nodeType":"YulTypedName","src":"11376:5:32","type":""}]},{"nativeSrc":"11424:29:32","nodeType":"YulAssignment","src":"11424:29:32","value":{"name":"value","nativeSrc":"11448:5:32","nodeType":"YulIdentifier","src":"11448:5:32"},"variableNames":[{"name":"returnValue","nativeSrc":"11424:11:32","nodeType":"YulIdentifier","src":"11424:11:32"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"11306:154:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11341:3:32","nodeType":"YulTypedName","src":"11341:3:32","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"11349:11:32","nodeType":"YulTypedName","src":"11349:11:32","type":""}],"src":"11306:154:32"},{"body":{"nativeSrc":"11556:504:32","nodeType":"YulBlock","src":"11556:504:32","statements":[{"nativeSrc":"11567:52:32","nodeType":"YulVariableDeclaration","src":"11567:52:32","value":{"arguments":[{"name":"array","nativeSrc":"11613:5:32","nodeType":"YulIdentifier","src":"11613:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11581:31:32","nodeType":"YulIdentifier","src":"11581:31:32"},"nativeSrc":"11581:38:32","nodeType":"YulFunctionCall","src":"11581:38:32"},"variables":[{"name":"length","nativeSrc":"11571:6:32","nodeType":"YulTypedName","src":"11571:6:32","type":""}]},{"nativeSrc":"11628:21:32","nodeType":"YulVariableDeclaration","src":"11628:21:32","value":{"name":"array","nativeSrc":"11644:5:32","nodeType":"YulIdentifier","src":"11644:5:32"},"variables":[{"name":"dataArea","nativeSrc":"11632:8:32","nodeType":"YulTypedName","src":"11632:8:32","type":""}]},{"nativeSrc":"11659:52:32","nodeType":"YulAssignment","src":"11659:52:32","value":{"arguments":[{"name":"array","nativeSrc":"11705:5:32","nodeType":"YulIdentifier","src":"11705:5:32"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"11671:33:32","nodeType":"YulIdentifier","src":"11671:33:32"},"nativeSrc":"11671:40:32","nodeType":"YulFunctionCall","src":"11671:40:32"},"variableNames":[{"name":"dataArea","nativeSrc":"11659:8:32","nodeType":"YulIdentifier","src":"11659:8:32"}]},{"nativeSrc":"11721:44:32","nodeType":"YulAssignment","src":"11721:44:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"11756:8:32","nodeType":"YulIdentifier","src":"11756:8:32"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"11730:25:32","nodeType":"YulIdentifier","src":"11730:25:32"},"nativeSrc":"11730:35:32","nodeType":"YulFunctionCall","src":"11730:35:32"},"variableNames":[{"name":"value","nativeSrc":"11721:5:32","nodeType":"YulIdentifier","src":"11721:5:32"}]},{"body":{"nativeSrc":"11793:260:32","nodeType":"YulBlock","src":"11793:260:32","statements":[{"nativeSrc":"11807:236:32","nodeType":"YulAssignment","src":"11807:236:32","value":{"arguments":[{"name":"value","nativeSrc":"11837:5:32","nodeType":"YulIdentifier","src":"11837:5:32"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11904:1:32","nodeType":"YulLiteral","src":"11904:1:32","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"11911:2:32","nodeType":"YulLiteral","src":"11911:2:32","type":"","value":"32"},{"name":"length","nativeSrc":"11915:6:32","nodeType":"YulIdentifier","src":"11915:6:32"}],"functionName":{"name":"sub","nativeSrc":"11907:3:32","nodeType":"YulIdentifier","src":"11907:3:32"},"nativeSrc":"11907:15:32","nodeType":"YulFunctionCall","src":"11907:15:32"}],"functionName":{"name":"mul","nativeSrc":"11900:3:32","nodeType":"YulIdentifier","src":"11900:3:32"},"nativeSrc":"11900:23:32","nodeType":"YulFunctionCall","src":"11900:23:32"},{"kind":"number","nativeSrc":"11945:66:32","nodeType":"YulLiteral","src":"11945:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"11860:18:32","nodeType":"YulIdentifier","src":"11860:18:32"},"nativeSrc":"11860:169:32","nodeType":"YulFunctionCall","src":"11860:169:32"}],"functionName":{"name":"and","nativeSrc":"11816:3:32","nodeType":"YulIdentifier","src":"11816:3:32"},"nativeSrc":"11816:227:32","nodeType":"YulFunctionCall","src":"11816:227:32"},"variableNames":[{"name":"value","nativeSrc":"11807:5:32","nodeType":"YulIdentifier","src":"11807:5:32"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"11781:6:32","nodeType":"YulIdentifier","src":"11781:6:32"},{"kind":"number","nativeSrc":"11789:2:32","nodeType":"YulLiteral","src":"11789:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11778:2:32","nodeType":"YulIdentifier","src":"11778:2:32"},"nativeSrc":"11778:14:32","nodeType":"YulFunctionCall","src":"11778:14:32"},"nativeSrc":"11775:278:32","nodeType":"YulIf","src":"11775:278:32"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"11466:594:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"11540:5:32","nodeType":"YulTypedName","src":"11540:5:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11550:5:32","nodeType":"YulTypedName","src":"11550:5:32","type":""}],"src":"11466:594:32"},{"body":{"nativeSrc":"12110:147:32","nodeType":"YulBlock","src":"12110:147:32","statements":[{"nativeSrc":"12120:25:32","nodeType":"YulAssignment","src":"12120:25:32","value":{"arguments":[{"name":"x","nativeSrc":"12143:1:32","nodeType":"YulIdentifier","src":"12143:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12125:17:32","nodeType":"YulIdentifier","src":"12125:17:32"},"nativeSrc":"12125:20:32","nodeType":"YulFunctionCall","src":"12125:20:32"},"variableNames":[{"name":"x","nativeSrc":"12120:1:32","nodeType":"YulIdentifier","src":"12120:1:32"}]},{"nativeSrc":"12154:25:32","nodeType":"YulAssignment","src":"12154:25:32","value":{"arguments":[{"name":"y","nativeSrc":"12177:1:32","nodeType":"YulIdentifier","src":"12177:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12159:17:32","nodeType":"YulIdentifier","src":"12159:17:32"},"nativeSrc":"12159:20:32","nodeType":"YulFunctionCall","src":"12159:20:32"},"variableNames":[{"name":"y","nativeSrc":"12154:1:32","nodeType":"YulIdentifier","src":"12154:1:32"}]},{"nativeSrc":"12188:16:32","nodeType":"YulAssignment","src":"12188:16:32","value":{"arguments":[{"name":"x","nativeSrc":"12199:1:32","nodeType":"YulIdentifier","src":"12199:1:32"},{"name":"y","nativeSrc":"12202:1:32","nodeType":"YulIdentifier","src":"12202:1:32"}],"functionName":{"name":"add","nativeSrc":"12195:3:32","nodeType":"YulIdentifier","src":"12195:3:32"},"nativeSrc":"12195:9:32","nodeType":"YulFunctionCall","src":"12195:9:32"},"variableNames":[{"name":"sum","nativeSrc":"12188:3:32","nodeType":"YulIdentifier","src":"12188:3:32"}]},{"body":{"nativeSrc":"12228:22:32","nodeType":"YulBlock","src":"12228:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12230:16:32","nodeType":"YulIdentifier","src":"12230:16:32"},"nativeSrc":"12230:18:32","nodeType":"YulFunctionCall","src":"12230:18:32"},"nativeSrc":"12230:18:32","nodeType":"YulExpressionStatement","src":"12230:18:32"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"12220:1:32","nodeType":"YulIdentifier","src":"12220:1:32"},{"name":"sum","nativeSrc":"12223:3:32","nodeType":"YulIdentifier","src":"12223:3:32"}],"functionName":{"name":"gt","nativeSrc":"12217:2:32","nodeType":"YulIdentifier","src":"12217:2:32"},"nativeSrc":"12217:10:32","nodeType":"YulFunctionCall","src":"12217:10:32"},"nativeSrc":"12214:36:32","nodeType":"YulIf","src":"12214:36:32"}]},"name":"checked_add_t_uint256","nativeSrc":"12066:191:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12097:1:32","nodeType":"YulTypedName","src":"12097:1:32","type":""},{"name":"y","nativeSrc":"12100:1:32","nodeType":"YulTypedName","src":"12100:1:32","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"12106:3:32","nodeType":"YulTypedName","src":"12106:3:32","type":""}],"src":"12066:191:32"},{"body":{"nativeSrc":"12417:288:32","nodeType":"YulBlock","src":"12417:288:32","statements":[{"nativeSrc":"12427:26:32","nodeType":"YulAssignment","src":"12427:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"12439:9:32","nodeType":"YulIdentifier","src":"12439:9:32"},{"kind":"number","nativeSrc":"12450:2:32","nodeType":"YulLiteral","src":"12450:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12435:3:32","nodeType":"YulIdentifier","src":"12435:3:32"},"nativeSrc":"12435:18:32","nodeType":"YulFunctionCall","src":"12435:18:32"},"variableNames":[{"name":"tail","nativeSrc":"12427:4:32","nodeType":"YulIdentifier","src":"12427:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12507:6:32","nodeType":"YulIdentifier","src":"12507:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12520:9:32","nodeType":"YulIdentifier","src":"12520:9:32"},{"kind":"number","nativeSrc":"12531:1:32","nodeType":"YulLiteral","src":"12531:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12516:3:32","nodeType":"YulIdentifier","src":"12516:3:32"},"nativeSrc":"12516:17:32","nodeType":"YulFunctionCall","src":"12516:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12463:43:32","nodeType":"YulIdentifier","src":"12463:43:32"},"nativeSrc":"12463:71:32","nodeType":"YulFunctionCall","src":"12463:71:32"},"nativeSrc":"12463:71:32","nodeType":"YulExpressionStatement","src":"12463:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12588:6:32","nodeType":"YulIdentifier","src":"12588:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12601:9:32","nodeType":"YulIdentifier","src":"12601:9:32"},{"kind":"number","nativeSrc":"12612:2:32","nodeType":"YulLiteral","src":"12612:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12597:3:32","nodeType":"YulIdentifier","src":"12597:3:32"},"nativeSrc":"12597:18:32","nodeType":"YulFunctionCall","src":"12597:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12544:43:32","nodeType":"YulIdentifier","src":"12544:43:32"},"nativeSrc":"12544:72:32","nodeType":"YulFunctionCall","src":"12544:72:32"},"nativeSrc":"12544:72:32","nodeType":"YulExpressionStatement","src":"12544:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12670:6:32","nodeType":"YulIdentifier","src":"12670:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12683:9:32","nodeType":"YulIdentifier","src":"12683:9:32"},{"kind":"number","nativeSrc":"12694:2:32","nodeType":"YulLiteral","src":"12694:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12679:3:32","nodeType":"YulIdentifier","src":"12679:3:32"},"nativeSrc":"12679:18:32","nodeType":"YulFunctionCall","src":"12679:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12626:43:32","nodeType":"YulIdentifier","src":"12626:43:32"},"nativeSrc":"12626:72:32","nodeType":"YulFunctionCall","src":"12626:72:32"},"nativeSrc":"12626:72:32","nodeType":"YulExpressionStatement","src":"12626:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12263:442:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12373:9:32","nodeType":"YulTypedName","src":"12373:9:32","type":""},{"name":"value2","nativeSrc":"12385:6:32","nodeType":"YulTypedName","src":"12385:6:32","type":""},{"name":"value1","nativeSrc":"12393:6:32","nodeType":"YulTypedName","src":"12393:6:32","type":""},{"name":"value0","nativeSrc":"12401:6:32","nodeType":"YulTypedName","src":"12401:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12412:4:32","nodeType":"YulTypedName","src":"12412:4:32","type":""}],"src":"12263:442:32"},{"body":{"nativeSrc":"12809:124:32","nodeType":"YulBlock","src":"12809:124:32","statements":[{"nativeSrc":"12819:26:32","nodeType":"YulAssignment","src":"12819:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"12831:9:32","nodeType":"YulIdentifier","src":"12831:9:32"},{"kind":"number","nativeSrc":"12842:2:32","nodeType":"YulLiteral","src":"12842:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12827:3:32","nodeType":"YulIdentifier","src":"12827:3:32"},"nativeSrc":"12827:18:32","nodeType":"YulFunctionCall","src":"12827:18:32"},"variableNames":[{"name":"tail","nativeSrc":"12819:4:32","nodeType":"YulIdentifier","src":"12819:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12899:6:32","nodeType":"YulIdentifier","src":"12899:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12912:9:32","nodeType":"YulIdentifier","src":"12912:9:32"},{"kind":"number","nativeSrc":"12923:1:32","nodeType":"YulLiteral","src":"12923:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12908:3:32","nodeType":"YulIdentifier","src":"12908:3:32"},"nativeSrc":"12908:17:32","nodeType":"YulFunctionCall","src":"12908:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12855:43:32","nodeType":"YulIdentifier","src":"12855:43:32"},"nativeSrc":"12855:71:32","nodeType":"YulFunctionCall","src":"12855:71:32"},"nativeSrc":"12855:71:32","nodeType":"YulExpressionStatement","src":"12855:71:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"12711:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12781:9:32","nodeType":"YulTypedName","src":"12781:9:32","type":""},{"name":"value0","nativeSrc":"12793:6:32","nodeType":"YulTypedName","src":"12793:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12804:4:32","nodeType":"YulTypedName","src":"12804:4:32","type":""}],"src":"12711:222:32"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x425353546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x425353546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4253530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFE SWAP2 SWAP1 PUSH3 0xA7F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x110 SWAP2 SWAP1 PUSH3 0xA7F JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x19A SWAP2 SWAP1 PUSH3 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1B4 DUP2 PUSH3 0x2AC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1CB PUSH1 0x6 DUP4 PUSH3 0x372 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x1E9 PUSH1 0x7 DUP3 PUSH3 0x372 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x228 PUSH3 0x3CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2A6 CALLER PUSH3 0x27B PUSH3 0x427 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x289 SWAP2 SWAP1 PUSH3 0xD58 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH3 0x29A SWAP2 SWAP1 PUSH3 0xDA9 JUMP JUMPDEST PUSH3 0x430 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x398 JUMPI PUSH3 0x390 DUP4 PUSH3 0x4BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x3C4 JUMP JUMPDEST DUP3 PUSH3 0x3AA DUP4 PUSH3 0x52A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x3BB SWAP2 SWAP1 PUSH3 0xA7F JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x40C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xE20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4A5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x49C SWAP2 SWAP1 PUSH3 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4B9 PUSH1 0x0 DUP4 DUP4 PUSH3 0x534 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x50D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x504 SWAP2 SWAP1 PUSH3 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x51B SWAP1 PUSH3 0xF62 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x547 DUP4 DUP4 DUP4 PUSH3 0x54C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x55C PUSH3 0x574 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x56F DUP4 DUP4 DUP4 PUSH3 0x5BE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x584 PUSH3 0x7EE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x614 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x607 SWAP2 SWAP1 PUSH3 0xFD2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x6EA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x6A3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x69A SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x735 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x782 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x7E1 SWAP2 SWAP1 PUSH3 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x887 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x89D JUMPI PUSH3 0x89C PUSH3 0x83F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x907 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x8C8 JUMP JUMPDEST PUSH3 0x913 DUP7 DUP4 PUSH3 0x8C8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x960 PUSH3 0x95A PUSH3 0x954 DUP5 PUSH3 0x92B JUMP JUMPDEST PUSH3 0x935 JUMP JUMPDEST PUSH3 0x92B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x97C DUP4 PUSH3 0x93F JUMP JUMPDEST PUSH3 0x994 PUSH3 0x98B DUP3 PUSH3 0x967 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x8D5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x9AB PUSH3 0x99C JUMP JUMPDEST PUSH3 0x9B8 DUP2 DUP5 DUP5 PUSH3 0x971 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9E0 JUMPI PUSH3 0x9D4 PUSH1 0x0 DUP3 PUSH3 0x9A1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x9BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA2F JUMPI PUSH3 0x9F9 DUP2 PUSH3 0x8A3 JUMP JUMPDEST PUSH3 0xA04 DUP5 PUSH3 0x8B8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA14 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA2C PUSH3 0xA23 DUP6 PUSH3 0x8B8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x9BD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA54 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA34 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA6F DUP4 DUP4 PUSH3 0xA41 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA8A DUP3 PUSH3 0x805 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xAA6 JUMPI PUSH3 0xAA5 PUSH3 0x810 JUMP JUMPDEST JUMPDEST PUSH3 0xAB2 DUP3 SLOAD PUSH3 0x86E JUMP JUMPDEST PUSH3 0xABF DUP3 DUP3 DUP6 PUSH3 0x9E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xAF7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xAE2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xAEE DUP6 DUP3 PUSH3 0xA61 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB5E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xB07 DUP7 PUSH3 0x8A3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB31 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB0A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB51 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB4D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA41 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB93 DUP3 PUSH3 0xB66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBA5 DUP2 PUSH3 0xB86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xB9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xC56 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xC2E JUMPI PUSH3 0xC2D PUSH3 0xBC8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xC3E JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xC4E DUP6 PUSH3 0xBF7 JUMP JUMPDEST SWAP5 POP PUSH3 0xC0E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xC71 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xD44 JUMP JUMPDEST DUP2 PUSH3 0xC81 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xD44 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xC9A JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xCA5 JUMPI PUSH3 0xCDB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xD44 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xCBA JUMPI PUSH3 0xCB9 PUSH3 0xBC8 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xCD4 JUMPI PUSH3 0xCD3 PUSH3 0xBC8 JUMP JUMPDEST JUMPDEST POP PUSH3 0xD44 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xD15 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xD0F JUMPI PUSH3 0xD0E PUSH3 0xBC8 JUMP JUMPDEST JUMPDEST PUSH3 0xD44 JUMP JUMPDEST PUSH3 0xD24 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xC04 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xD3E JUMPI PUSH3 0xD3D PUSH3 0xBC8 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD65 DUP3 PUSH3 0x92B JUMP JUMPDEST SWAP2 POP PUSH3 0xD72 DUP4 PUSH3 0xD4B JUMP JUMPDEST SWAP3 POP PUSH3 0xDA1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xC5F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xDB6 DUP3 PUSH3 0x92B JUMP JUMPDEST SWAP2 POP PUSH3 0xDC3 DUP4 PUSH3 0x92B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xDD3 DUP2 PUSH3 0x92B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xDED JUMPI PUSH3 0xDEC PUSH3 0xBC8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE09 DUP2 PUSH3 0xDF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xE1A DUP2 PUSH3 0x92B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xE37 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xDFE JUMP JUMPDEST PUSH3 0xE46 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xDFE JUMP JUMPDEST PUSH3 0xE55 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xDFE JUMP JUMPDEST PUSH3 0xE64 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xE0F JUMP JUMPDEST PUSH3 0xE73 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xB9A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xEAE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xE91 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xED8 DUP3 PUSH3 0x805 JUMP JUMPDEST PUSH3 0xEE4 DUP2 DUP6 PUSH3 0xE7D JUMP JUMPDEST SWAP4 POP PUSH3 0xEF6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xE8E JUMP JUMPDEST PUSH3 0xF01 DUP2 PUSH3 0xEBA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xF28 DUP2 DUP5 PUSH3 0xECB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF59 DUP3 MLOAD PUSH3 0xDF4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF6F DUP3 PUSH3 0xF30 JUMP JUMPDEST DUP3 PUSH3 0xF7B DUP5 PUSH3 0xF3B JUMP JUMPDEST SWAP1 POP PUSH3 0xF88 DUP2 PUSH3 0xF4B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xFCB JUMPI PUSH3 0xFC6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x8C8 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFDF DUP3 PUSH3 0x92B JUMP JUMPDEST SWAP2 POP PUSH3 0xFEC DUP4 PUSH3 0x92B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1007 JUMPI PUSH3 0x1006 PUSH3 0xBC8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1024 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xB9A JUMP JUMPDEST PUSH3 0x1033 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xE0F JUMP JUMPDEST PUSH3 0x1042 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xE0F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xE0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x228A PUSH3 0x10C2 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xFDB ADD MSTORE PUSH1 0x0 PUSH2 0xFA0 ADD MSTORE PUSH1 0x0 PUSH2 0x12DB ADD MSTORE PUSH1 0x0 PUSH2 0x12BA ADD MSTORE PUSH1 0x0 PUSH2 0xB84 ADD MSTORE PUSH1 0x0 PUSH2 0xBDA ADD MSTORE PUSH1 0x0 PUSH2 0xC03 ADD MSTORE PUSH2 0x228A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3EB JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x30F JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27F JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x416 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x442 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A4 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH2 0x4B1 DUP2 DUP6 DUP6 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4D1 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH2 0x4DE DUP6 DUP3 DUP6 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x4E9 DUP6 DUP6 DUP6 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x508 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x515 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x51D PUSH2 0xCBE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x527 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x531 DUP3 DUP3 PUSH2 0xD21 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x546 PUSH2 0x540 PUSH2 0x9DE JUMP JUMPDEST DUP3 PUSH2 0xDA3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x5BA PUSH1 0x0 PUSH2 0xE25 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5CE DUP3 PUSH2 0x5C8 PUSH2 0x9DE JUMP JUMPDEST DUP4 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x5D8 DUP3 DUP3 PUSH2 0xDA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E7 DUP3 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x5FE PUSH2 0xF34 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x614 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x61C PUSH2 0xFD2 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x66B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6E3 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x70F SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x731 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x73F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x771 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH2 0x77E DUP2 DUP6 DUP6 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x7CE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x7FD DUP13 PUSH2 0x100D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x813 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x836 DUP3 PUSH2 0x1064 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x846 DUP3 DUP8 DUP8 DUP8 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BA JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP3 SWAP2 SWAP1 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C5 DUP11 DUP11 DUP11 PUSH2 0x9E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x960 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DB DUP2 PUSH2 0xE25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA04 DUP5 DUP5 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA86 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA76 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA85 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x10AE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB70 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB7B DUP4 DUP4 DUP4 PUSH2 0x1285 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBFC JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC29 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC34 JUMP JUMPDEST PUSH2 0xC31 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC3F PUSH2 0x9DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5D PUSH2 0x6AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCBC JUMPI PUSH2 0xC80 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xCC6 PUSH2 0x132B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xD0A PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD93 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1285 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE21 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1285 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3C PUSH2 0x136B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF80 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8D SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFCD PUSH1 0x6 PUSH32 0x0 PUSH2 0x13AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1008 PUSH1 0x7 PUSH32 0x0 PUSH2 0x13AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 PUSH2 0x1071 PUSH2 0xB80 JUMP JUMPDEST DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1090 DUP9 DUP9 DUP9 DUP9 PUSH2 0x149D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10A0 DUP3 DUP3 PUSH2 0x1591 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1120 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1192 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x127F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1290 DUP4 DUP4 DUP4 PUSH2 0x16F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1310 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1333 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x1369 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1373 PUSH2 0x549 JUMP JUMPDEST ISZERO PUSH2 0x13AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x13C9 JUMPI PUSH2 0x13C2 DUP4 PUSH2 0x170D JUMP JUMPDEST SWAP1 POP PUSH2 0x1456 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x13D5 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1401 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x144E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1423 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x144E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1431 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x14DD JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1502 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1524 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1578 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1587 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x15B7 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x16F1 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15D2 JUMPI PUSH2 0x15D1 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1630 JUMPI PUSH2 0x162F PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1642 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1688 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167F SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16AE JUMPI PUSH2 0x16AD PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16F0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x16FD PUSH2 0x136B JUMP JUMPDEST PUSH2 0x1708 DUP4 DUP4 DUP4 PUSH2 0x1781 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x171A DUP4 PUSH2 0x19A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x176B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D3 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17C7 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x185F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1856 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18EF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x193C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1999 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x19ED JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A30 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A58 DUP3 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x1A62 DUP2 DUP6 PUSH2 0x1A01 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x1A7B DUP2 PUSH2 0x1A3C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA0 DUP2 DUP5 PUSH2 0x1A4D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 DUP3 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B05 DUP2 PUSH2 0x1ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1E DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B3B DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B66 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B77 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B96 DUP2 PUSH2 0x1B81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BC0 DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BFA JUMPI PUSH2 0x1BF9 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C08 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C19 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C2A DUP7 DUP3 DUP8 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C4A DUP2 PUSH2 0x1C34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7E DUP2 PUSH2 0x1C6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB5 JUMPI PUSH2 0x1CB4 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC3 DUP5 DUP3 DUP6 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2E DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D3D DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D78 DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8A DUP4 DUP4 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAE DUP3 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x1DB8 DUP2 DUP6 PUSH2 0x1D4E JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC3 DUP4 PUSH2 0x1D5F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP2 MLOAD PUSH2 0x1DDB DUP9 DUP3 PUSH2 0x1D7E JUMP JUMPDEST SWAP8 POP PUSH2 0x1DE6 DUP4 PUSH2 0x1D96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DC7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1E16 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1D25 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1E28 DUP2 DUP10 PUSH2 0x1A4D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E3C DUP2 DUP9 PUSH2 0x1A4D JUMP JUMPDEST SWAP1 POP PUSH2 0x1E4B PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x1E58 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x1E65 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1C75 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 DUP5 PUSH2 0x1DA3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E9A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA9 DUP2 PUSH2 0x1C34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EC6 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ED5 DUP2 PUSH2 0x1C6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF2 DUP2 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1F17 JUMPI PUSH2 0x1F16 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F25 DUP11 DUP3 DUP12 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1F36 DUP11 DUP3 DUP12 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1F47 DUP11 DUP3 DUP12 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1F58 DUP11 DUP3 DUP12 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1F69 DUP11 DUP3 DUP12 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1F7A DUP11 DUP3 DUP12 ADD PUSH2 0x1EE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1F8B DUP11 DUP3 DUP12 ADD PUSH2 0x1EE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB1 JUMPI PUSH2 0x1FB0 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FBF DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2021 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2034 JUMPI PUSH2 0x2033 PUSH2 0x1FDA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x207E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x208B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x2098 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x20A5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x20B2 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x20BF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1BB7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20DF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x20EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D34 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2108 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x2115 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x2122 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x213F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x214C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x2159 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x2166 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x2173 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D34 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2192 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x219F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C41 JUMP JUMPDEST PUSH2 0x21AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x21B9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C75 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x222B DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x2236 DUP4 PUSH2 0x1B0B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x224E JUMPI PUSH2 0x224D PUSH2 0x21F1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xA83E9C01 PUSH26 0x3404C724CC582D9859D261C34D50A75D9A4853621F0492ABB6D7 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"406:764:30:-:0;;;492:182;;;;;;;;;;1574:52:11;;;;;;;;;;;;;;;;;1613:4;3328:431:23;;;;;;;;;;;;;;;;;557:10:30;1896:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1241:5:18;1231:7;;:15;;;;;;;;;;;;;;;;;;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:23;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:11;618:48:30::3;624:10;655;:8;;;:10;;:::i;:::-;649:2;:16;;;;:::i;:::-;636:10;:29;;;;:::i;:::-;618:5;;;:48;;:::i;:::-;406:764:::0;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2914:340:19:-;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:23:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3002:82:7:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1708:286:19:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:20:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;997:170:30:-;1129:30;1143:4;1149:2;1153:5;1129:13;;;:30;;:::i;:::-;997:170;;;:::o;1112:145:10:-;1474:19:18;:17;;;:19;;:::i;:::-;1220:30:10::1;1234:4;1240:2;1244:5;1220:13;;;:30;;:::i;:::-;1112:145:::0;;;:::o;2002:128:18:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6271:1107:7:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1850:84:18:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;7:99:32:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:102;6048:8;6095:5;6092:1;6088:13;6067:34;;6006:102;;;:::o;6114:848::-;6175:5;6182:4;6206:6;6197:15;;6230:5;6221:14;;6244:712;6265:1;6255:8;6252:15;6244:712;;;6360:4;6355:3;6351:14;6345:4;6342:24;6339:50;;;6369:18;;:::i;:::-;6339:50;6419:1;6409:8;6405:16;6402:451;;;6834:4;6827:5;6823:16;6814:25;;6402:451;6884:4;6878;6874:15;6866:23;;6914:32;6937:8;6914:32;:::i;:::-;6902:44;;6244:712;;;6114:848;;;;;;;:::o;6968:1073::-;7022:5;7213:8;7203:40;;7234:1;7225:10;;7236:5;;7203:40;7262:4;7252:36;;7279:1;7270:10;;7281:5;;7252:36;7348:4;7396:1;7391:27;;;;7432:1;7427:191;;;;7341:277;;7391:27;7409:1;7400:10;;7411:5;;;7427:191;7472:3;7462:8;7459:17;7456:43;;;7479:18;;:::i;:::-;7456:43;7528:8;7525:1;7521:16;7512:25;;7563:3;7556:5;7553:14;7550:40;;;7570:18;;:::i;:::-;7550:40;7603:5;;;7341:277;;7727:2;7717:8;7714:16;7708:3;7702:4;7699:13;7695:36;7677:2;7667:8;7664:16;7659:2;7653:4;7650:12;7646:35;7630:111;7627:246;;;7783:8;7777:4;7773:19;7764:28;;7818:3;7811:5;7808:14;7805:40;;;7825:18;;:::i;:::-;7805:40;7858:5;;7627:246;7898:42;7936:3;7926:8;7920:4;7917:1;7898:42;:::i;:::-;7883:57;;;;7972:4;7967:3;7963:14;7956:5;7953:25;7950:51;;;7981:18;;:::i;:::-;7950:51;8030:4;8023:5;8019:16;8010:25;;6968:1073;;;;;;:::o;8047:86::-;8082:7;8122:4;8115:5;8111:16;8100:27;;8047:86;;;:::o;8139:281::-;8197:5;8221:23;8239:4;8221:23;:::i;:::-;8213:31;;8265:25;8281:8;8265:25;:::i;:::-;8253:37;;8309:104;8346:66;8336:8;8330:4;8309:104;:::i;:::-;8300:113;;8139:281;;;;:::o;8426:410::-;8466:7;8489:20;8507:1;8489:20;:::i;:::-;8484:25;;8523:20;8541:1;8523:20;:::i;:::-;8518:25;;8578:1;8575;8571:9;8600:30;8618:11;8600:30;:::i;:::-;8589:41;;8779:1;8770:7;8766:15;8763:1;8760:22;8740:1;8733:9;8713:83;8690:139;;8809:18;;:::i;:::-;8690:139;8474:362;8426:410;;;;:::o;8842:77::-;8879:7;8908:5;8897:16;;8842:77;;;:::o;8925:118::-;9012:24;9030:5;9012:24;:::i;:::-;9007:3;9000:37;8925:118;;:::o;9049:::-;9136:24;9154:5;9136:24;:::i;:::-;9131:3;9124:37;9049:118;;:::o;9173:664::-;9378:4;9416:3;9405:9;9401:19;9393:27;;9430:71;9498:1;9487:9;9483:17;9474:6;9430:71;:::i;:::-;9511:72;9579:2;9568:9;9564:18;9555:6;9511:72;:::i;:::-;9593;9661:2;9650:9;9646:18;9637:6;9593:72;:::i;:::-;9675;9743:2;9732:9;9728:18;9719:6;9675:72;:::i;:::-;9757:73;9825:3;9814:9;9810:19;9801:6;9757:73;:::i;:::-;9173:664;;;;;;;;:::o;9843:169::-;9927:11;9961:6;9956:3;9949:19;10001:4;9996:3;9992:14;9977:29;;9843:169;;;;:::o;10018:246::-;10099:1;10109:113;10123:6;10120:1;10117:13;10109:113;;;10208:1;10203:3;10199:11;10193:18;10189:1;10184:3;10180:11;10173:39;10145:2;10142:1;10138:10;10133:15;;10109:113;;;10256:1;10247:6;10242:3;10238:16;10231:27;10080:184;10018:246;;;:::o;10270:102::-;10311:6;10362:2;10358:7;10353:2;10346:5;10342:14;10338:28;10328:38;;10270:102;;;:::o;10378:377::-;10466:3;10494:39;10527:5;10494:39;:::i;:::-;10549:71;10613:6;10608:3;10549:71;:::i;:::-;10542:78;;10629:65;10687:6;10682:3;10675:4;10668:5;10664:16;10629:65;:::i;:::-;10719:29;10741:6;10719:29;:::i;:::-;10714:3;10710:39;10703:46;;10470:285;10378:377;;;;:::o;10761:313::-;10874:4;10912:2;10901:9;10897:18;10889:26;;10961:9;10955:4;10951:20;10947:1;10936:9;10932:17;10925:47;10989:78;11062:4;11053:6;10989:78;:::i;:::-;10981:86;;10761:313;;;;:::o;11080:98::-;11131:6;11165:5;11159:12;11149:22;;11080:98;;;:::o;11184:116::-;11235:4;11258:3;11250:11;;11288:4;11283:3;11279:14;11271:22;;11184:116;;;:::o;11306:154::-;11349:11;11385:29;11409:3;11403:10;11385:29;:::i;:::-;11448:5;11424:29;;11361:99;11306:154;;;:::o;11466:594::-;11550:5;11581:38;11613:5;11581:38;:::i;:::-;11644:5;11671:40;11705:5;11671:40;:::i;:::-;11659:52;;11730:35;11756:8;11730:35;:::i;:::-;11721:44;;11789:2;11781:6;11778:14;11775:278;;;11860:169;11945:66;11915:6;11911:2;11907:15;11904:1;11900:23;11860:169;:::i;:::-;11837:5;11816:227;11807:236;;11775:278;11556:504;;11466:594;;;:::o;12066:191::-;12106:3;12125:20;12143:1;12125:20;:::i;:::-;12120:25;;12159:20;12177:1;12159:20;:::i;:::-;12154:25;;12202:1;12199;12195:9;12188:16;;12223:3;12220:1;12217:10;12214:36;;;12230:18;;:::i;:::-;12214:36;12066:191;;;;:::o;12263:442::-;12412:4;12450:2;12439:9;12435:18;12427:26;;12463:71;12531:1;12520:9;12516:17;12507:6;12463:71;:::i;:::-;12544:72;12612:2;12601:9;12597:18;12588:6;12544:72;:::i;:::-;12626;12694:2;12683:9;12679:18;12670:6;12626:72;:::i;:::-;12263:442;;;;;;:::o;12711:222::-;12804:4;12842:2;12831:9;12827:18;12819:26;;12855:71;12923:1;12912:9;12908:17;12899:6;12855:71;:::i;:::-;12711:222;;;;:::o;406:764:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1682":{"entryPoint":1278,"id":1682,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3647":{"entryPoint":3991,"id":3647,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3659":{"entryPoint":4050,"id":3659,"parameterSlots":0,"returnSlots":1},"@_approve_1262":{"entryPoint":2534,"id":1262,"parameterSlots":3,"returnSlots":0},"@_approve_1322":{"entryPoint":4270,"id":1322,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3577":{"entryPoint":4757,"id":3577,"parameterSlots":0,"returnSlots":1},"@_burn_1244":{"entryPoint":3491,"id":1244,"parameterSlots":2,"returnSlots":0},"@_checkOwner_463":{"entryPoint":3127,"id":463,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3556":{"entryPoint":2944,"id":3556,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3593":{"entryPoint":4196,"id":3593,"parameterSlots":1,"returnSlots":1},"@_mint_1211":{"entryPoint":3361,"id":1211,"parameterSlots":2,"returnSlots":0},"@_msgSender_2300":{"entryPoint":2526,"id":2300,"parameterSlots":0,"returnSlots":1},"@_pause_2486":{"entryPoint":3892,"id":2486,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_2457":{"entryPoint":4971,"id":2457,"parameterSlots":0,"returnSlots":0},"@_requirePaused_2470":{"entryPoint":4907,"id":2470,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1370":{"entryPoint":2552,"id":1370,"parameterSlots":3,"returnSlots":0},"@_throwError_3432":{"entryPoint":5521,"id":3432,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":3621,"id":525,"parameterSlots":1,"returnSlots":0},"@_transfer_1101":{"entryPoint":2700,"id":1101,"parameterSlots":3,"returnSlots":0},"@_unpause_2502":{"entryPoint":3262,"id":2502,"parameterSlots":0,"returnSlots":0},"@_update_1178":{"entryPoint":6017,"id":1178,"parameterSlots":3,"returnSlots":0},"@_update_1528":{"entryPoint":5877,"id":1528,"parameterSlots":3,"returnSlots":0},"@_update_5639":{"entryPoint":4741,"id":5639,"parameterSlots":3,"returnSlots":0},"@_useNonce_2360":{"entryPoint":4109,"id":2360,"parameterSlots":1,"returnSlots":1},"@allowance_998":{"entryPoint":2257,"id":998,"parameterSlots":2,"returnSlots":1},"@approve_1022":{"entryPoint":1177,"id":1022,"parameterSlots":2,"returnSlots":1},"@balanceOf_957":{"entryPoint":1376,"id":957,"parameterSlots":1,"returnSlots":1},"@burnFrom_1494":{"entryPoint":1468,"id":1494,"parameterSlots":2,"returnSlots":0},"@burn_1473":{"entryPoint":1333,"id":1473,"parameterSlots":1,"returnSlots":0},"@byteLength_2621":{"entryPoint":6566,"id":2621,"parameterSlots":1,"returnSlots":1},"@decimals_935":{"entryPoint":1269,"id":935,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3635":{"entryPoint":1536,"id":3635,"parameterSlots":0,"returnSlots":7},"@mint_5618":{"entryPoint":1311,"id":5618,"parameterSlots":2,"returnSlots":0},"@name_917":{"entryPoint":1031,"id":917,"parameterSlots":0,"returnSlots":1},"@nonces_1672":{"entryPoint":1500,"id":1672,"parameterSlots":1,"returnSlots":1},"@nonces_2345":{"entryPoint":3819,"id":2345,"parameterSlots":1,"returnSlots":1},"@owner_446":{"entryPoint":1706,"id":446,"parameterSlots":0,"returnSlots":1},"@pause_5594":{"entryPoint":1518,"id":5594,"parameterSlots":0,"returnSlots":0},"@paused_2445":{"entryPoint":1353,"id":2445,"parameterSlots":0,"returnSlots":1},"@permit_1655":{"entryPoint":1929,"id":1655,"parameterSlots":7,"returnSlots":0},"@recover_3383":{"entryPoint":4222,"id":3383,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":1448,"id":477,"parameterSlots":0,"returnSlots":0},"@symbol_926":{"entryPoint":1748,"id":926,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2688":{"entryPoint":5036,"id":2688,"parameterSlots":2,"returnSlots":1},"@toString_2589":{"entryPoint":5901,"id":2589,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3733":{"entryPoint":5212,"id":3733,"parameterSlots":2,"returnSlots":1},"@totalSupply_944":{"entryPoint":1212,"id":944,"parameterSlots":0,"returnSlots":1},"@transferFrom_1054":{"entryPoint":1222,"id":1054,"parameterSlots":3,"returnSlots":1},"@transferOwnership_505":{"entryPoint":2392,"id":505,"parameterSlots":1,"returnSlots":0},"@transfer_981":{"entryPoint":1894,"id":981,"parameterSlots":2,"returnSlots":1},"@tryRecover_3347":{"entryPoint":5277,"id":3347,"parameterSlots":4,"returnSlots":3},"@unpause_5603":{"entryPoint":1293,"id":5603,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":6902,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":7863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7372,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8090,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7137,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7928,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6977,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":7327,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":7550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7476,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7053,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":7461,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7285,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7535,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7095,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7233,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":8394,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8435,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7068,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7681,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":7300,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8297,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":8490,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":8573,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6790,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7110,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":7248,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7519,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7491,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6646,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7574,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7502,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6657,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8736,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6861,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7041,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":7417,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7275,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6829,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6923,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7220,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6674,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8201,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8689,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8642,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8154,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8250,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6824,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6716,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":6879,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7884,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6933,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":7840,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15716:32","nodeType":"YulBlock","src":"0:15716:32","statements":[{"body":{"nativeSrc":"66:40:32","nodeType":"YulBlock","src":"66:40:32","statements":[{"nativeSrc":"77:22:32","nodeType":"YulAssignment","src":"77:22:32","value":{"arguments":[{"name":"value","nativeSrc":"93:5:32","nodeType":"YulIdentifier","src":"93:5:32"}],"functionName":{"name":"mload","nativeSrc":"87:5:32","nodeType":"YulIdentifier","src":"87:5:32"},"nativeSrc":"87:12:32","nodeType":"YulFunctionCall","src":"87:12:32"},"variableNames":[{"name":"length","nativeSrc":"77:6:32","nodeType":"YulIdentifier","src":"77:6:32"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:32","nodeType":"YulTypedName","src":"49:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:32","nodeType":"YulTypedName","src":"59:6:32","type":""}],"src":"7:99:32"},{"body":{"nativeSrc":"208:73:32","nodeType":"YulBlock","src":"208:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:32","nodeType":"YulIdentifier","src":"225:3:32"},{"name":"length","nativeSrc":"230:6:32","nodeType":"YulIdentifier","src":"230:6:32"}],"functionName":{"name":"mstore","nativeSrc":"218:6:32","nodeType":"YulIdentifier","src":"218:6:32"},"nativeSrc":"218:19:32","nodeType":"YulFunctionCall","src":"218:19:32"},"nativeSrc":"218:19:32","nodeType":"YulExpressionStatement","src":"218:19:32"},{"nativeSrc":"246:29:32","nodeType":"YulAssignment","src":"246:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:32","nodeType":"YulIdentifier","src":"265:3:32"},{"kind":"number","nativeSrc":"270:4:32","nodeType":"YulLiteral","src":"270:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:32","nodeType":"YulIdentifier","src":"261:3:32"},"nativeSrc":"261:14:32","nodeType":"YulFunctionCall","src":"261:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:32","nodeType":"YulIdentifier","src":"246:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:32","nodeType":"YulTypedName","src":"180:3:32","type":""},{"name":"length","nativeSrc":"185:6:32","nodeType":"YulTypedName","src":"185:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:32","nodeType":"YulTypedName","src":"196:11:32","type":""}],"src":"112:169:32"},{"body":{"nativeSrc":"349:184:32","nodeType":"YulBlock","src":"349:184:32","statements":[{"nativeSrc":"359:10:32","nodeType":"YulVariableDeclaration","src":"359:10:32","value":{"kind":"number","nativeSrc":"368:1:32","nodeType":"YulLiteral","src":"368:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:32","nodeType":"YulTypedName","src":"363:1:32","type":""}]},{"body":{"nativeSrc":"428:63:32","nodeType":"YulBlock","src":"428:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:32","nodeType":"YulIdentifier","src":"453:3:32"},{"name":"i","nativeSrc":"458:1:32","nodeType":"YulIdentifier","src":"458:1:32"}],"functionName":{"name":"add","nativeSrc":"449:3:32","nodeType":"YulIdentifier","src":"449:3:32"},"nativeSrc":"449:11:32","nodeType":"YulFunctionCall","src":"449:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:32","nodeType":"YulIdentifier","src":"472:3:32"},{"name":"i","nativeSrc":"477:1:32","nodeType":"YulIdentifier","src":"477:1:32"}],"functionName":{"name":"add","nativeSrc":"468:3:32","nodeType":"YulIdentifier","src":"468:3:32"},"nativeSrc":"468:11:32","nodeType":"YulFunctionCall","src":"468:11:32"}],"functionName":{"name":"mload","nativeSrc":"462:5:32","nodeType":"YulIdentifier","src":"462:5:32"},"nativeSrc":"462:18:32","nodeType":"YulFunctionCall","src":"462:18:32"}],"functionName":{"name":"mstore","nativeSrc":"442:6:32","nodeType":"YulIdentifier","src":"442:6:32"},"nativeSrc":"442:39:32","nodeType":"YulFunctionCall","src":"442:39:32"},"nativeSrc":"442:39:32","nodeType":"YulExpressionStatement","src":"442:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:32","nodeType":"YulIdentifier","src":"389:1:32"},{"name":"length","nativeSrc":"392:6:32","nodeType":"YulIdentifier","src":"392:6:32"}],"functionName":{"name":"lt","nativeSrc":"386:2:32","nodeType":"YulIdentifier","src":"386:2:32"},"nativeSrc":"386:13:32","nodeType":"YulFunctionCall","src":"386:13:32"},"nativeSrc":"378:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:32","nodeType":"YulBlock","src":"400:19:32","statements":[{"nativeSrc":"402:15:32","nodeType":"YulAssignment","src":"402:15:32","value":{"arguments":[{"name":"i","nativeSrc":"411:1:32","nodeType":"YulIdentifier","src":"411:1:32"},{"kind":"number","nativeSrc":"414:2:32","nodeType":"YulLiteral","src":"414:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:32","nodeType":"YulIdentifier","src":"407:3:32"},"nativeSrc":"407:10:32","nodeType":"YulFunctionCall","src":"407:10:32"},"variableNames":[{"name":"i","nativeSrc":"402:1:32","nodeType":"YulIdentifier","src":"402:1:32"}]}]},"pre":{"nativeSrc":"382:3:32","nodeType":"YulBlock","src":"382:3:32","statements":[]},"src":"378:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:32","nodeType":"YulIdentifier","src":"511:3:32"},{"name":"length","nativeSrc":"516:6:32","nodeType":"YulIdentifier","src":"516:6:32"}],"functionName":{"name":"add","nativeSrc":"507:3:32","nodeType":"YulIdentifier","src":"507:3:32"},"nativeSrc":"507:16:32","nodeType":"YulFunctionCall","src":"507:16:32"},{"kind":"number","nativeSrc":"525:1:32","nodeType":"YulLiteral","src":"525:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:32","nodeType":"YulIdentifier","src":"500:6:32"},"nativeSrc":"500:27:32","nodeType":"YulFunctionCall","src":"500:27:32"},"nativeSrc":"500:27:32","nodeType":"YulExpressionStatement","src":"500:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:32","nodeType":"YulTypedName","src":"331:3:32","type":""},{"name":"dst","nativeSrc":"336:3:32","nodeType":"YulTypedName","src":"336:3:32","type":""},{"name":"length","nativeSrc":"341:6:32","nodeType":"YulTypedName","src":"341:6:32","type":""}],"src":"287:246:32"},{"body":{"nativeSrc":"587:54:32","nodeType":"YulBlock","src":"587:54:32","statements":[{"nativeSrc":"597:38:32","nodeType":"YulAssignment","src":"597:38:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:32","nodeType":"YulIdentifier","src":"615:5:32"},{"kind":"number","nativeSrc":"622:2:32","nodeType":"YulLiteral","src":"622:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:32","nodeType":"YulIdentifier","src":"611:3:32"},"nativeSrc":"611:14:32","nodeType":"YulFunctionCall","src":"611:14:32"},{"arguments":[{"kind":"number","nativeSrc":"631:2:32","nodeType":"YulLiteral","src":"631:2:32","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:32","nodeType":"YulIdentifier","src":"627:3:32"},"nativeSrc":"627:7:32","nodeType":"YulFunctionCall","src":"627:7:32"}],"functionName":{"name":"and","nativeSrc":"607:3:32","nodeType":"YulIdentifier","src":"607:3:32"},"nativeSrc":"607:28:32","nodeType":"YulFunctionCall","src":"607:28:32"},"variableNames":[{"name":"result","nativeSrc":"597:6:32","nodeType":"YulIdentifier","src":"597:6:32"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:32","nodeType":"YulTypedName","src":"570:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:32","nodeType":"YulTypedName","src":"580:6:32","type":""}],"src":"539:102:32"},{"body":{"nativeSrc":"739:285:32","nodeType":"YulBlock","src":"739:285:32","statements":[{"nativeSrc":"749:53:32","nodeType":"YulVariableDeclaration","src":"749:53:32","value":{"arguments":[{"name":"value","nativeSrc":"796:5:32","nodeType":"YulIdentifier","src":"796:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:32","nodeType":"YulIdentifier","src":"763:32:32"},"nativeSrc":"763:39:32","nodeType":"YulFunctionCall","src":"763:39:32"},"variables":[{"name":"length","nativeSrc":"753:6:32","nodeType":"YulTypedName","src":"753:6:32","type":""}]},{"nativeSrc":"811:78:32","nodeType":"YulAssignment","src":"811:78:32","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:32","nodeType":"YulIdentifier","src":"877:3:32"},{"name":"length","nativeSrc":"882:6:32","nodeType":"YulIdentifier","src":"882:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:32","nodeType":"YulIdentifier","src":"818:58:32"},"nativeSrc":"818:71:32","nodeType":"YulFunctionCall","src":"818:71:32"},"variableNames":[{"name":"pos","nativeSrc":"811:3:32","nodeType":"YulIdentifier","src":"811:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:32","nodeType":"YulIdentifier","src":"937:5:32"},{"kind":"number","nativeSrc":"944:4:32","nodeType":"YulLiteral","src":"944:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:32","nodeType":"YulIdentifier","src":"933:3:32"},"nativeSrc":"933:16:32","nodeType":"YulFunctionCall","src":"933:16:32"},{"name":"pos","nativeSrc":"951:3:32","nodeType":"YulIdentifier","src":"951:3:32"},{"name":"length","nativeSrc":"956:6:32","nodeType":"YulIdentifier","src":"956:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:32","nodeType":"YulIdentifier","src":"898:34:32"},"nativeSrc":"898:65:32","nodeType":"YulFunctionCall","src":"898:65:32"},"nativeSrc":"898:65:32","nodeType":"YulExpressionStatement","src":"898:65:32"},{"nativeSrc":"972:46:32","nodeType":"YulAssignment","src":"972:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:32","nodeType":"YulIdentifier","src":"983:3:32"},{"arguments":[{"name":"length","nativeSrc":"1010:6:32","nodeType":"YulIdentifier","src":"1010:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:32","nodeType":"YulIdentifier","src":"988:21:32"},"nativeSrc":"988:29:32","nodeType":"YulFunctionCall","src":"988:29:32"}],"functionName":{"name":"add","nativeSrc":"979:3:32","nodeType":"YulIdentifier","src":"979:3:32"},"nativeSrc":"979:39:32","nodeType":"YulFunctionCall","src":"979:39:32"},"variableNames":[{"name":"end","nativeSrc":"972:3:32","nodeType":"YulIdentifier","src":"972:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:32","nodeType":"YulTypedName","src":"720:5:32","type":""},{"name":"pos","nativeSrc":"727:3:32","nodeType":"YulTypedName","src":"727:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:32","nodeType":"YulTypedName","src":"735:3:32","type":""}],"src":"647:377:32"},{"body":{"nativeSrc":"1148:195:32","nodeType":"YulBlock","src":"1148:195:32","statements":[{"nativeSrc":"1158:26:32","nodeType":"YulAssignment","src":"1158:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:32","nodeType":"YulIdentifier","src":"1170:9:32"},{"kind":"number","nativeSrc":"1181:2:32","nodeType":"YulLiteral","src":"1181:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:32","nodeType":"YulIdentifier","src":"1166:3:32"},"nativeSrc":"1166:18:32","nodeType":"YulFunctionCall","src":"1166:18:32"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:32","nodeType":"YulIdentifier","src":"1158:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:32","nodeType":"YulIdentifier","src":"1205:9:32"},{"kind":"number","nativeSrc":"1216:1:32","nodeType":"YulLiteral","src":"1216:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:32","nodeType":"YulIdentifier","src":"1201:3:32"},"nativeSrc":"1201:17:32","nodeType":"YulFunctionCall","src":"1201:17:32"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:32","nodeType":"YulIdentifier","src":"1224:4:32"},{"name":"headStart","nativeSrc":"1230:9:32","nodeType":"YulIdentifier","src":"1230:9:32"}],"functionName":{"name":"sub","nativeSrc":"1220:3:32","nodeType":"YulIdentifier","src":"1220:3:32"},"nativeSrc":"1220:20:32","nodeType":"YulFunctionCall","src":"1220:20:32"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:32","nodeType":"YulIdentifier","src":"1194:6:32"},"nativeSrc":"1194:47:32","nodeType":"YulFunctionCall","src":"1194:47:32"},"nativeSrc":"1194:47:32","nodeType":"YulExpressionStatement","src":"1194:47:32"},{"nativeSrc":"1250:86:32","nodeType":"YulAssignment","src":"1250:86:32","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:32","nodeType":"YulIdentifier","src":"1322:6:32"},{"name":"tail","nativeSrc":"1331:4:32","nodeType":"YulIdentifier","src":"1331:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:32","nodeType":"YulIdentifier","src":"1258:63:32"},"nativeSrc":"1258:78:32","nodeType":"YulFunctionCall","src":"1258:78:32"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:32","nodeType":"YulIdentifier","src":"1250:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:32","nodeType":"YulTypedName","src":"1120:9:32","type":""},{"name":"value0","nativeSrc":"1132:6:32","nodeType":"YulTypedName","src":"1132:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:32","nodeType":"YulTypedName","src":"1143:4:32","type":""}],"src":"1030:313:32"},{"body":{"nativeSrc":"1389:35:32","nodeType":"YulBlock","src":"1389:35:32","statements":[{"nativeSrc":"1399:19:32","nodeType":"YulAssignment","src":"1399:19:32","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:32","nodeType":"YulLiteral","src":"1415:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:32","nodeType":"YulIdentifier","src":"1409:5:32"},"nativeSrc":"1409:9:32","nodeType":"YulFunctionCall","src":"1409:9:32"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:32","nodeType":"YulIdentifier","src":"1399:6:32"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:32","nodeType":"YulTypedName","src":"1382:6:32","type":""}],"src":"1349:75:32"},{"body":{"nativeSrc":"1519:28:32","nodeType":"YulBlock","src":"1519:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:32","nodeType":"YulLiteral","src":"1536:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:32","nodeType":"YulLiteral","src":"1539:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:32","nodeType":"YulIdentifier","src":"1529:6:32"},"nativeSrc":"1529:12:32","nodeType":"YulFunctionCall","src":"1529:12:32"},"nativeSrc":"1529:12:32","nodeType":"YulExpressionStatement","src":"1529:12:32"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:32","nodeType":"YulFunctionDefinition","src":"1430:117:32"},{"body":{"nativeSrc":"1642:28:32","nodeType":"YulBlock","src":"1642:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:32","nodeType":"YulLiteral","src":"1659:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:32","nodeType":"YulLiteral","src":"1662:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:32","nodeType":"YulIdentifier","src":"1652:6:32"},"nativeSrc":"1652:12:32","nodeType":"YulFunctionCall","src":"1652:12:32"},"nativeSrc":"1652:12:32","nodeType":"YulExpressionStatement","src":"1652:12:32"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:32","nodeType":"YulFunctionDefinition","src":"1553:117:32"},{"body":{"nativeSrc":"1721:81:32","nodeType":"YulBlock","src":"1721:81:32","statements":[{"nativeSrc":"1731:65:32","nodeType":"YulAssignment","src":"1731:65:32","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:32","nodeType":"YulIdentifier","src":"1746:5:32"},{"kind":"number","nativeSrc":"1753:42:32","nodeType":"YulLiteral","src":"1753:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:32","nodeType":"YulIdentifier","src":"1742:3:32"},"nativeSrc":"1742:54:32","nodeType":"YulFunctionCall","src":"1742:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:32","nodeType":"YulIdentifier","src":"1731:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:32","nodeType":"YulTypedName","src":"1703:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:32","nodeType":"YulTypedName","src":"1713:7:32","type":""}],"src":"1676:126:32"},{"body":{"nativeSrc":"1853:51:32","nodeType":"YulBlock","src":"1853:51:32","statements":[{"nativeSrc":"1863:35:32","nodeType":"YulAssignment","src":"1863:35:32","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:32","nodeType":"YulIdentifier","src":"1892:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:32","nodeType":"YulIdentifier","src":"1874:17:32"},"nativeSrc":"1874:24:32","nodeType":"YulFunctionCall","src":"1874:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:32","nodeType":"YulIdentifier","src":"1863:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:32","nodeType":"YulTypedName","src":"1835:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:32","nodeType":"YulTypedName","src":"1845:7:32","type":""}],"src":"1808:96:32"},{"body":{"nativeSrc":"1953:79:32","nodeType":"YulBlock","src":"1953:79:32","statements":[{"body":{"nativeSrc":"2010:16:32","nodeType":"YulBlock","src":"2010:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:32","nodeType":"YulLiteral","src":"2019:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:32","nodeType":"YulLiteral","src":"2022:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:32","nodeType":"YulIdentifier","src":"2012:6:32"},"nativeSrc":"2012:12:32","nodeType":"YulFunctionCall","src":"2012:12:32"},"nativeSrc":"2012:12:32","nodeType":"YulExpressionStatement","src":"2012:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:32","nodeType":"YulIdentifier","src":"1976:5:32"},{"arguments":[{"name":"value","nativeSrc":"2001:5:32","nodeType":"YulIdentifier","src":"2001:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:32","nodeType":"YulIdentifier","src":"1983:17:32"},"nativeSrc":"1983:24:32","nodeType":"YulFunctionCall","src":"1983:24:32"}],"functionName":{"name":"eq","nativeSrc":"1973:2:32","nodeType":"YulIdentifier","src":"1973:2:32"},"nativeSrc":"1973:35:32","nodeType":"YulFunctionCall","src":"1973:35:32"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:32","nodeType":"YulIdentifier","src":"1966:6:32"},"nativeSrc":"1966:43:32","nodeType":"YulFunctionCall","src":"1966:43:32"},"nativeSrc":"1963:63:32","nodeType":"YulIf","src":"1963:63:32"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:32","nodeType":"YulTypedName","src":"1946:5:32","type":""}],"src":"1910:122:32"},{"body":{"nativeSrc":"2090:87:32","nodeType":"YulBlock","src":"2090:87:32","statements":[{"nativeSrc":"2100:29:32","nodeType":"YulAssignment","src":"2100:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:32","nodeType":"YulIdentifier","src":"2122:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:32","nodeType":"YulIdentifier","src":"2109:12:32"},"nativeSrc":"2109:20:32","nodeType":"YulFunctionCall","src":"2109:20:32"},"variableNames":[{"name":"value","nativeSrc":"2100:5:32","nodeType":"YulIdentifier","src":"2100:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:32","nodeType":"YulIdentifier","src":"2165:5:32"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:32","nodeType":"YulIdentifier","src":"2138:26:32"},"nativeSrc":"2138:33:32","nodeType":"YulFunctionCall","src":"2138:33:32"},"nativeSrc":"2138:33:32","nodeType":"YulExpressionStatement","src":"2138:33:32"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:32","nodeType":"YulTypedName","src":"2068:6:32","type":""},{"name":"end","nativeSrc":"2076:3:32","nodeType":"YulTypedName","src":"2076:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:32","nodeType":"YulTypedName","src":"2084:5:32","type":""}],"src":"2038:139:32"},{"body":{"nativeSrc":"2228:32:32","nodeType":"YulBlock","src":"2228:32:32","statements":[{"nativeSrc":"2238:16:32","nodeType":"YulAssignment","src":"2238:16:32","value":{"name":"value","nativeSrc":"2249:5:32","nodeType":"YulIdentifier","src":"2249:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:32","nodeType":"YulIdentifier","src":"2238:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:32","nodeType":"YulTypedName","src":"2210:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:32","nodeType":"YulTypedName","src":"2220:7:32","type":""}],"src":"2183:77:32"},{"body":{"nativeSrc":"2309:79:32","nodeType":"YulBlock","src":"2309:79:32","statements":[{"body":{"nativeSrc":"2366:16:32","nodeType":"YulBlock","src":"2366:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:32","nodeType":"YulLiteral","src":"2375:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:32","nodeType":"YulLiteral","src":"2378:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:32","nodeType":"YulIdentifier","src":"2368:6:32"},"nativeSrc":"2368:12:32","nodeType":"YulFunctionCall","src":"2368:12:32"},"nativeSrc":"2368:12:32","nodeType":"YulExpressionStatement","src":"2368:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:32","nodeType":"YulIdentifier","src":"2332:5:32"},{"arguments":[{"name":"value","nativeSrc":"2357:5:32","nodeType":"YulIdentifier","src":"2357:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:32","nodeType":"YulIdentifier","src":"2339:17:32"},"nativeSrc":"2339:24:32","nodeType":"YulFunctionCall","src":"2339:24:32"}],"functionName":{"name":"eq","nativeSrc":"2329:2:32","nodeType":"YulIdentifier","src":"2329:2:32"},"nativeSrc":"2329:35:32","nodeType":"YulFunctionCall","src":"2329:35:32"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:32","nodeType":"YulIdentifier","src":"2322:6:32"},"nativeSrc":"2322:43:32","nodeType":"YulFunctionCall","src":"2322:43:32"},"nativeSrc":"2319:63:32","nodeType":"YulIf","src":"2319:63:32"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:32","nodeType":"YulTypedName","src":"2302:5:32","type":""}],"src":"2266:122:32"},{"body":{"nativeSrc":"2446:87:32","nodeType":"YulBlock","src":"2446:87:32","statements":[{"nativeSrc":"2456:29:32","nodeType":"YulAssignment","src":"2456:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:32","nodeType":"YulIdentifier","src":"2478:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:32","nodeType":"YulIdentifier","src":"2465:12:32"},"nativeSrc":"2465:20:32","nodeType":"YulFunctionCall","src":"2465:20:32"},"variableNames":[{"name":"value","nativeSrc":"2456:5:32","nodeType":"YulIdentifier","src":"2456:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:32","nodeType":"YulIdentifier","src":"2521:5:32"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:32","nodeType":"YulIdentifier","src":"2494:26:32"},"nativeSrc":"2494:33:32","nodeType":"YulFunctionCall","src":"2494:33:32"},"nativeSrc":"2494:33:32","nodeType":"YulExpressionStatement","src":"2494:33:32"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:32","nodeType":"YulTypedName","src":"2424:6:32","type":""},{"name":"end","nativeSrc":"2432:3:32","nodeType":"YulTypedName","src":"2432:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:32","nodeType":"YulTypedName","src":"2440:5:32","type":""}],"src":"2394:139:32"},{"body":{"nativeSrc":"2622:391:32","nodeType":"YulBlock","src":"2622:391:32","statements":[{"body":{"nativeSrc":"2668:83:32","nodeType":"YulBlock","src":"2668:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:32","nodeType":"YulIdentifier","src":"2670:77:32"},"nativeSrc":"2670:79:32","nodeType":"YulFunctionCall","src":"2670:79:32"},"nativeSrc":"2670:79:32","nodeType":"YulExpressionStatement","src":"2670:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:32","nodeType":"YulIdentifier","src":"2643:7:32"},{"name":"headStart","nativeSrc":"2652:9:32","nodeType":"YulIdentifier","src":"2652:9:32"}],"functionName":{"name":"sub","nativeSrc":"2639:3:32","nodeType":"YulIdentifier","src":"2639:3:32"},"nativeSrc":"2639:23:32","nodeType":"YulFunctionCall","src":"2639:23:32"},{"kind":"number","nativeSrc":"2664:2:32","nodeType":"YulLiteral","src":"2664:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:32","nodeType":"YulIdentifier","src":"2635:3:32"},"nativeSrc":"2635:32:32","nodeType":"YulFunctionCall","src":"2635:32:32"},"nativeSrc":"2632:119:32","nodeType":"YulIf","src":"2632:119:32"},{"nativeSrc":"2761:117:32","nodeType":"YulBlock","src":"2761:117:32","statements":[{"nativeSrc":"2776:15:32","nodeType":"YulVariableDeclaration","src":"2776:15:32","value":{"kind":"number","nativeSrc":"2790:1:32","nodeType":"YulLiteral","src":"2790:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:32","nodeType":"YulTypedName","src":"2780:6:32","type":""}]},{"nativeSrc":"2805:63:32","nodeType":"YulAssignment","src":"2805:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:32","nodeType":"YulIdentifier","src":"2840:9:32"},{"name":"offset","nativeSrc":"2851:6:32","nodeType":"YulIdentifier","src":"2851:6:32"}],"functionName":{"name":"add","nativeSrc":"2836:3:32","nodeType":"YulIdentifier","src":"2836:3:32"},"nativeSrc":"2836:22:32","nodeType":"YulFunctionCall","src":"2836:22:32"},{"name":"dataEnd","nativeSrc":"2860:7:32","nodeType":"YulIdentifier","src":"2860:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:32","nodeType":"YulIdentifier","src":"2815:20:32"},"nativeSrc":"2815:53:32","nodeType":"YulFunctionCall","src":"2815:53:32"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:32","nodeType":"YulIdentifier","src":"2805:6:32"}]}]},{"nativeSrc":"2888:118:32","nodeType":"YulBlock","src":"2888:118:32","statements":[{"nativeSrc":"2903:16:32","nodeType":"YulVariableDeclaration","src":"2903:16:32","value":{"kind":"number","nativeSrc":"2917:2:32","nodeType":"YulLiteral","src":"2917:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:32","nodeType":"YulTypedName","src":"2907:6:32","type":""}]},{"nativeSrc":"2933:63:32","nodeType":"YulAssignment","src":"2933:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:32","nodeType":"YulIdentifier","src":"2968:9:32"},{"name":"offset","nativeSrc":"2979:6:32","nodeType":"YulIdentifier","src":"2979:6:32"}],"functionName":{"name":"add","nativeSrc":"2964:3:32","nodeType":"YulIdentifier","src":"2964:3:32"},"nativeSrc":"2964:22:32","nodeType":"YulFunctionCall","src":"2964:22:32"},{"name":"dataEnd","nativeSrc":"2988:7:32","nodeType":"YulIdentifier","src":"2988:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:32","nodeType":"YulIdentifier","src":"2943:20:32"},"nativeSrc":"2943:53:32","nodeType":"YulFunctionCall","src":"2943:53:32"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:32","nodeType":"YulIdentifier","src":"2933:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:32","nodeType":"YulTypedName","src":"2584:9:32","type":""},{"name":"dataEnd","nativeSrc":"2595:7:32","nodeType":"YulTypedName","src":"2595:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:32","nodeType":"YulTypedName","src":"2607:6:32","type":""},{"name":"value1","nativeSrc":"2615:6:32","nodeType":"YulTypedName","src":"2615:6:32","type":""}],"src":"2539:474:32"},{"body":{"nativeSrc":"3061:48:32","nodeType":"YulBlock","src":"3061:48:32","statements":[{"nativeSrc":"3071:32:32","nodeType":"YulAssignment","src":"3071:32:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:32","nodeType":"YulIdentifier","src":"3096:5:32"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:32","nodeType":"YulIdentifier","src":"3089:6:32"},"nativeSrc":"3089:13:32","nodeType":"YulFunctionCall","src":"3089:13:32"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:32","nodeType":"YulIdentifier","src":"3082:6:32"},"nativeSrc":"3082:21:32","nodeType":"YulFunctionCall","src":"3082:21:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:32","nodeType":"YulIdentifier","src":"3071:7:32"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:32","nodeType":"YulTypedName","src":"3043:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:32","nodeType":"YulTypedName","src":"3053:7:32","type":""}],"src":"3019:90:32"},{"body":{"nativeSrc":"3174:50:32","nodeType":"YulBlock","src":"3174:50:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:32","nodeType":"YulIdentifier","src":"3191:3:32"},{"arguments":[{"name":"value","nativeSrc":"3211:5:32","nodeType":"YulIdentifier","src":"3211:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:32","nodeType":"YulIdentifier","src":"3196:14:32"},"nativeSrc":"3196:21:32","nodeType":"YulFunctionCall","src":"3196:21:32"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:32","nodeType":"YulIdentifier","src":"3184:6:32"},"nativeSrc":"3184:34:32","nodeType":"YulFunctionCall","src":"3184:34:32"},"nativeSrc":"3184:34:32","nodeType":"YulExpressionStatement","src":"3184:34:32"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:32","nodeType":"YulTypedName","src":"3162:5:32","type":""},{"name":"pos","nativeSrc":"3169:3:32","nodeType":"YulTypedName","src":"3169:3:32","type":""}],"src":"3115:109:32"},{"body":{"nativeSrc":"3322:118:32","nodeType":"YulBlock","src":"3322:118:32","statements":[{"nativeSrc":"3332:26:32","nodeType":"YulAssignment","src":"3332:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:32","nodeType":"YulIdentifier","src":"3344:9:32"},{"kind":"number","nativeSrc":"3355:2:32","nodeType":"YulLiteral","src":"3355:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:32","nodeType":"YulIdentifier","src":"3340:3:32"},"nativeSrc":"3340:18:32","nodeType":"YulFunctionCall","src":"3340:18:32"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:32","nodeType":"YulIdentifier","src":"3332:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:32","nodeType":"YulIdentifier","src":"3406:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:32","nodeType":"YulIdentifier","src":"3419:9:32"},{"kind":"number","nativeSrc":"3430:1:32","nodeType":"YulLiteral","src":"3430:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:32","nodeType":"YulIdentifier","src":"3415:3:32"},"nativeSrc":"3415:17:32","nodeType":"YulFunctionCall","src":"3415:17:32"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:32","nodeType":"YulIdentifier","src":"3368:37:32"},"nativeSrc":"3368:65:32","nodeType":"YulFunctionCall","src":"3368:65:32"},"nativeSrc":"3368:65:32","nodeType":"YulExpressionStatement","src":"3368:65:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:32","nodeType":"YulTypedName","src":"3294:9:32","type":""},{"name":"value0","nativeSrc":"3306:6:32","nodeType":"YulTypedName","src":"3306:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:32","nodeType":"YulTypedName","src":"3317:4:32","type":""}],"src":"3230:210:32"},{"body":{"nativeSrc":"3511:53:32","nodeType":"YulBlock","src":"3511:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:32","nodeType":"YulIdentifier","src":"3528:3:32"},{"arguments":[{"name":"value","nativeSrc":"3551:5:32","nodeType":"YulIdentifier","src":"3551:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:32","nodeType":"YulIdentifier","src":"3533:17:32"},"nativeSrc":"3533:24:32","nodeType":"YulFunctionCall","src":"3533:24:32"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:32","nodeType":"YulIdentifier","src":"3521:6:32"},"nativeSrc":"3521:37:32","nodeType":"YulFunctionCall","src":"3521:37:32"},"nativeSrc":"3521:37:32","nodeType":"YulExpressionStatement","src":"3521:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:32","nodeType":"YulTypedName","src":"3499:5:32","type":""},{"name":"pos","nativeSrc":"3506:3:32","nodeType":"YulTypedName","src":"3506:3:32","type":""}],"src":"3446:118:32"},{"body":{"nativeSrc":"3668:124:32","nodeType":"YulBlock","src":"3668:124:32","statements":[{"nativeSrc":"3678:26:32","nodeType":"YulAssignment","src":"3678:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:32","nodeType":"YulIdentifier","src":"3690:9:32"},{"kind":"number","nativeSrc":"3701:2:32","nodeType":"YulLiteral","src":"3701:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:32","nodeType":"YulIdentifier","src":"3686:3:32"},"nativeSrc":"3686:18:32","nodeType":"YulFunctionCall","src":"3686:18:32"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:32","nodeType":"YulIdentifier","src":"3678:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:32","nodeType":"YulIdentifier","src":"3758:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:32","nodeType":"YulIdentifier","src":"3771:9:32"},{"kind":"number","nativeSrc":"3782:1:32","nodeType":"YulLiteral","src":"3782:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:32","nodeType":"YulIdentifier","src":"3767:3:32"},"nativeSrc":"3767:17:32","nodeType":"YulFunctionCall","src":"3767:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:32","nodeType":"YulIdentifier","src":"3714:43:32"},"nativeSrc":"3714:71:32","nodeType":"YulFunctionCall","src":"3714:71:32"},"nativeSrc":"3714:71:32","nodeType":"YulExpressionStatement","src":"3714:71:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:32","nodeType":"YulTypedName","src":"3640:9:32","type":""},{"name":"value0","nativeSrc":"3652:6:32","nodeType":"YulTypedName","src":"3652:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:32","nodeType":"YulTypedName","src":"3663:4:32","type":""}],"src":"3570:222:32"},{"body":{"nativeSrc":"3898:519:32","nodeType":"YulBlock","src":"3898:519:32","statements":[{"body":{"nativeSrc":"3944:83:32","nodeType":"YulBlock","src":"3944:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:32","nodeType":"YulIdentifier","src":"3946:77:32"},"nativeSrc":"3946:79:32","nodeType":"YulFunctionCall","src":"3946:79:32"},"nativeSrc":"3946:79:32","nodeType":"YulExpressionStatement","src":"3946:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:32","nodeType":"YulIdentifier","src":"3919:7:32"},{"name":"headStart","nativeSrc":"3928:9:32","nodeType":"YulIdentifier","src":"3928:9:32"}],"functionName":{"name":"sub","nativeSrc":"3915:3:32","nodeType":"YulIdentifier","src":"3915:3:32"},"nativeSrc":"3915:23:32","nodeType":"YulFunctionCall","src":"3915:23:32"},{"kind":"number","nativeSrc":"3940:2:32","nodeType":"YulLiteral","src":"3940:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:32","nodeType":"YulIdentifier","src":"3911:3:32"},"nativeSrc":"3911:32:32","nodeType":"YulFunctionCall","src":"3911:32:32"},"nativeSrc":"3908:119:32","nodeType":"YulIf","src":"3908:119:32"},{"nativeSrc":"4037:117:32","nodeType":"YulBlock","src":"4037:117:32","statements":[{"nativeSrc":"4052:15:32","nodeType":"YulVariableDeclaration","src":"4052:15:32","value":{"kind":"number","nativeSrc":"4066:1:32","nodeType":"YulLiteral","src":"4066:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:32","nodeType":"YulTypedName","src":"4056:6:32","type":""}]},{"nativeSrc":"4081:63:32","nodeType":"YulAssignment","src":"4081:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:32","nodeType":"YulIdentifier","src":"4116:9:32"},{"name":"offset","nativeSrc":"4127:6:32","nodeType":"YulIdentifier","src":"4127:6:32"}],"functionName":{"name":"add","nativeSrc":"4112:3:32","nodeType":"YulIdentifier","src":"4112:3:32"},"nativeSrc":"4112:22:32","nodeType":"YulFunctionCall","src":"4112:22:32"},{"name":"dataEnd","nativeSrc":"4136:7:32","nodeType":"YulIdentifier","src":"4136:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:32","nodeType":"YulIdentifier","src":"4091:20:32"},"nativeSrc":"4091:53:32","nodeType":"YulFunctionCall","src":"4091:53:32"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:32","nodeType":"YulIdentifier","src":"4081:6:32"}]}]},{"nativeSrc":"4164:118:32","nodeType":"YulBlock","src":"4164:118:32","statements":[{"nativeSrc":"4179:16:32","nodeType":"YulVariableDeclaration","src":"4179:16:32","value":{"kind":"number","nativeSrc":"4193:2:32","nodeType":"YulLiteral","src":"4193:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:32","nodeType":"YulTypedName","src":"4183:6:32","type":""}]},{"nativeSrc":"4209:63:32","nodeType":"YulAssignment","src":"4209:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:32","nodeType":"YulIdentifier","src":"4244:9:32"},{"name":"offset","nativeSrc":"4255:6:32","nodeType":"YulIdentifier","src":"4255:6:32"}],"functionName":{"name":"add","nativeSrc":"4240:3:32","nodeType":"YulIdentifier","src":"4240:3:32"},"nativeSrc":"4240:22:32","nodeType":"YulFunctionCall","src":"4240:22:32"},{"name":"dataEnd","nativeSrc":"4264:7:32","nodeType":"YulIdentifier","src":"4264:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:32","nodeType":"YulIdentifier","src":"4219:20:32"},"nativeSrc":"4219:53:32","nodeType":"YulFunctionCall","src":"4219:53:32"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:32","nodeType":"YulIdentifier","src":"4209:6:32"}]}]},{"nativeSrc":"4292:118:32","nodeType":"YulBlock","src":"4292:118:32","statements":[{"nativeSrc":"4307:16:32","nodeType":"YulVariableDeclaration","src":"4307:16:32","value":{"kind":"number","nativeSrc":"4321:2:32","nodeType":"YulLiteral","src":"4321:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:32","nodeType":"YulTypedName","src":"4311:6:32","type":""}]},{"nativeSrc":"4337:63:32","nodeType":"YulAssignment","src":"4337:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:32","nodeType":"YulIdentifier","src":"4372:9:32"},{"name":"offset","nativeSrc":"4383:6:32","nodeType":"YulIdentifier","src":"4383:6:32"}],"functionName":{"name":"add","nativeSrc":"4368:3:32","nodeType":"YulIdentifier","src":"4368:3:32"},"nativeSrc":"4368:22:32","nodeType":"YulFunctionCall","src":"4368:22:32"},{"name":"dataEnd","nativeSrc":"4392:7:32","nodeType":"YulIdentifier","src":"4392:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:32","nodeType":"YulIdentifier","src":"4347:20:32"},"nativeSrc":"4347:53:32","nodeType":"YulFunctionCall","src":"4347:53:32"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:32","nodeType":"YulIdentifier","src":"4337:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:32","nodeType":"YulTypedName","src":"3852:9:32","type":""},{"name":"dataEnd","nativeSrc":"3863:7:32","nodeType":"YulTypedName","src":"3863:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:32","nodeType":"YulTypedName","src":"3875:6:32","type":""},{"name":"value1","nativeSrc":"3883:6:32","nodeType":"YulTypedName","src":"3883:6:32","type":""},{"name":"value2","nativeSrc":"3891:6:32","nodeType":"YulTypedName","src":"3891:6:32","type":""}],"src":"3798:619:32"},{"body":{"nativeSrc":"4466:43:32","nodeType":"YulBlock","src":"4466:43:32","statements":[{"nativeSrc":"4476:27:32","nodeType":"YulAssignment","src":"4476:27:32","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:32","nodeType":"YulIdentifier","src":"4491:5:32"},{"kind":"number","nativeSrc":"4498:4:32","nodeType":"YulLiteral","src":"4498:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:32","nodeType":"YulIdentifier","src":"4487:3:32"},"nativeSrc":"4487:16:32","nodeType":"YulFunctionCall","src":"4487:16:32"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:32","nodeType":"YulIdentifier","src":"4476:7:32"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:32","nodeType":"YulTypedName","src":"4448:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:32","nodeType":"YulTypedName","src":"4458:7:32","type":""}],"src":"4423:86:32"},{"body":{"nativeSrc":"4576:51:32","nodeType":"YulBlock","src":"4576:51:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:32","nodeType":"YulIdentifier","src":"4593:3:32"},{"arguments":[{"name":"value","nativeSrc":"4614:5:32","nodeType":"YulIdentifier","src":"4614:5:32"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:32","nodeType":"YulIdentifier","src":"4598:15:32"},"nativeSrc":"4598:22:32","nodeType":"YulFunctionCall","src":"4598:22:32"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:32","nodeType":"YulIdentifier","src":"4586:6:32"},"nativeSrc":"4586:35:32","nodeType":"YulFunctionCall","src":"4586:35:32"},"nativeSrc":"4586:35:32","nodeType":"YulExpressionStatement","src":"4586:35:32"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:32","nodeType":"YulTypedName","src":"4564:5:32","type":""},{"name":"pos","nativeSrc":"4571:3:32","nodeType":"YulTypedName","src":"4571:3:32","type":""}],"src":"4515:112:32"},{"body":{"nativeSrc":"4727:120:32","nodeType":"YulBlock","src":"4727:120:32","statements":[{"nativeSrc":"4737:26:32","nodeType":"YulAssignment","src":"4737:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:32","nodeType":"YulIdentifier","src":"4749:9:32"},{"kind":"number","nativeSrc":"4760:2:32","nodeType":"YulLiteral","src":"4760:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:32","nodeType":"YulIdentifier","src":"4745:3:32"},"nativeSrc":"4745:18:32","nodeType":"YulFunctionCall","src":"4745:18:32"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:32","nodeType":"YulIdentifier","src":"4737:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:32","nodeType":"YulIdentifier","src":"4813:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:32","nodeType":"YulIdentifier","src":"4826:9:32"},{"kind":"number","nativeSrc":"4837:1:32","nodeType":"YulLiteral","src":"4837:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:32","nodeType":"YulIdentifier","src":"4822:3:32"},"nativeSrc":"4822:17:32","nodeType":"YulFunctionCall","src":"4822:17:32"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:32","nodeType":"YulIdentifier","src":"4773:39:32"},"nativeSrc":"4773:67:32","nodeType":"YulFunctionCall","src":"4773:67:32"},"nativeSrc":"4773:67:32","nodeType":"YulExpressionStatement","src":"4773:67:32"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:32","nodeType":"YulTypedName","src":"4699:9:32","type":""},{"name":"value0","nativeSrc":"4711:6:32","nodeType":"YulTypedName","src":"4711:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:32","nodeType":"YulTypedName","src":"4722:4:32","type":""}],"src":"4633:214:32"},{"body":{"nativeSrc":"4898:32:32","nodeType":"YulBlock","src":"4898:32:32","statements":[{"nativeSrc":"4908:16:32","nodeType":"YulAssignment","src":"4908:16:32","value":{"name":"value","nativeSrc":"4919:5:32","nodeType":"YulIdentifier","src":"4919:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"4908:7:32","nodeType":"YulIdentifier","src":"4908:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4853:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4880:5:32","nodeType":"YulTypedName","src":"4880:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4890:7:32","nodeType":"YulTypedName","src":"4890:7:32","type":""}],"src":"4853:77:32"},{"body":{"nativeSrc":"5001:53:32","nodeType":"YulBlock","src":"5001:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5018:3:32","nodeType":"YulIdentifier","src":"5018:3:32"},{"arguments":[{"name":"value","nativeSrc":"5041:5:32","nodeType":"YulIdentifier","src":"5041:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5023:17:32","nodeType":"YulIdentifier","src":"5023:17:32"},"nativeSrc":"5023:24:32","nodeType":"YulFunctionCall","src":"5023:24:32"}],"functionName":{"name":"mstore","nativeSrc":"5011:6:32","nodeType":"YulIdentifier","src":"5011:6:32"},"nativeSrc":"5011:37:32","nodeType":"YulFunctionCall","src":"5011:37:32"},"nativeSrc":"5011:37:32","nodeType":"YulExpressionStatement","src":"5011:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4936:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4989:5:32","nodeType":"YulTypedName","src":"4989:5:32","type":""},{"name":"pos","nativeSrc":"4996:3:32","nodeType":"YulTypedName","src":"4996:3:32","type":""}],"src":"4936:118:32"},{"body":{"nativeSrc":"5158:124:32","nodeType":"YulBlock","src":"5158:124:32","statements":[{"nativeSrc":"5168:26:32","nodeType":"YulAssignment","src":"5168:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"5180:9:32","nodeType":"YulIdentifier","src":"5180:9:32"},{"kind":"number","nativeSrc":"5191:2:32","nodeType":"YulLiteral","src":"5191:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5176:3:32","nodeType":"YulIdentifier","src":"5176:3:32"},"nativeSrc":"5176:18:32","nodeType":"YulFunctionCall","src":"5176:18:32"},"variableNames":[{"name":"tail","nativeSrc":"5168:4:32","nodeType":"YulIdentifier","src":"5168:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5248:6:32","nodeType":"YulIdentifier","src":"5248:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"5261:9:32","nodeType":"YulIdentifier","src":"5261:9:32"},{"kind":"number","nativeSrc":"5272:1:32","nodeType":"YulLiteral","src":"5272:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5257:3:32","nodeType":"YulIdentifier","src":"5257:3:32"},"nativeSrc":"5257:17:32","nodeType":"YulFunctionCall","src":"5257:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5204:43:32","nodeType":"YulIdentifier","src":"5204:43:32"},"nativeSrc":"5204:71:32","nodeType":"YulFunctionCall","src":"5204:71:32"},"nativeSrc":"5204:71:32","nodeType":"YulExpressionStatement","src":"5204:71:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5060:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5130:9:32","nodeType":"YulTypedName","src":"5130:9:32","type":""},{"name":"value0","nativeSrc":"5142:6:32","nodeType":"YulTypedName","src":"5142:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5153:4:32","nodeType":"YulTypedName","src":"5153:4:32","type":""}],"src":"5060:222:32"},{"body":{"nativeSrc":"5354:263:32","nodeType":"YulBlock","src":"5354:263:32","statements":[{"body":{"nativeSrc":"5400:83:32","nodeType":"YulBlock","src":"5400:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5402:77:32","nodeType":"YulIdentifier","src":"5402:77:32"},"nativeSrc":"5402:79:32","nodeType":"YulFunctionCall","src":"5402:79:32"},"nativeSrc":"5402:79:32","nodeType":"YulExpressionStatement","src":"5402:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5375:7:32","nodeType":"YulIdentifier","src":"5375:7:32"},{"name":"headStart","nativeSrc":"5384:9:32","nodeType":"YulIdentifier","src":"5384:9:32"}],"functionName":{"name":"sub","nativeSrc":"5371:3:32","nodeType":"YulIdentifier","src":"5371:3:32"},"nativeSrc":"5371:23:32","nodeType":"YulFunctionCall","src":"5371:23:32"},{"kind":"number","nativeSrc":"5396:2:32","nodeType":"YulLiteral","src":"5396:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5367:3:32","nodeType":"YulIdentifier","src":"5367:3:32"},"nativeSrc":"5367:32:32","nodeType":"YulFunctionCall","src":"5367:32:32"},"nativeSrc":"5364:119:32","nodeType":"YulIf","src":"5364:119:32"},{"nativeSrc":"5493:117:32","nodeType":"YulBlock","src":"5493:117:32","statements":[{"nativeSrc":"5508:15:32","nodeType":"YulVariableDeclaration","src":"5508:15:32","value":{"kind":"number","nativeSrc":"5522:1:32","nodeType":"YulLiteral","src":"5522:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5512:6:32","nodeType":"YulTypedName","src":"5512:6:32","type":""}]},{"nativeSrc":"5537:63:32","nodeType":"YulAssignment","src":"5537:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5572:9:32","nodeType":"YulIdentifier","src":"5572:9:32"},{"name":"offset","nativeSrc":"5583:6:32","nodeType":"YulIdentifier","src":"5583:6:32"}],"functionName":{"name":"add","nativeSrc":"5568:3:32","nodeType":"YulIdentifier","src":"5568:3:32"},"nativeSrc":"5568:22:32","nodeType":"YulFunctionCall","src":"5568:22:32"},{"name":"dataEnd","nativeSrc":"5592:7:32","nodeType":"YulIdentifier","src":"5592:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5547:20:32","nodeType":"YulIdentifier","src":"5547:20:32"},"nativeSrc":"5547:53:32","nodeType":"YulFunctionCall","src":"5547:53:32"},"variableNames":[{"name":"value0","nativeSrc":"5537:6:32","nodeType":"YulIdentifier","src":"5537:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5288:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5324:9:32","nodeType":"YulTypedName","src":"5324:9:32","type":""},{"name":"dataEnd","nativeSrc":"5335:7:32","nodeType":"YulTypedName","src":"5335:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5347:6:32","nodeType":"YulTypedName","src":"5347:6:32","type":""}],"src":"5288:329:32"},{"body":{"nativeSrc":"5689:263:32","nodeType":"YulBlock","src":"5689:263:32","statements":[{"body":{"nativeSrc":"5735:83:32","nodeType":"YulBlock","src":"5735:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5737:77:32","nodeType":"YulIdentifier","src":"5737:77:32"},"nativeSrc":"5737:79:32","nodeType":"YulFunctionCall","src":"5737:79:32"},"nativeSrc":"5737:79:32","nodeType":"YulExpressionStatement","src":"5737:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5710:7:32","nodeType":"YulIdentifier","src":"5710:7:32"},{"name":"headStart","nativeSrc":"5719:9:32","nodeType":"YulIdentifier","src":"5719:9:32"}],"functionName":{"name":"sub","nativeSrc":"5706:3:32","nodeType":"YulIdentifier","src":"5706:3:32"},"nativeSrc":"5706:23:32","nodeType":"YulFunctionCall","src":"5706:23:32"},{"kind":"number","nativeSrc":"5731:2:32","nodeType":"YulLiteral","src":"5731:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5702:3:32","nodeType":"YulIdentifier","src":"5702:3:32"},"nativeSrc":"5702:32:32","nodeType":"YulFunctionCall","src":"5702:32:32"},"nativeSrc":"5699:119:32","nodeType":"YulIf","src":"5699:119:32"},{"nativeSrc":"5828:117:32","nodeType":"YulBlock","src":"5828:117:32","statements":[{"nativeSrc":"5843:15:32","nodeType":"YulVariableDeclaration","src":"5843:15:32","value":{"kind":"number","nativeSrc":"5857:1:32","nodeType":"YulLiteral","src":"5857:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5847:6:32","nodeType":"YulTypedName","src":"5847:6:32","type":""}]},{"nativeSrc":"5872:63:32","nodeType":"YulAssignment","src":"5872:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5907:9:32","nodeType":"YulIdentifier","src":"5907:9:32"},{"name":"offset","nativeSrc":"5918:6:32","nodeType":"YulIdentifier","src":"5918:6:32"}],"functionName":{"name":"add","nativeSrc":"5903:3:32","nodeType":"YulIdentifier","src":"5903:3:32"},"nativeSrc":"5903:22:32","nodeType":"YulFunctionCall","src":"5903:22:32"},{"name":"dataEnd","nativeSrc":"5927:7:32","nodeType":"YulIdentifier","src":"5927:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5882:20:32","nodeType":"YulIdentifier","src":"5882:20:32"},"nativeSrc":"5882:53:32","nodeType":"YulFunctionCall","src":"5882:53:32"},"variableNames":[{"name":"value0","nativeSrc":"5872:6:32","nodeType":"YulIdentifier","src":"5872:6:32"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5623:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5659:9:32","nodeType":"YulTypedName","src":"5659:9:32","type":""},{"name":"dataEnd","nativeSrc":"5670:7:32","nodeType":"YulTypedName","src":"5670:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5682:6:32","nodeType":"YulTypedName","src":"5682:6:32","type":""}],"src":"5623:329:32"},{"body":{"nativeSrc":"6002:105:32","nodeType":"YulBlock","src":"6002:105:32","statements":[{"nativeSrc":"6012:89:32","nodeType":"YulAssignment","src":"6012:89:32","value":{"arguments":[{"name":"value","nativeSrc":"6027:5:32","nodeType":"YulIdentifier","src":"6027:5:32"},{"kind":"number","nativeSrc":"6034:66:32","nodeType":"YulLiteral","src":"6034:66:32","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"6023:3:32","nodeType":"YulIdentifier","src":"6023:3:32"},"nativeSrc":"6023:78:32","nodeType":"YulFunctionCall","src":"6023:78:32"},"variableNames":[{"name":"cleaned","nativeSrc":"6012:7:32","nodeType":"YulIdentifier","src":"6012:7:32"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"5958:149:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5984:5:32","nodeType":"YulTypedName","src":"5984:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5994:7:32","nodeType":"YulTypedName","src":"5994:7:32","type":""}],"src":"5958:149:32"},{"body":{"nativeSrc":"6176:52:32","nodeType":"YulBlock","src":"6176:52:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6193:3:32","nodeType":"YulIdentifier","src":"6193:3:32"},{"arguments":[{"name":"value","nativeSrc":"6215:5:32","nodeType":"YulIdentifier","src":"6215:5:32"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"6198:16:32","nodeType":"YulIdentifier","src":"6198:16:32"},"nativeSrc":"6198:23:32","nodeType":"YulFunctionCall","src":"6198:23:32"}],"functionName":{"name":"mstore","nativeSrc":"6186:6:32","nodeType":"YulIdentifier","src":"6186:6:32"},"nativeSrc":"6186:36:32","nodeType":"YulFunctionCall","src":"6186:36:32"},"nativeSrc":"6186:36:32","nodeType":"YulExpressionStatement","src":"6186:36:32"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"6113:115:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6164:5:32","nodeType":"YulTypedName","src":"6164:5:32","type":""},{"name":"pos","nativeSrc":"6171:3:32","nodeType":"YulTypedName","src":"6171:3:32","type":""}],"src":"6113:115:32"},{"body":{"nativeSrc":"6299:53:32","nodeType":"YulBlock","src":"6299:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6316:3:32","nodeType":"YulIdentifier","src":"6316:3:32"},{"arguments":[{"name":"value","nativeSrc":"6339:5:32","nodeType":"YulIdentifier","src":"6339:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6321:17:32","nodeType":"YulIdentifier","src":"6321:17:32"},"nativeSrc":"6321:24:32","nodeType":"YulFunctionCall","src":"6321:24:32"}],"functionName":{"name":"mstore","nativeSrc":"6309:6:32","nodeType":"YulIdentifier","src":"6309:6:32"},"nativeSrc":"6309:37:32","nodeType":"YulFunctionCall","src":"6309:37:32"},"nativeSrc":"6309:37:32","nodeType":"YulExpressionStatement","src":"6309:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6234:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6287:5:32","nodeType":"YulTypedName","src":"6287:5:32","type":""},{"name":"pos","nativeSrc":"6294:3:32","nodeType":"YulTypedName","src":"6294:3:32","type":""}],"src":"6234:118:32"},{"body":{"nativeSrc":"6432:40:32","nodeType":"YulBlock","src":"6432:40:32","statements":[{"nativeSrc":"6443:22:32","nodeType":"YulAssignment","src":"6443:22:32","value":{"arguments":[{"name":"value","nativeSrc":"6459:5:32","nodeType":"YulIdentifier","src":"6459:5:32"}],"functionName":{"name":"mload","nativeSrc":"6453:5:32","nodeType":"YulIdentifier","src":"6453:5:32"},"nativeSrc":"6453:12:32","nodeType":"YulFunctionCall","src":"6453:12:32"},"variableNames":[{"name":"length","nativeSrc":"6443:6:32","nodeType":"YulIdentifier","src":"6443:6:32"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6358:114:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6415:5:32","nodeType":"YulTypedName","src":"6415:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6425:6:32","nodeType":"YulTypedName","src":"6425:6:32","type":""}],"src":"6358:114:32"},{"body":{"nativeSrc":"6589:73:32","nodeType":"YulBlock","src":"6589:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6606:3:32","nodeType":"YulIdentifier","src":"6606:3:32"},{"name":"length","nativeSrc":"6611:6:32","nodeType":"YulIdentifier","src":"6611:6:32"}],"functionName":{"name":"mstore","nativeSrc":"6599:6:32","nodeType":"YulIdentifier","src":"6599:6:32"},"nativeSrc":"6599:19:32","nodeType":"YulFunctionCall","src":"6599:19:32"},"nativeSrc":"6599:19:32","nodeType":"YulExpressionStatement","src":"6599:19:32"},{"nativeSrc":"6627:29:32","nodeType":"YulAssignment","src":"6627:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"6646:3:32","nodeType":"YulIdentifier","src":"6646:3:32"},{"kind":"number","nativeSrc":"6651:4:32","nodeType":"YulLiteral","src":"6651:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6642:3:32","nodeType":"YulIdentifier","src":"6642:3:32"},"nativeSrc":"6642:14:32","nodeType":"YulFunctionCall","src":"6642:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"6627:11:32","nodeType":"YulIdentifier","src":"6627:11:32"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6478:184:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6561:3:32","nodeType":"YulTypedName","src":"6561:3:32","type":""},{"name":"length","nativeSrc":"6566:6:32","nodeType":"YulTypedName","src":"6566:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6577:11:32","nodeType":"YulTypedName","src":"6577:11:32","type":""}],"src":"6478:184:32"},{"body":{"nativeSrc":"6740:60:32","nodeType":"YulBlock","src":"6740:60:32","statements":[{"nativeSrc":"6750:11:32","nodeType":"YulAssignment","src":"6750:11:32","value":{"name":"ptr","nativeSrc":"6758:3:32","nodeType":"YulIdentifier","src":"6758:3:32"},"variableNames":[{"name":"data","nativeSrc":"6750:4:32","nodeType":"YulIdentifier","src":"6750:4:32"}]},{"nativeSrc":"6771:22:32","nodeType":"YulAssignment","src":"6771:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"6783:3:32","nodeType":"YulIdentifier","src":"6783:3:32"},{"kind":"number","nativeSrc":"6788:4:32","nodeType":"YulLiteral","src":"6788:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6779:3:32","nodeType":"YulIdentifier","src":"6779:3:32"},"nativeSrc":"6779:14:32","nodeType":"YulFunctionCall","src":"6779:14:32"},"variableNames":[{"name":"data","nativeSrc":"6771:4:32","nodeType":"YulIdentifier","src":"6771:4:32"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6668:132:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6727:3:32","nodeType":"YulTypedName","src":"6727:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6735:4:32","nodeType":"YulTypedName","src":"6735:4:32","type":""}],"src":"6668:132:32"},{"body":{"nativeSrc":"6861:53:32","nodeType":"YulBlock","src":"6861:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6878:3:32","nodeType":"YulIdentifier","src":"6878:3:32"},{"arguments":[{"name":"value","nativeSrc":"6901:5:32","nodeType":"YulIdentifier","src":"6901:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6883:17:32","nodeType":"YulIdentifier","src":"6883:17:32"},"nativeSrc":"6883:24:32","nodeType":"YulFunctionCall","src":"6883:24:32"}],"functionName":{"name":"mstore","nativeSrc":"6871:6:32","nodeType":"YulIdentifier","src":"6871:6:32"},"nativeSrc":"6871:37:32","nodeType":"YulFunctionCall","src":"6871:37:32"},"nativeSrc":"6871:37:32","nodeType":"YulExpressionStatement","src":"6871:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6806:108:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6849:5:32","nodeType":"YulTypedName","src":"6849:5:32","type":""},{"name":"pos","nativeSrc":"6856:3:32","nodeType":"YulTypedName","src":"6856:3:32","type":""}],"src":"6806:108:32"},{"body":{"nativeSrc":"7000:99:32","nodeType":"YulBlock","src":"7000:99:32","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"7044:6:32","nodeType":"YulIdentifier","src":"7044:6:32"},{"name":"pos","nativeSrc":"7052:3:32","nodeType":"YulIdentifier","src":"7052:3:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7010:33:32","nodeType":"YulIdentifier","src":"7010:33:32"},"nativeSrc":"7010:46:32","nodeType":"YulFunctionCall","src":"7010:46:32"},"nativeSrc":"7010:46:32","nodeType":"YulExpressionStatement","src":"7010:46:32"},{"nativeSrc":"7065:28:32","nodeType":"YulAssignment","src":"7065:28:32","value":{"arguments":[{"name":"pos","nativeSrc":"7083:3:32","nodeType":"YulIdentifier","src":"7083:3:32"},{"kind":"number","nativeSrc":"7088:4:32","nodeType":"YulLiteral","src":"7088:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7079:3:32","nodeType":"YulIdentifier","src":"7079:3:32"},"nativeSrc":"7079:14:32","nodeType":"YulFunctionCall","src":"7079:14:32"},"variableNames":[{"name":"updatedPos","nativeSrc":"7065:10:32","nodeType":"YulIdentifier","src":"7065:10:32"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"6920:179:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6973:6:32","nodeType":"YulTypedName","src":"6973:6:32","type":""},{"name":"pos","nativeSrc":"6981:3:32","nodeType":"YulTypedName","src":"6981:3:32","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6989:10:32","nodeType":"YulTypedName","src":"6989:10:32","type":""}],"src":"6920:179:32"},{"body":{"nativeSrc":"7180:38:32","nodeType":"YulBlock","src":"7180:38:32","statements":[{"nativeSrc":"7190:22:32","nodeType":"YulAssignment","src":"7190:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"7202:3:32","nodeType":"YulIdentifier","src":"7202:3:32"},{"kind":"number","nativeSrc":"7207:4:32","nodeType":"YulLiteral","src":"7207:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7198:3:32","nodeType":"YulIdentifier","src":"7198:3:32"},"nativeSrc":"7198:14:32","nodeType":"YulFunctionCall","src":"7198:14:32"},"variableNames":[{"name":"next","nativeSrc":"7190:4:32","nodeType":"YulIdentifier","src":"7190:4:32"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7105:113:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7167:3:32","nodeType":"YulTypedName","src":"7167:3:32","type":""}],"returnVariables":[{"name":"next","nativeSrc":"7175:4:32","nodeType":"YulTypedName","src":"7175:4:32","type":""}],"src":"7105:113:32"},{"body":{"nativeSrc":"7378:608:32","nodeType":"YulBlock","src":"7378:608:32","statements":[{"nativeSrc":"7388:68:32","nodeType":"YulVariableDeclaration","src":"7388:68:32","value":{"arguments":[{"name":"value","nativeSrc":"7450:5:32","nodeType":"YulIdentifier","src":"7450:5:32"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7402:47:32","nodeType":"YulIdentifier","src":"7402:47:32"},"nativeSrc":"7402:54:32","nodeType":"YulFunctionCall","src":"7402:54:32"},"variables":[{"name":"length","nativeSrc":"7392:6:32","nodeType":"YulTypedName","src":"7392:6:32","type":""}]},{"nativeSrc":"7465:93:32","nodeType":"YulAssignment","src":"7465:93:32","value":{"arguments":[{"name":"pos","nativeSrc":"7546:3:32","nodeType":"YulIdentifier","src":"7546:3:32"},{"name":"length","nativeSrc":"7551:6:32","nodeType":"YulIdentifier","src":"7551:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7472:73:32","nodeType":"YulIdentifier","src":"7472:73:32"},"nativeSrc":"7472:86:32","nodeType":"YulFunctionCall","src":"7472:86:32"},"variableNames":[{"name":"pos","nativeSrc":"7465:3:32","nodeType":"YulIdentifier","src":"7465:3:32"}]},{"nativeSrc":"7567:71:32","nodeType":"YulVariableDeclaration","src":"7567:71:32","value":{"arguments":[{"name":"value","nativeSrc":"7632:5:32","nodeType":"YulIdentifier","src":"7632:5:32"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7582:49:32","nodeType":"YulIdentifier","src":"7582:49:32"},"nativeSrc":"7582:56:32","nodeType":"YulFunctionCall","src":"7582:56:32"},"variables":[{"name":"baseRef","nativeSrc":"7571:7:32","nodeType":"YulTypedName","src":"7571:7:32","type":""}]},{"nativeSrc":"7647:21:32","nodeType":"YulVariableDeclaration","src":"7647:21:32","value":{"name":"baseRef","nativeSrc":"7661:7:32","nodeType":"YulIdentifier","src":"7661:7:32"},"variables":[{"name":"srcPtr","nativeSrc":"7651:6:32","nodeType":"YulTypedName","src":"7651:6:32","type":""}]},{"body":{"nativeSrc":"7737:224:32","nodeType":"YulBlock","src":"7737:224:32","statements":[{"nativeSrc":"7751:34:32","nodeType":"YulVariableDeclaration","src":"7751:34:32","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7778:6:32","nodeType":"YulIdentifier","src":"7778:6:32"}],"functionName":{"name":"mload","nativeSrc":"7772:5:32","nodeType":"YulIdentifier","src":"7772:5:32"},"nativeSrc":"7772:13:32","nodeType":"YulFunctionCall","src":"7772:13:32"},"variables":[{"name":"elementValue0","nativeSrc":"7755:13:32","nodeType":"YulTypedName","src":"7755:13:32","type":""}]},{"nativeSrc":"7798:70:32","nodeType":"YulAssignment","src":"7798:70:32","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7849:13:32","nodeType":"YulIdentifier","src":"7849:13:32"},{"name":"pos","nativeSrc":"7864:3:32","nodeType":"YulIdentifier","src":"7864:3:32"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7805:43:32","nodeType":"YulIdentifier","src":"7805:43:32"},"nativeSrc":"7805:63:32","nodeType":"YulFunctionCall","src":"7805:63:32"},"variableNames":[{"name":"pos","nativeSrc":"7798:3:32","nodeType":"YulIdentifier","src":"7798:3:32"}]},{"nativeSrc":"7881:70:32","nodeType":"YulAssignment","src":"7881:70:32","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7944:6:32","nodeType":"YulIdentifier","src":"7944:6:32"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7891:52:32","nodeType":"YulIdentifier","src":"7891:52:32"},"nativeSrc":"7891:60:32","nodeType":"YulFunctionCall","src":"7891:60:32"},"variableNames":[{"name":"srcPtr","nativeSrc":"7881:6:32","nodeType":"YulIdentifier","src":"7881:6:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7699:1:32","nodeType":"YulIdentifier","src":"7699:1:32"},{"name":"length","nativeSrc":"7702:6:32","nodeType":"YulIdentifier","src":"7702:6:32"}],"functionName":{"name":"lt","nativeSrc":"7696:2:32","nodeType":"YulIdentifier","src":"7696:2:32"},"nativeSrc":"7696:13:32","nodeType":"YulFunctionCall","src":"7696:13:32"},"nativeSrc":"7677:284:32","nodeType":"YulForLoop","post":{"nativeSrc":"7710:18:32","nodeType":"YulBlock","src":"7710:18:32","statements":[{"nativeSrc":"7712:14:32","nodeType":"YulAssignment","src":"7712:14:32","value":{"arguments":[{"name":"i","nativeSrc":"7721:1:32","nodeType":"YulIdentifier","src":"7721:1:32"},{"kind":"number","nativeSrc":"7724:1:32","nodeType":"YulLiteral","src":"7724:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7717:3:32","nodeType":"YulIdentifier","src":"7717:3:32"},"nativeSrc":"7717:9:32","nodeType":"YulFunctionCall","src":"7717:9:32"},"variableNames":[{"name":"i","nativeSrc":"7712:1:32","nodeType":"YulIdentifier","src":"7712:1:32"}]}]},"pre":{"nativeSrc":"7681:14:32","nodeType":"YulBlock","src":"7681:14:32","statements":[{"nativeSrc":"7683:10:32","nodeType":"YulVariableDeclaration","src":"7683:10:32","value":{"kind":"number","nativeSrc":"7692:1:32","nodeType":"YulLiteral","src":"7692:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7687:1:32","nodeType":"YulTypedName","src":"7687:1:32","type":""}]}]},"src":"7677:284:32"},{"nativeSrc":"7970:10:32","nodeType":"YulAssignment","src":"7970:10:32","value":{"name":"pos","nativeSrc":"7977:3:32","nodeType":"YulIdentifier","src":"7977:3:32"},"variableNames":[{"name":"end","nativeSrc":"7970:3:32","nodeType":"YulIdentifier","src":"7970:3:32"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7254:732:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7357:5:32","nodeType":"YulTypedName","src":"7357:5:32","type":""},{"name":"pos","nativeSrc":"7364:3:32","nodeType":"YulTypedName","src":"7364:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7373:3:32","nodeType":"YulTypedName","src":"7373:3:32","type":""}],"src":"7254:732:32"},{"body":{"nativeSrc":"8346:861:32","nodeType":"YulBlock","src":"8346:861:32","statements":[{"nativeSrc":"8356:27:32","nodeType":"YulAssignment","src":"8356:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"8368:9:32","nodeType":"YulIdentifier","src":"8368:9:32"},{"kind":"number","nativeSrc":"8379:3:32","nodeType":"YulLiteral","src":"8379:3:32","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8364:3:32","nodeType":"YulIdentifier","src":"8364:3:32"},"nativeSrc":"8364:19:32","nodeType":"YulFunctionCall","src":"8364:19:32"},"variableNames":[{"name":"tail","nativeSrc":"8356:4:32","nodeType":"YulIdentifier","src":"8356:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8435:6:32","nodeType":"YulIdentifier","src":"8435:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"8448:9:32","nodeType":"YulIdentifier","src":"8448:9:32"},{"kind":"number","nativeSrc":"8459:1:32","nodeType":"YulLiteral","src":"8459:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8444:3:32","nodeType":"YulIdentifier","src":"8444:3:32"},"nativeSrc":"8444:17:32","nodeType":"YulFunctionCall","src":"8444:17:32"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8393:41:32","nodeType":"YulIdentifier","src":"8393:41:32"},"nativeSrc":"8393:69:32","nodeType":"YulFunctionCall","src":"8393:69:32"},"nativeSrc":"8393:69:32","nodeType":"YulExpressionStatement","src":"8393:69:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8483:9:32","nodeType":"YulIdentifier","src":"8483:9:32"},{"kind":"number","nativeSrc":"8494:2:32","nodeType":"YulLiteral","src":"8494:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8479:3:32","nodeType":"YulIdentifier","src":"8479:3:32"},"nativeSrc":"8479:18:32","nodeType":"YulFunctionCall","src":"8479:18:32"},{"arguments":[{"name":"tail","nativeSrc":"8503:4:32","nodeType":"YulIdentifier","src":"8503:4:32"},{"name":"headStart","nativeSrc":"8509:9:32","nodeType":"YulIdentifier","src":"8509:9:32"}],"functionName":{"name":"sub","nativeSrc":"8499:3:32","nodeType":"YulIdentifier","src":"8499:3:32"},"nativeSrc":"8499:20:32","nodeType":"YulFunctionCall","src":"8499:20:32"}],"functionName":{"name":"mstore","nativeSrc":"8472:6:32","nodeType":"YulIdentifier","src":"8472:6:32"},"nativeSrc":"8472:48:32","nodeType":"YulFunctionCall","src":"8472:48:32"},"nativeSrc":"8472:48:32","nodeType":"YulExpressionStatement","src":"8472:48:32"},{"nativeSrc":"8529:86:32","nodeType":"YulAssignment","src":"8529:86:32","value":{"arguments":[{"name":"value1","nativeSrc":"8601:6:32","nodeType":"YulIdentifier","src":"8601:6:32"},{"name":"tail","nativeSrc":"8610:4:32","nodeType":"YulIdentifier","src":"8610:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8537:63:32","nodeType":"YulIdentifier","src":"8537:63:32"},"nativeSrc":"8537:78:32","nodeType":"YulFunctionCall","src":"8537:78:32"},"variableNames":[{"name":"tail","nativeSrc":"8529:4:32","nodeType":"YulIdentifier","src":"8529:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8636:9:32","nodeType":"YulIdentifier","src":"8636:9:32"},{"kind":"number","nativeSrc":"8647:2:32","nodeType":"YulLiteral","src":"8647:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8632:3:32","nodeType":"YulIdentifier","src":"8632:3:32"},"nativeSrc":"8632:18:32","nodeType":"YulFunctionCall","src":"8632:18:32"},{"arguments":[{"name":"tail","nativeSrc":"8656:4:32","nodeType":"YulIdentifier","src":"8656:4:32"},{"name":"headStart","nativeSrc":"8662:9:32","nodeType":"YulIdentifier","src":"8662:9:32"}],"functionName":{"name":"sub","nativeSrc":"8652:3:32","nodeType":"YulIdentifier","src":"8652:3:32"},"nativeSrc":"8652:20:32","nodeType":"YulFunctionCall","src":"8652:20:32"}],"functionName":{"name":"mstore","nativeSrc":"8625:6:32","nodeType":"YulIdentifier","src":"8625:6:32"},"nativeSrc":"8625:48:32","nodeType":"YulFunctionCall","src":"8625:48:32"},"nativeSrc":"8625:48:32","nodeType":"YulExpressionStatement","src":"8625:48:32"},{"nativeSrc":"8682:86:32","nodeType":"YulAssignment","src":"8682:86:32","value":{"arguments":[{"name":"value2","nativeSrc":"8754:6:32","nodeType":"YulIdentifier","src":"8754:6:32"},{"name":"tail","nativeSrc":"8763:4:32","nodeType":"YulIdentifier","src":"8763:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8690:63:32","nodeType":"YulIdentifier","src":"8690:63:32"},"nativeSrc":"8690:78:32","nodeType":"YulFunctionCall","src":"8690:78:32"},"variableNames":[{"name":"tail","nativeSrc":"8682:4:32","nodeType":"YulIdentifier","src":"8682:4:32"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8822:6:32","nodeType":"YulIdentifier","src":"8822:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"8835:9:32","nodeType":"YulIdentifier","src":"8835:9:32"},{"kind":"number","nativeSrc":"8846:2:32","nodeType":"YulLiteral","src":"8846:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8831:3:32","nodeType":"YulIdentifier","src":"8831:3:32"},"nativeSrc":"8831:18:32","nodeType":"YulFunctionCall","src":"8831:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8778:43:32","nodeType":"YulIdentifier","src":"8778:43:32"},"nativeSrc":"8778:72:32","nodeType":"YulFunctionCall","src":"8778:72:32"},"nativeSrc":"8778:72:32","nodeType":"YulExpressionStatement","src":"8778:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8904:6:32","nodeType":"YulIdentifier","src":"8904:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"8917:9:32","nodeType":"YulIdentifier","src":"8917:9:32"},{"kind":"number","nativeSrc":"8928:3:32","nodeType":"YulLiteral","src":"8928:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8913:3:32","nodeType":"YulIdentifier","src":"8913:3:32"},"nativeSrc":"8913:19:32","nodeType":"YulFunctionCall","src":"8913:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8860:43:32","nodeType":"YulIdentifier","src":"8860:43:32"},"nativeSrc":"8860:73:32","nodeType":"YulFunctionCall","src":"8860:73:32"},"nativeSrc":"8860:73:32","nodeType":"YulExpressionStatement","src":"8860:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8987:6:32","nodeType":"YulIdentifier","src":"8987:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9000:9:32","nodeType":"YulIdentifier","src":"9000:9:32"},{"kind":"number","nativeSrc":"9011:3:32","nodeType":"YulLiteral","src":"9011:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8996:3:32","nodeType":"YulIdentifier","src":"8996:3:32"},"nativeSrc":"8996:19:32","nodeType":"YulFunctionCall","src":"8996:19:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8943:43:32","nodeType":"YulIdentifier","src":"8943:43:32"},"nativeSrc":"8943:73:32","nodeType":"YulFunctionCall","src":"8943:73:32"},"nativeSrc":"8943:73:32","nodeType":"YulExpressionStatement","src":"8943:73:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9037:9:32","nodeType":"YulIdentifier","src":"9037:9:32"},{"kind":"number","nativeSrc":"9048:3:32","nodeType":"YulLiteral","src":"9048:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9033:3:32","nodeType":"YulIdentifier","src":"9033:3:32"},"nativeSrc":"9033:19:32","nodeType":"YulFunctionCall","src":"9033:19:32"},{"arguments":[{"name":"tail","nativeSrc":"9058:4:32","nodeType":"YulIdentifier","src":"9058:4:32"},{"name":"headStart","nativeSrc":"9064:9:32","nodeType":"YulIdentifier","src":"9064:9:32"}],"functionName":{"name":"sub","nativeSrc":"9054:3:32","nodeType":"YulIdentifier","src":"9054:3:32"},"nativeSrc":"9054:20:32","nodeType":"YulFunctionCall","src":"9054:20:32"}],"functionName":{"name":"mstore","nativeSrc":"9026:6:32","nodeType":"YulIdentifier","src":"9026:6:32"},"nativeSrc":"9026:49:32","nodeType":"YulFunctionCall","src":"9026:49:32"},"nativeSrc":"9026:49:32","nodeType":"YulExpressionStatement","src":"9026:49:32"},{"nativeSrc":"9084:116:32","nodeType":"YulAssignment","src":"9084:116:32","value":{"arguments":[{"name":"value6","nativeSrc":"9186:6:32","nodeType":"YulIdentifier","src":"9186:6:32"},{"name":"tail","nativeSrc":"9195:4:32","nodeType":"YulIdentifier","src":"9195:4:32"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9092:93:32","nodeType":"YulIdentifier","src":"9092:93:32"},"nativeSrc":"9092:108:32","nodeType":"YulFunctionCall","src":"9092:108:32"},"variableNames":[{"name":"tail","nativeSrc":"9084:4:32","nodeType":"YulIdentifier","src":"9084:4:32"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7992:1215:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8270:9:32","nodeType":"YulTypedName","src":"8270:9:32","type":""},{"name":"value6","nativeSrc":"8282:6:32","nodeType":"YulTypedName","src":"8282:6:32","type":""},{"name":"value5","nativeSrc":"8290:6:32","nodeType":"YulTypedName","src":"8290:6:32","type":""},{"name":"value4","nativeSrc":"8298:6:32","nodeType":"YulTypedName","src":"8298:6:32","type":""},{"name":"value3","nativeSrc":"8306:6:32","nodeType":"YulTypedName","src":"8306:6:32","type":""},{"name":"value2","nativeSrc":"8314:6:32","nodeType":"YulTypedName","src":"8314:6:32","type":""},{"name":"value1","nativeSrc":"8322:6:32","nodeType":"YulTypedName","src":"8322:6:32","type":""},{"name":"value0","nativeSrc":"8330:6:32","nodeType":"YulTypedName","src":"8330:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8341:4:32","nodeType":"YulTypedName","src":"8341:4:32","type":""}],"src":"7992:1215:32"},{"body":{"nativeSrc":"9311:124:32","nodeType":"YulBlock","src":"9311:124:32","statements":[{"nativeSrc":"9321:26:32","nodeType":"YulAssignment","src":"9321:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"9333:9:32","nodeType":"YulIdentifier","src":"9333:9:32"},{"kind":"number","nativeSrc":"9344:2:32","nodeType":"YulLiteral","src":"9344:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9329:3:32","nodeType":"YulIdentifier","src":"9329:3:32"},"nativeSrc":"9329:18:32","nodeType":"YulFunctionCall","src":"9329:18:32"},"variableNames":[{"name":"tail","nativeSrc":"9321:4:32","nodeType":"YulIdentifier","src":"9321:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9401:6:32","nodeType":"YulIdentifier","src":"9401:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9414:9:32","nodeType":"YulIdentifier","src":"9414:9:32"},{"kind":"number","nativeSrc":"9425:1:32","nodeType":"YulLiteral","src":"9425:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9410:3:32","nodeType":"YulIdentifier","src":"9410:3:32"},"nativeSrc":"9410:17:32","nodeType":"YulFunctionCall","src":"9410:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9357:43:32","nodeType":"YulIdentifier","src":"9357:43:32"},"nativeSrc":"9357:71:32","nodeType":"YulFunctionCall","src":"9357:71:32"},"nativeSrc":"9357:71:32","nodeType":"YulExpressionStatement","src":"9357:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9213:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9283:9:32","nodeType":"YulTypedName","src":"9283:9:32","type":""},{"name":"value0","nativeSrc":"9295:6:32","nodeType":"YulTypedName","src":"9295:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9306:4:32","nodeType":"YulTypedName","src":"9306:4:32","type":""}],"src":"9213:222:32"},{"body":{"nativeSrc":"9482:77:32","nodeType":"YulBlock","src":"9482:77:32","statements":[{"body":{"nativeSrc":"9537:16:32","nodeType":"YulBlock","src":"9537:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9546:1:32","nodeType":"YulLiteral","src":"9546:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"9549:1:32","nodeType":"YulLiteral","src":"9549:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9539:6:32","nodeType":"YulIdentifier","src":"9539:6:32"},"nativeSrc":"9539:12:32","nodeType":"YulFunctionCall","src":"9539:12:32"},"nativeSrc":"9539:12:32","nodeType":"YulExpressionStatement","src":"9539:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9505:5:32","nodeType":"YulIdentifier","src":"9505:5:32"},{"arguments":[{"name":"value","nativeSrc":"9528:5:32","nodeType":"YulIdentifier","src":"9528:5:32"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9512:15:32","nodeType":"YulIdentifier","src":"9512:15:32"},"nativeSrc":"9512:22:32","nodeType":"YulFunctionCall","src":"9512:22:32"}],"functionName":{"name":"eq","nativeSrc":"9502:2:32","nodeType":"YulIdentifier","src":"9502:2:32"},"nativeSrc":"9502:33:32","nodeType":"YulFunctionCall","src":"9502:33:32"}],"functionName":{"name":"iszero","nativeSrc":"9495:6:32","nodeType":"YulIdentifier","src":"9495:6:32"},"nativeSrc":"9495:41:32","nodeType":"YulFunctionCall","src":"9495:41:32"},"nativeSrc":"9492:61:32","nodeType":"YulIf","src":"9492:61:32"}]},"name":"validator_revert_t_uint8","nativeSrc":"9441:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9475:5:32","nodeType":"YulTypedName","src":"9475:5:32","type":""}],"src":"9441:118:32"},{"body":{"nativeSrc":"9615:85:32","nodeType":"YulBlock","src":"9615:85:32","statements":[{"nativeSrc":"9625:29:32","nodeType":"YulAssignment","src":"9625:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"9647:6:32","nodeType":"YulIdentifier","src":"9647:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"9634:12:32","nodeType":"YulIdentifier","src":"9634:12:32"},"nativeSrc":"9634:20:32","nodeType":"YulFunctionCall","src":"9634:20:32"},"variableNames":[{"name":"value","nativeSrc":"9625:5:32","nodeType":"YulIdentifier","src":"9625:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9688:5:32","nodeType":"YulIdentifier","src":"9688:5:32"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"9663:24:32","nodeType":"YulIdentifier","src":"9663:24:32"},"nativeSrc":"9663:31:32","nodeType":"YulFunctionCall","src":"9663:31:32"},"nativeSrc":"9663:31:32","nodeType":"YulExpressionStatement","src":"9663:31:32"}]},"name":"abi_decode_t_uint8","nativeSrc":"9565:135:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9593:6:32","nodeType":"YulTypedName","src":"9593:6:32","type":""},{"name":"end","nativeSrc":"9601:3:32","nodeType":"YulTypedName","src":"9601:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9609:5:32","nodeType":"YulTypedName","src":"9609:5:32","type":""}],"src":"9565:135:32"},{"body":{"nativeSrc":"9749:79:32","nodeType":"YulBlock","src":"9749:79:32","statements":[{"body":{"nativeSrc":"9806:16:32","nodeType":"YulBlock","src":"9806:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9815:1:32","nodeType":"YulLiteral","src":"9815:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"9818:1:32","nodeType":"YulLiteral","src":"9818:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9808:6:32","nodeType":"YulIdentifier","src":"9808:6:32"},"nativeSrc":"9808:12:32","nodeType":"YulFunctionCall","src":"9808:12:32"},"nativeSrc":"9808:12:32","nodeType":"YulExpressionStatement","src":"9808:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9772:5:32","nodeType":"YulIdentifier","src":"9772:5:32"},{"arguments":[{"name":"value","nativeSrc":"9797:5:32","nodeType":"YulIdentifier","src":"9797:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9779:17:32","nodeType":"YulIdentifier","src":"9779:17:32"},"nativeSrc":"9779:24:32","nodeType":"YulFunctionCall","src":"9779:24:32"}],"functionName":{"name":"eq","nativeSrc":"9769:2:32","nodeType":"YulIdentifier","src":"9769:2:32"},"nativeSrc":"9769:35:32","nodeType":"YulFunctionCall","src":"9769:35:32"}],"functionName":{"name":"iszero","nativeSrc":"9762:6:32","nodeType":"YulIdentifier","src":"9762:6:32"},"nativeSrc":"9762:43:32","nodeType":"YulFunctionCall","src":"9762:43:32"},"nativeSrc":"9759:63:32","nodeType":"YulIf","src":"9759:63:32"}]},"name":"validator_revert_t_bytes32","nativeSrc":"9706:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9742:5:32","nodeType":"YulTypedName","src":"9742:5:32","type":""}],"src":"9706:122:32"},{"body":{"nativeSrc":"9886:87:32","nodeType":"YulBlock","src":"9886:87:32","statements":[{"nativeSrc":"9896:29:32","nodeType":"YulAssignment","src":"9896:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"9918:6:32","nodeType":"YulIdentifier","src":"9918:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"9905:12:32","nodeType":"YulIdentifier","src":"9905:12:32"},"nativeSrc":"9905:20:32","nodeType":"YulFunctionCall","src":"9905:20:32"},"variableNames":[{"name":"value","nativeSrc":"9896:5:32","nodeType":"YulIdentifier","src":"9896:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9961:5:32","nodeType":"YulIdentifier","src":"9961:5:32"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"9934:26:32","nodeType":"YulIdentifier","src":"9934:26:32"},"nativeSrc":"9934:33:32","nodeType":"YulFunctionCall","src":"9934:33:32"},"nativeSrc":"9934:33:32","nodeType":"YulExpressionStatement","src":"9934:33:32"}]},"name":"abi_decode_t_bytes32","nativeSrc":"9834:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9864:6:32","nodeType":"YulTypedName","src":"9864:6:32","type":""},{"name":"end","nativeSrc":"9872:3:32","nodeType":"YulTypedName","src":"9872:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9880:5:32","nodeType":"YulTypedName","src":"9880:5:32","type":""}],"src":"9834:139:32"},{"body":{"nativeSrc":"10145:1033:32","nodeType":"YulBlock","src":"10145:1033:32","statements":[{"body":{"nativeSrc":"10192:83:32","nodeType":"YulBlock","src":"10192:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10194:77:32","nodeType":"YulIdentifier","src":"10194:77:32"},"nativeSrc":"10194:79:32","nodeType":"YulFunctionCall","src":"10194:79:32"},"nativeSrc":"10194:79:32","nodeType":"YulExpressionStatement","src":"10194:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10166:7:32","nodeType":"YulIdentifier","src":"10166:7:32"},{"name":"headStart","nativeSrc":"10175:9:32","nodeType":"YulIdentifier","src":"10175:9:32"}],"functionName":{"name":"sub","nativeSrc":"10162:3:32","nodeType":"YulIdentifier","src":"10162:3:32"},"nativeSrc":"10162:23:32","nodeType":"YulFunctionCall","src":"10162:23:32"},{"kind":"number","nativeSrc":"10187:3:32","nodeType":"YulLiteral","src":"10187:3:32","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"10158:3:32","nodeType":"YulIdentifier","src":"10158:3:32"},"nativeSrc":"10158:33:32","nodeType":"YulFunctionCall","src":"10158:33:32"},"nativeSrc":"10155:120:32","nodeType":"YulIf","src":"10155:120:32"},{"nativeSrc":"10285:117:32","nodeType":"YulBlock","src":"10285:117:32","statements":[{"nativeSrc":"10300:15:32","nodeType":"YulVariableDeclaration","src":"10300:15:32","value":{"kind":"number","nativeSrc":"10314:1:32","nodeType":"YulLiteral","src":"10314:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10304:6:32","nodeType":"YulTypedName","src":"10304:6:32","type":""}]},{"nativeSrc":"10329:63:32","nodeType":"YulAssignment","src":"10329:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10364:9:32","nodeType":"YulIdentifier","src":"10364:9:32"},{"name":"offset","nativeSrc":"10375:6:32","nodeType":"YulIdentifier","src":"10375:6:32"}],"functionName":{"name":"add","nativeSrc":"10360:3:32","nodeType":"YulIdentifier","src":"10360:3:32"},"nativeSrc":"10360:22:32","nodeType":"YulFunctionCall","src":"10360:22:32"},{"name":"dataEnd","nativeSrc":"10384:7:32","nodeType":"YulIdentifier","src":"10384:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10339:20:32","nodeType":"YulIdentifier","src":"10339:20:32"},"nativeSrc":"10339:53:32","nodeType":"YulFunctionCall","src":"10339:53:32"},"variableNames":[{"name":"value0","nativeSrc":"10329:6:32","nodeType":"YulIdentifier","src":"10329:6:32"}]}]},{"nativeSrc":"10412:118:32","nodeType":"YulBlock","src":"10412:118:32","statements":[{"nativeSrc":"10427:16:32","nodeType":"YulVariableDeclaration","src":"10427:16:32","value":{"kind":"number","nativeSrc":"10441:2:32","nodeType":"YulLiteral","src":"10441:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10431:6:32","nodeType":"YulTypedName","src":"10431:6:32","type":""}]},{"nativeSrc":"10457:63:32","nodeType":"YulAssignment","src":"10457:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10492:9:32","nodeType":"YulIdentifier","src":"10492:9:32"},{"name":"offset","nativeSrc":"10503:6:32","nodeType":"YulIdentifier","src":"10503:6:32"}],"functionName":{"name":"add","nativeSrc":"10488:3:32","nodeType":"YulIdentifier","src":"10488:3:32"},"nativeSrc":"10488:22:32","nodeType":"YulFunctionCall","src":"10488:22:32"},{"name":"dataEnd","nativeSrc":"10512:7:32","nodeType":"YulIdentifier","src":"10512:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10467:20:32","nodeType":"YulIdentifier","src":"10467:20:32"},"nativeSrc":"10467:53:32","nodeType":"YulFunctionCall","src":"10467:53:32"},"variableNames":[{"name":"value1","nativeSrc":"10457:6:32","nodeType":"YulIdentifier","src":"10457:6:32"}]}]},{"nativeSrc":"10540:118:32","nodeType":"YulBlock","src":"10540:118:32","statements":[{"nativeSrc":"10555:16:32","nodeType":"YulVariableDeclaration","src":"10555:16:32","value":{"kind":"number","nativeSrc":"10569:2:32","nodeType":"YulLiteral","src":"10569:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"10559:6:32","nodeType":"YulTypedName","src":"10559:6:32","type":""}]},{"nativeSrc":"10585:63:32","nodeType":"YulAssignment","src":"10585:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10620:9:32","nodeType":"YulIdentifier","src":"10620:9:32"},{"name":"offset","nativeSrc":"10631:6:32","nodeType":"YulIdentifier","src":"10631:6:32"}],"functionName":{"name":"add","nativeSrc":"10616:3:32","nodeType":"YulIdentifier","src":"10616:3:32"},"nativeSrc":"10616:22:32","nodeType":"YulFunctionCall","src":"10616:22:32"},{"name":"dataEnd","nativeSrc":"10640:7:32","nodeType":"YulIdentifier","src":"10640:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10595:20:32","nodeType":"YulIdentifier","src":"10595:20:32"},"nativeSrc":"10595:53:32","nodeType":"YulFunctionCall","src":"10595:53:32"},"variableNames":[{"name":"value2","nativeSrc":"10585:6:32","nodeType":"YulIdentifier","src":"10585:6:32"}]}]},{"nativeSrc":"10668:118:32","nodeType":"YulBlock","src":"10668:118:32","statements":[{"nativeSrc":"10683:16:32","nodeType":"YulVariableDeclaration","src":"10683:16:32","value":{"kind":"number","nativeSrc":"10697:2:32","nodeType":"YulLiteral","src":"10697:2:32","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"10687:6:32","nodeType":"YulTypedName","src":"10687:6:32","type":""}]},{"nativeSrc":"10713:63:32","nodeType":"YulAssignment","src":"10713:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10748:9:32","nodeType":"YulIdentifier","src":"10748:9:32"},{"name":"offset","nativeSrc":"10759:6:32","nodeType":"YulIdentifier","src":"10759:6:32"}],"functionName":{"name":"add","nativeSrc":"10744:3:32","nodeType":"YulIdentifier","src":"10744:3:32"},"nativeSrc":"10744:22:32","nodeType":"YulFunctionCall","src":"10744:22:32"},{"name":"dataEnd","nativeSrc":"10768:7:32","nodeType":"YulIdentifier","src":"10768:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10723:20:32","nodeType":"YulIdentifier","src":"10723:20:32"},"nativeSrc":"10723:53:32","nodeType":"YulFunctionCall","src":"10723:53:32"},"variableNames":[{"name":"value3","nativeSrc":"10713:6:32","nodeType":"YulIdentifier","src":"10713:6:32"}]}]},{"nativeSrc":"10796:117:32","nodeType":"YulBlock","src":"10796:117:32","statements":[{"nativeSrc":"10811:17:32","nodeType":"YulVariableDeclaration","src":"10811:17:32","value":{"kind":"number","nativeSrc":"10825:3:32","nodeType":"YulLiteral","src":"10825:3:32","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"10815:6:32","nodeType":"YulTypedName","src":"10815:6:32","type":""}]},{"nativeSrc":"10842:61:32","nodeType":"YulAssignment","src":"10842:61:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10875:9:32","nodeType":"YulIdentifier","src":"10875:9:32"},{"name":"offset","nativeSrc":"10886:6:32","nodeType":"YulIdentifier","src":"10886:6:32"}],"functionName":{"name":"add","nativeSrc":"10871:3:32","nodeType":"YulIdentifier","src":"10871:3:32"},"nativeSrc":"10871:22:32","nodeType":"YulFunctionCall","src":"10871:22:32"},{"name":"dataEnd","nativeSrc":"10895:7:32","nodeType":"YulIdentifier","src":"10895:7:32"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"10852:18:32","nodeType":"YulIdentifier","src":"10852:18:32"},"nativeSrc":"10852:51:32","nodeType":"YulFunctionCall","src":"10852:51:32"},"variableNames":[{"name":"value4","nativeSrc":"10842:6:32","nodeType":"YulIdentifier","src":"10842:6:32"}]}]},{"nativeSrc":"10923:119:32","nodeType":"YulBlock","src":"10923:119:32","statements":[{"nativeSrc":"10938:17:32","nodeType":"YulVariableDeclaration","src":"10938:17:32","value":{"kind":"number","nativeSrc":"10952:3:32","nodeType":"YulLiteral","src":"10952:3:32","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"10942:6:32","nodeType":"YulTypedName","src":"10942:6:32","type":""}]},{"nativeSrc":"10969:63:32","nodeType":"YulAssignment","src":"10969:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11004:9:32","nodeType":"YulIdentifier","src":"11004:9:32"},{"name":"offset","nativeSrc":"11015:6:32","nodeType":"YulIdentifier","src":"11015:6:32"}],"functionName":{"name":"add","nativeSrc":"11000:3:32","nodeType":"YulIdentifier","src":"11000:3:32"},"nativeSrc":"11000:22:32","nodeType":"YulFunctionCall","src":"11000:22:32"},{"name":"dataEnd","nativeSrc":"11024:7:32","nodeType":"YulIdentifier","src":"11024:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10979:20:32","nodeType":"YulIdentifier","src":"10979:20:32"},"nativeSrc":"10979:53:32","nodeType":"YulFunctionCall","src":"10979:53:32"},"variableNames":[{"name":"value5","nativeSrc":"10969:6:32","nodeType":"YulIdentifier","src":"10969:6:32"}]}]},{"nativeSrc":"11052:119:32","nodeType":"YulBlock","src":"11052:119:32","statements":[{"nativeSrc":"11067:17:32","nodeType":"YulVariableDeclaration","src":"11067:17:32","value":{"kind":"number","nativeSrc":"11081:3:32","nodeType":"YulLiteral","src":"11081:3:32","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"11071:6:32","nodeType":"YulTypedName","src":"11071:6:32","type":""}]},{"nativeSrc":"11098:63:32","nodeType":"YulAssignment","src":"11098:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11133:9:32","nodeType":"YulIdentifier","src":"11133:9:32"},{"name":"offset","nativeSrc":"11144:6:32","nodeType":"YulIdentifier","src":"11144:6:32"}],"functionName":{"name":"add","nativeSrc":"11129:3:32","nodeType":"YulIdentifier","src":"11129:3:32"},"nativeSrc":"11129:22:32","nodeType":"YulFunctionCall","src":"11129:22:32"},{"name":"dataEnd","nativeSrc":"11153:7:32","nodeType":"YulIdentifier","src":"11153:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"11108:20:32","nodeType":"YulIdentifier","src":"11108:20:32"},"nativeSrc":"11108:53:32","nodeType":"YulFunctionCall","src":"11108:53:32"},"variableNames":[{"name":"value6","nativeSrc":"11098:6:32","nodeType":"YulIdentifier","src":"11098:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"9979:1199:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10067:9:32","nodeType":"YulTypedName","src":"10067:9:32","type":""},{"name":"dataEnd","nativeSrc":"10078:7:32","nodeType":"YulTypedName","src":"10078:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10090:6:32","nodeType":"YulTypedName","src":"10090:6:32","type":""},{"name":"value1","nativeSrc":"10098:6:32","nodeType":"YulTypedName","src":"10098:6:32","type":""},{"name":"value2","nativeSrc":"10106:6:32","nodeType":"YulTypedName","src":"10106:6:32","type":""},{"name":"value3","nativeSrc":"10114:6:32","nodeType":"YulTypedName","src":"10114:6:32","type":""},{"name":"value4","nativeSrc":"10122:6:32","nodeType":"YulTypedName","src":"10122:6:32","type":""},{"name":"value5","nativeSrc":"10130:6:32","nodeType":"YulTypedName","src":"10130:6:32","type":""},{"name":"value6","nativeSrc":"10138:6:32","nodeType":"YulTypedName","src":"10138:6:32","type":""}],"src":"9979:1199:32"},{"body":{"nativeSrc":"11267:391:32","nodeType":"YulBlock","src":"11267:391:32","statements":[{"body":{"nativeSrc":"11313:83:32","nodeType":"YulBlock","src":"11313:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11315:77:32","nodeType":"YulIdentifier","src":"11315:77:32"},"nativeSrc":"11315:79:32","nodeType":"YulFunctionCall","src":"11315:79:32"},"nativeSrc":"11315:79:32","nodeType":"YulExpressionStatement","src":"11315:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11288:7:32","nodeType":"YulIdentifier","src":"11288:7:32"},{"name":"headStart","nativeSrc":"11297:9:32","nodeType":"YulIdentifier","src":"11297:9:32"}],"functionName":{"name":"sub","nativeSrc":"11284:3:32","nodeType":"YulIdentifier","src":"11284:3:32"},"nativeSrc":"11284:23:32","nodeType":"YulFunctionCall","src":"11284:23:32"},{"kind":"number","nativeSrc":"11309:2:32","nodeType":"YulLiteral","src":"11309:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11280:3:32","nodeType":"YulIdentifier","src":"11280:3:32"},"nativeSrc":"11280:32:32","nodeType":"YulFunctionCall","src":"11280:32:32"},"nativeSrc":"11277:119:32","nodeType":"YulIf","src":"11277:119:32"},{"nativeSrc":"11406:117:32","nodeType":"YulBlock","src":"11406:117:32","statements":[{"nativeSrc":"11421:15:32","nodeType":"YulVariableDeclaration","src":"11421:15:32","value":{"kind":"number","nativeSrc":"11435:1:32","nodeType":"YulLiteral","src":"11435:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11425:6:32","nodeType":"YulTypedName","src":"11425:6:32","type":""}]},{"nativeSrc":"11450:63:32","nodeType":"YulAssignment","src":"11450:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11485:9:32","nodeType":"YulIdentifier","src":"11485:9:32"},{"name":"offset","nativeSrc":"11496:6:32","nodeType":"YulIdentifier","src":"11496:6:32"}],"functionName":{"name":"add","nativeSrc":"11481:3:32","nodeType":"YulIdentifier","src":"11481:3:32"},"nativeSrc":"11481:22:32","nodeType":"YulFunctionCall","src":"11481:22:32"},{"name":"dataEnd","nativeSrc":"11505:7:32","nodeType":"YulIdentifier","src":"11505:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11460:20:32","nodeType":"YulIdentifier","src":"11460:20:32"},"nativeSrc":"11460:53:32","nodeType":"YulFunctionCall","src":"11460:53:32"},"variableNames":[{"name":"value0","nativeSrc":"11450:6:32","nodeType":"YulIdentifier","src":"11450:6:32"}]}]},{"nativeSrc":"11533:118:32","nodeType":"YulBlock","src":"11533:118:32","statements":[{"nativeSrc":"11548:16:32","nodeType":"YulVariableDeclaration","src":"11548:16:32","value":{"kind":"number","nativeSrc":"11562:2:32","nodeType":"YulLiteral","src":"11562:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11552:6:32","nodeType":"YulTypedName","src":"11552:6:32","type":""}]},{"nativeSrc":"11578:63:32","nodeType":"YulAssignment","src":"11578:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11613:9:32","nodeType":"YulIdentifier","src":"11613:9:32"},{"name":"offset","nativeSrc":"11624:6:32","nodeType":"YulIdentifier","src":"11624:6:32"}],"functionName":{"name":"add","nativeSrc":"11609:3:32","nodeType":"YulIdentifier","src":"11609:3:32"},"nativeSrc":"11609:22:32","nodeType":"YulFunctionCall","src":"11609:22:32"},{"name":"dataEnd","nativeSrc":"11633:7:32","nodeType":"YulIdentifier","src":"11633:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11588:20:32","nodeType":"YulIdentifier","src":"11588:20:32"},"nativeSrc":"11588:53:32","nodeType":"YulFunctionCall","src":"11588:53:32"},"variableNames":[{"name":"value1","nativeSrc":"11578:6:32","nodeType":"YulIdentifier","src":"11578:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"11184:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11229:9:32","nodeType":"YulTypedName","src":"11229:9:32","type":""},{"name":"dataEnd","nativeSrc":"11240:7:32","nodeType":"YulTypedName","src":"11240:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11252:6:32","nodeType":"YulTypedName","src":"11252:6:32","type":""},{"name":"value1","nativeSrc":"11260:6:32","nodeType":"YulTypedName","src":"11260:6:32","type":""}],"src":"11184:474:32"},{"body":{"nativeSrc":"11692:152:32","nodeType":"YulBlock","src":"11692:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11709:1:32","nodeType":"YulLiteral","src":"11709:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"11712:77:32","nodeType":"YulLiteral","src":"11712:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11702:6:32","nodeType":"YulIdentifier","src":"11702:6:32"},"nativeSrc":"11702:88:32","nodeType":"YulFunctionCall","src":"11702:88:32"},"nativeSrc":"11702:88:32","nodeType":"YulExpressionStatement","src":"11702:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11806:1:32","nodeType":"YulLiteral","src":"11806:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"11809:4:32","nodeType":"YulLiteral","src":"11809:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11799:6:32","nodeType":"YulIdentifier","src":"11799:6:32"},"nativeSrc":"11799:15:32","nodeType":"YulFunctionCall","src":"11799:15:32"},"nativeSrc":"11799:15:32","nodeType":"YulExpressionStatement","src":"11799:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11830:1:32","nodeType":"YulLiteral","src":"11830:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"11833:4:32","nodeType":"YulLiteral","src":"11833:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11823:6:32","nodeType":"YulIdentifier","src":"11823:6:32"},"nativeSrc":"11823:15:32","nodeType":"YulFunctionCall","src":"11823:15:32"},"nativeSrc":"11823:15:32","nodeType":"YulExpressionStatement","src":"11823:15:32"}]},"name":"panic_error_0x22","nativeSrc":"11664:180:32","nodeType":"YulFunctionDefinition","src":"11664:180:32"},{"body":{"nativeSrc":"11901:269:32","nodeType":"YulBlock","src":"11901:269:32","statements":[{"nativeSrc":"11911:22:32","nodeType":"YulAssignment","src":"11911:22:32","value":{"arguments":[{"name":"data","nativeSrc":"11925:4:32","nodeType":"YulIdentifier","src":"11925:4:32"},{"kind":"number","nativeSrc":"11931:1:32","nodeType":"YulLiteral","src":"11931:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"11921:3:32","nodeType":"YulIdentifier","src":"11921:3:32"},"nativeSrc":"11921:12:32","nodeType":"YulFunctionCall","src":"11921:12:32"},"variableNames":[{"name":"length","nativeSrc":"11911:6:32","nodeType":"YulIdentifier","src":"11911:6:32"}]},{"nativeSrc":"11942:38:32","nodeType":"YulVariableDeclaration","src":"11942:38:32","value":{"arguments":[{"name":"data","nativeSrc":"11972:4:32","nodeType":"YulIdentifier","src":"11972:4:32"},{"kind":"number","nativeSrc":"11978:1:32","nodeType":"YulLiteral","src":"11978:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11968:3:32","nodeType":"YulIdentifier","src":"11968:3:32"},"nativeSrc":"11968:12:32","nodeType":"YulFunctionCall","src":"11968:12:32"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11946:18:32","nodeType":"YulTypedName","src":"11946:18:32","type":""}]},{"body":{"nativeSrc":"12019:51:32","nodeType":"YulBlock","src":"12019:51:32","statements":[{"nativeSrc":"12033:27:32","nodeType":"YulAssignment","src":"12033:27:32","value":{"arguments":[{"name":"length","nativeSrc":"12047:6:32","nodeType":"YulIdentifier","src":"12047:6:32"},{"kind":"number","nativeSrc":"12055:4:32","nodeType":"YulLiteral","src":"12055:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12043:3:32","nodeType":"YulIdentifier","src":"12043:3:32"},"nativeSrc":"12043:17:32","nodeType":"YulFunctionCall","src":"12043:17:32"},"variableNames":[{"name":"length","nativeSrc":"12033:6:32","nodeType":"YulIdentifier","src":"12033:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11999:18:32","nodeType":"YulIdentifier","src":"11999:18:32"}],"functionName":{"name":"iszero","nativeSrc":"11992:6:32","nodeType":"YulIdentifier","src":"11992:6:32"},"nativeSrc":"11992:26:32","nodeType":"YulFunctionCall","src":"11992:26:32"},"nativeSrc":"11989:81:32","nodeType":"YulIf","src":"11989:81:32"},{"body":{"nativeSrc":"12122:42:32","nodeType":"YulBlock","src":"12122:42:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"12136:16:32","nodeType":"YulIdentifier","src":"12136:16:32"},"nativeSrc":"12136:18:32","nodeType":"YulFunctionCall","src":"12136:18:32"},"nativeSrc":"12136:18:32","nodeType":"YulExpressionStatement","src":"12136:18:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12086:18:32","nodeType":"YulIdentifier","src":"12086:18:32"},{"arguments":[{"name":"length","nativeSrc":"12109:6:32","nodeType":"YulIdentifier","src":"12109:6:32"},{"kind":"number","nativeSrc":"12117:2:32","nodeType":"YulLiteral","src":"12117:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12106:2:32","nodeType":"YulIdentifier","src":"12106:2:32"},"nativeSrc":"12106:14:32","nodeType":"YulFunctionCall","src":"12106:14:32"}],"functionName":{"name":"eq","nativeSrc":"12083:2:32","nodeType":"YulIdentifier","src":"12083:2:32"},"nativeSrc":"12083:38:32","nodeType":"YulFunctionCall","src":"12083:38:32"},"nativeSrc":"12080:84:32","nodeType":"YulIf","src":"12080:84:32"}]},"name":"extract_byte_array_length","nativeSrc":"11850:320:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11885:4:32","nodeType":"YulTypedName","src":"11885:4:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11894:6:32","nodeType":"YulTypedName","src":"11894:6:32","type":""}],"src":"11850:320:32"},{"body":{"nativeSrc":"12204:152:32","nodeType":"YulBlock","src":"12204:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12221:1:32","nodeType":"YulLiteral","src":"12221:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"12224:77:32","nodeType":"YulLiteral","src":"12224:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12214:6:32","nodeType":"YulIdentifier","src":"12214:6:32"},"nativeSrc":"12214:88:32","nodeType":"YulFunctionCall","src":"12214:88:32"},"nativeSrc":"12214:88:32","nodeType":"YulExpressionStatement","src":"12214:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12318:1:32","nodeType":"YulLiteral","src":"12318:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"12321:4:32","nodeType":"YulLiteral","src":"12321:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"12311:6:32","nodeType":"YulIdentifier","src":"12311:6:32"},"nativeSrc":"12311:15:32","nodeType":"YulFunctionCall","src":"12311:15:32"},"nativeSrc":"12311:15:32","nodeType":"YulExpressionStatement","src":"12311:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12342:1:32","nodeType":"YulLiteral","src":"12342:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"12345:4:32","nodeType":"YulLiteral","src":"12345:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12335:6:32","nodeType":"YulIdentifier","src":"12335:6:32"},"nativeSrc":"12335:15:32","nodeType":"YulFunctionCall","src":"12335:15:32"},"nativeSrc":"12335:15:32","nodeType":"YulExpressionStatement","src":"12335:15:32"}]},"name":"panic_error_0x41","nativeSrc":"12176:180:32","nodeType":"YulFunctionDefinition","src":"12176:180:32"},{"body":{"nativeSrc":"12600:537:32","nodeType":"YulBlock","src":"12600:537:32","statements":[{"nativeSrc":"12610:27:32","nodeType":"YulAssignment","src":"12610:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"12622:9:32","nodeType":"YulIdentifier","src":"12622:9:32"},{"kind":"number","nativeSrc":"12633:3:32","nodeType":"YulLiteral","src":"12633:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12618:3:32","nodeType":"YulIdentifier","src":"12618:3:32"},"nativeSrc":"12618:19:32","nodeType":"YulFunctionCall","src":"12618:19:32"},"variableNames":[{"name":"tail","nativeSrc":"12610:4:32","nodeType":"YulIdentifier","src":"12610:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12691:6:32","nodeType":"YulIdentifier","src":"12691:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12704:9:32","nodeType":"YulIdentifier","src":"12704:9:32"},{"kind":"number","nativeSrc":"12715:1:32","nodeType":"YulLiteral","src":"12715:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12700:3:32","nodeType":"YulIdentifier","src":"12700:3:32"},"nativeSrc":"12700:17:32","nodeType":"YulFunctionCall","src":"12700:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12647:43:32","nodeType":"YulIdentifier","src":"12647:43:32"},"nativeSrc":"12647:71:32","nodeType":"YulFunctionCall","src":"12647:71:32"},"nativeSrc":"12647:71:32","nodeType":"YulExpressionStatement","src":"12647:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12772:6:32","nodeType":"YulIdentifier","src":"12772:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12785:9:32","nodeType":"YulIdentifier","src":"12785:9:32"},{"kind":"number","nativeSrc":"12796:2:32","nodeType":"YulLiteral","src":"12796:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12781:3:32","nodeType":"YulIdentifier","src":"12781:3:32"},"nativeSrc":"12781:18:32","nodeType":"YulFunctionCall","src":"12781:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12728:43:32","nodeType":"YulIdentifier","src":"12728:43:32"},"nativeSrc":"12728:72:32","nodeType":"YulFunctionCall","src":"12728:72:32"},"nativeSrc":"12728:72:32","nodeType":"YulExpressionStatement","src":"12728:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12854:6:32","nodeType":"YulIdentifier","src":"12854:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12867:9:32","nodeType":"YulIdentifier","src":"12867:9:32"},{"kind":"number","nativeSrc":"12878:2:32","nodeType":"YulLiteral","src":"12878:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12863:3:32","nodeType":"YulIdentifier","src":"12863:3:32"},"nativeSrc":"12863:18:32","nodeType":"YulFunctionCall","src":"12863:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12810:43:32","nodeType":"YulIdentifier","src":"12810:43:32"},"nativeSrc":"12810:72:32","nodeType":"YulFunctionCall","src":"12810:72:32"},"nativeSrc":"12810:72:32","nodeType":"YulExpressionStatement","src":"12810:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12936:6:32","nodeType":"YulIdentifier","src":"12936:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12949:9:32","nodeType":"YulIdentifier","src":"12949:9:32"},{"kind":"number","nativeSrc":"12960:2:32","nodeType":"YulLiteral","src":"12960:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12945:3:32","nodeType":"YulIdentifier","src":"12945:3:32"},"nativeSrc":"12945:18:32","nodeType":"YulFunctionCall","src":"12945:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12892:43:32","nodeType":"YulIdentifier","src":"12892:43:32"},"nativeSrc":"12892:72:32","nodeType":"YulFunctionCall","src":"12892:72:32"},"nativeSrc":"12892:72:32","nodeType":"YulExpressionStatement","src":"12892:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"13018:6:32","nodeType":"YulIdentifier","src":"13018:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13031:9:32","nodeType":"YulIdentifier","src":"13031:9:32"},{"kind":"number","nativeSrc":"13042:3:32","nodeType":"YulLiteral","src":"13042:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13027:3:32","nodeType":"YulIdentifier","src":"13027:3:32"},"nativeSrc":"13027:19:32","nodeType":"YulFunctionCall","src":"13027:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12974:43:32","nodeType":"YulIdentifier","src":"12974:43:32"},"nativeSrc":"12974:73:32","nodeType":"YulFunctionCall","src":"12974:73:32"},"nativeSrc":"12974:73:32","nodeType":"YulExpressionStatement","src":"12974:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"13101:6:32","nodeType":"YulIdentifier","src":"13101:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13114:9:32","nodeType":"YulIdentifier","src":"13114:9:32"},{"kind":"number","nativeSrc":"13125:3:32","nodeType":"YulLiteral","src":"13125:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"13110:3:32","nodeType":"YulIdentifier","src":"13110:3:32"},"nativeSrc":"13110:19:32","nodeType":"YulFunctionCall","src":"13110:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13057:43:32","nodeType":"YulIdentifier","src":"13057:43:32"},"nativeSrc":"13057:73:32","nodeType":"YulFunctionCall","src":"13057:73:32"},"nativeSrc":"13057:73:32","nodeType":"YulExpressionStatement","src":"13057:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12362:775:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12532:9:32","nodeType":"YulTypedName","src":"12532:9:32","type":""},{"name":"value5","nativeSrc":"12544:6:32","nodeType":"YulTypedName","src":"12544:6:32","type":""},{"name":"value4","nativeSrc":"12552:6:32","nodeType":"YulTypedName","src":"12552:6:32","type":""},{"name":"value3","nativeSrc":"12560:6:32","nodeType":"YulTypedName","src":"12560:6:32","type":""},{"name":"value2","nativeSrc":"12568:6:32","nodeType":"YulTypedName","src":"12568:6:32","type":""},{"name":"value1","nativeSrc":"12576:6:32","nodeType":"YulTypedName","src":"12576:6:32","type":""},{"name":"value0","nativeSrc":"12584:6:32","nodeType":"YulTypedName","src":"12584:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12595:4:32","nodeType":"YulTypedName","src":"12595:4:32","type":""}],"src":"12362:775:32"},{"body":{"nativeSrc":"13269:206:32","nodeType":"YulBlock","src":"13269:206:32","statements":[{"nativeSrc":"13279:26:32","nodeType":"YulAssignment","src":"13279:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"13291:9:32","nodeType":"YulIdentifier","src":"13291:9:32"},{"kind":"number","nativeSrc":"13302:2:32","nodeType":"YulLiteral","src":"13302:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13287:3:32","nodeType":"YulIdentifier","src":"13287:3:32"},"nativeSrc":"13287:18:32","nodeType":"YulFunctionCall","src":"13287:18:32"},"variableNames":[{"name":"tail","nativeSrc":"13279:4:32","nodeType":"YulIdentifier","src":"13279:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13359:6:32","nodeType":"YulIdentifier","src":"13359:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13372:9:32","nodeType":"YulIdentifier","src":"13372:9:32"},{"kind":"number","nativeSrc":"13383:1:32","nodeType":"YulLiteral","src":"13383:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13368:3:32","nodeType":"YulIdentifier","src":"13368:3:32"},"nativeSrc":"13368:17:32","nodeType":"YulFunctionCall","src":"13368:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13315:43:32","nodeType":"YulIdentifier","src":"13315:43:32"},"nativeSrc":"13315:71:32","nodeType":"YulFunctionCall","src":"13315:71:32"},"nativeSrc":"13315:71:32","nodeType":"YulExpressionStatement","src":"13315:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13440:6:32","nodeType":"YulIdentifier","src":"13440:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13453:9:32","nodeType":"YulIdentifier","src":"13453:9:32"},{"kind":"number","nativeSrc":"13464:2:32","nodeType":"YulLiteral","src":"13464:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13449:3:32","nodeType":"YulIdentifier","src":"13449:3:32"},"nativeSrc":"13449:18:32","nodeType":"YulFunctionCall","src":"13449:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13396:43:32","nodeType":"YulIdentifier","src":"13396:43:32"},"nativeSrc":"13396:72:32","nodeType":"YulFunctionCall","src":"13396:72:32"},"nativeSrc":"13396:72:32","nodeType":"YulExpressionStatement","src":"13396:72:32"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"13143:332:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13233:9:32","nodeType":"YulTypedName","src":"13233:9:32","type":""},{"name":"value1","nativeSrc":"13245:6:32","nodeType":"YulTypedName","src":"13245:6:32","type":""},{"name":"value0","nativeSrc":"13253:6:32","nodeType":"YulTypedName","src":"13253:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13264:4:32","nodeType":"YulTypedName","src":"13264:4:32","type":""}],"src":"13143:332:32"},{"body":{"nativeSrc":"13635:288:32","nodeType":"YulBlock","src":"13635:288:32","statements":[{"nativeSrc":"13645:26:32","nodeType":"YulAssignment","src":"13645:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"13657:9:32","nodeType":"YulIdentifier","src":"13657:9:32"},{"kind":"number","nativeSrc":"13668:2:32","nodeType":"YulLiteral","src":"13668:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13653:3:32","nodeType":"YulIdentifier","src":"13653:3:32"},"nativeSrc":"13653:18:32","nodeType":"YulFunctionCall","src":"13653:18:32"},"variableNames":[{"name":"tail","nativeSrc":"13645:4:32","nodeType":"YulIdentifier","src":"13645:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13725:6:32","nodeType":"YulIdentifier","src":"13725:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13738:9:32","nodeType":"YulIdentifier","src":"13738:9:32"},{"kind":"number","nativeSrc":"13749:1:32","nodeType":"YulLiteral","src":"13749:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13734:3:32","nodeType":"YulIdentifier","src":"13734:3:32"},"nativeSrc":"13734:17:32","nodeType":"YulFunctionCall","src":"13734:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13681:43:32","nodeType":"YulIdentifier","src":"13681:43:32"},"nativeSrc":"13681:71:32","nodeType":"YulFunctionCall","src":"13681:71:32"},"nativeSrc":"13681:71:32","nodeType":"YulExpressionStatement","src":"13681:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13806:6:32","nodeType":"YulIdentifier","src":"13806:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13819:9:32","nodeType":"YulIdentifier","src":"13819:9:32"},{"kind":"number","nativeSrc":"13830:2:32","nodeType":"YulLiteral","src":"13830:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13815:3:32","nodeType":"YulIdentifier","src":"13815:3:32"},"nativeSrc":"13815:18:32","nodeType":"YulFunctionCall","src":"13815:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13762:43:32","nodeType":"YulIdentifier","src":"13762:43:32"},"nativeSrc":"13762:72:32","nodeType":"YulFunctionCall","src":"13762:72:32"},"nativeSrc":"13762:72:32","nodeType":"YulExpressionStatement","src":"13762:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13888:6:32","nodeType":"YulIdentifier","src":"13888:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13901:9:32","nodeType":"YulIdentifier","src":"13901:9:32"},{"kind":"number","nativeSrc":"13912:2:32","nodeType":"YulLiteral","src":"13912:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13897:3:32","nodeType":"YulIdentifier","src":"13897:3:32"},"nativeSrc":"13897:18:32","nodeType":"YulFunctionCall","src":"13897:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13844:43:32","nodeType":"YulIdentifier","src":"13844:43:32"},"nativeSrc":"13844:72:32","nodeType":"YulFunctionCall","src":"13844:72:32"},"nativeSrc":"13844:72:32","nodeType":"YulExpressionStatement","src":"13844:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13481:442:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13591:9:32","nodeType":"YulTypedName","src":"13591:9:32","type":""},{"name":"value2","nativeSrc":"13603:6:32","nodeType":"YulTypedName","src":"13603:6:32","type":""},{"name":"value1","nativeSrc":"13611:6:32","nodeType":"YulTypedName","src":"13611:6:32","type":""},{"name":"value0","nativeSrc":"13619:6:32","nodeType":"YulTypedName","src":"13619:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13630:4:32","nodeType":"YulTypedName","src":"13630:4:32","type":""}],"src":"13481:442:32"},{"body":{"nativeSrc":"14139:454:32","nodeType":"YulBlock","src":"14139:454:32","statements":[{"nativeSrc":"14149:27:32","nodeType":"YulAssignment","src":"14149:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"14161:9:32","nodeType":"YulIdentifier","src":"14161:9:32"},{"kind":"number","nativeSrc":"14172:3:32","nodeType":"YulLiteral","src":"14172:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14157:3:32","nodeType":"YulIdentifier","src":"14157:3:32"},"nativeSrc":"14157:19:32","nodeType":"YulFunctionCall","src":"14157:19:32"},"variableNames":[{"name":"tail","nativeSrc":"14149:4:32","nodeType":"YulIdentifier","src":"14149:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14230:6:32","nodeType":"YulIdentifier","src":"14230:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14243:9:32","nodeType":"YulIdentifier","src":"14243:9:32"},{"kind":"number","nativeSrc":"14254:1:32","nodeType":"YulLiteral","src":"14254:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14239:3:32","nodeType":"YulIdentifier","src":"14239:3:32"},"nativeSrc":"14239:17:32","nodeType":"YulFunctionCall","src":"14239:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14186:43:32","nodeType":"YulIdentifier","src":"14186:43:32"},"nativeSrc":"14186:71:32","nodeType":"YulFunctionCall","src":"14186:71:32"},"nativeSrc":"14186:71:32","nodeType":"YulExpressionStatement","src":"14186:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14311:6:32","nodeType":"YulIdentifier","src":"14311:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14324:9:32","nodeType":"YulIdentifier","src":"14324:9:32"},{"kind":"number","nativeSrc":"14335:2:32","nodeType":"YulLiteral","src":"14335:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14320:3:32","nodeType":"YulIdentifier","src":"14320:3:32"},"nativeSrc":"14320:18:32","nodeType":"YulFunctionCall","src":"14320:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14267:43:32","nodeType":"YulIdentifier","src":"14267:43:32"},"nativeSrc":"14267:72:32","nodeType":"YulFunctionCall","src":"14267:72:32"},"nativeSrc":"14267:72:32","nodeType":"YulExpressionStatement","src":"14267:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14393:6:32","nodeType":"YulIdentifier","src":"14393:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14406:9:32","nodeType":"YulIdentifier","src":"14406:9:32"},{"kind":"number","nativeSrc":"14417:2:32","nodeType":"YulLiteral","src":"14417:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14402:3:32","nodeType":"YulIdentifier","src":"14402:3:32"},"nativeSrc":"14402:18:32","nodeType":"YulFunctionCall","src":"14402:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14349:43:32","nodeType":"YulIdentifier","src":"14349:43:32"},"nativeSrc":"14349:72:32","nodeType":"YulFunctionCall","src":"14349:72:32"},"nativeSrc":"14349:72:32","nodeType":"YulExpressionStatement","src":"14349:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"14475:6:32","nodeType":"YulIdentifier","src":"14475:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14488:9:32","nodeType":"YulIdentifier","src":"14488:9:32"},{"kind":"number","nativeSrc":"14499:2:32","nodeType":"YulLiteral","src":"14499:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14484:3:32","nodeType":"YulIdentifier","src":"14484:3:32"},"nativeSrc":"14484:18:32","nodeType":"YulFunctionCall","src":"14484:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14431:43:32","nodeType":"YulIdentifier","src":"14431:43:32"},"nativeSrc":"14431:72:32","nodeType":"YulFunctionCall","src":"14431:72:32"},"nativeSrc":"14431:72:32","nodeType":"YulExpressionStatement","src":"14431:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"14557:6:32","nodeType":"YulIdentifier","src":"14557:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14570:9:32","nodeType":"YulIdentifier","src":"14570:9:32"},{"kind":"number","nativeSrc":"14581:3:32","nodeType":"YulLiteral","src":"14581:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14566:3:32","nodeType":"YulIdentifier","src":"14566:3:32"},"nativeSrc":"14566:19:32","nodeType":"YulFunctionCall","src":"14566:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14513:43:32","nodeType":"YulIdentifier","src":"14513:43:32"},"nativeSrc":"14513:73:32","nodeType":"YulFunctionCall","src":"14513:73:32"},"nativeSrc":"14513:73:32","nodeType":"YulExpressionStatement","src":"14513:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"13929:664:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14079:9:32","nodeType":"YulTypedName","src":"14079:9:32","type":""},{"name":"value4","nativeSrc":"14091:6:32","nodeType":"YulTypedName","src":"14091:6:32","type":""},{"name":"value3","nativeSrc":"14099:6:32","nodeType":"YulTypedName","src":"14099:6:32","type":""},{"name":"value2","nativeSrc":"14107:6:32","nodeType":"YulTypedName","src":"14107:6:32","type":""},{"name":"value1","nativeSrc":"14115:6:32","nodeType":"YulTypedName","src":"14115:6:32","type":""},{"name":"value0","nativeSrc":"14123:6:32","nodeType":"YulTypedName","src":"14123:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14134:4:32","nodeType":"YulTypedName","src":"14134:4:32","type":""}],"src":"13929:664:32"},{"body":{"nativeSrc":"14777:367:32","nodeType":"YulBlock","src":"14777:367:32","statements":[{"nativeSrc":"14787:27:32","nodeType":"YulAssignment","src":"14787:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"14799:9:32","nodeType":"YulIdentifier","src":"14799:9:32"},{"kind":"number","nativeSrc":"14810:3:32","nodeType":"YulLiteral","src":"14810:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14795:3:32","nodeType":"YulIdentifier","src":"14795:3:32"},"nativeSrc":"14795:19:32","nodeType":"YulFunctionCall","src":"14795:19:32"},"variableNames":[{"name":"tail","nativeSrc":"14787:4:32","nodeType":"YulIdentifier","src":"14787:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14868:6:32","nodeType":"YulIdentifier","src":"14868:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14881:9:32","nodeType":"YulIdentifier","src":"14881:9:32"},{"kind":"number","nativeSrc":"14892:1:32","nodeType":"YulLiteral","src":"14892:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14877:3:32","nodeType":"YulIdentifier","src":"14877:3:32"},"nativeSrc":"14877:17:32","nodeType":"YulFunctionCall","src":"14877:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14824:43:32","nodeType":"YulIdentifier","src":"14824:43:32"},"nativeSrc":"14824:71:32","nodeType":"YulFunctionCall","src":"14824:71:32"},"nativeSrc":"14824:71:32","nodeType":"YulExpressionStatement","src":"14824:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14945:6:32","nodeType":"YulIdentifier","src":"14945:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"14958:9:32","nodeType":"YulIdentifier","src":"14958:9:32"},{"kind":"number","nativeSrc":"14969:2:32","nodeType":"YulLiteral","src":"14969:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14954:3:32","nodeType":"YulIdentifier","src":"14954:3:32"},"nativeSrc":"14954:18:32","nodeType":"YulFunctionCall","src":"14954:18:32"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"14905:39:32","nodeType":"YulIdentifier","src":"14905:39:32"},"nativeSrc":"14905:68:32","nodeType":"YulFunctionCall","src":"14905:68:32"},"nativeSrc":"14905:68:32","nodeType":"YulExpressionStatement","src":"14905:68:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15027:6:32","nodeType":"YulIdentifier","src":"15027:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15040:9:32","nodeType":"YulIdentifier","src":"15040:9:32"},{"kind":"number","nativeSrc":"15051:2:32","nodeType":"YulLiteral","src":"15051:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15036:3:32","nodeType":"YulIdentifier","src":"15036:3:32"},"nativeSrc":"15036:18:32","nodeType":"YulFunctionCall","src":"15036:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14983:43:32","nodeType":"YulIdentifier","src":"14983:43:32"},"nativeSrc":"14983:72:32","nodeType":"YulFunctionCall","src":"14983:72:32"},"nativeSrc":"14983:72:32","nodeType":"YulExpressionStatement","src":"14983:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15109:6:32","nodeType":"YulIdentifier","src":"15109:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15122:9:32","nodeType":"YulIdentifier","src":"15122:9:32"},{"kind":"number","nativeSrc":"15133:2:32","nodeType":"YulLiteral","src":"15133:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15118:3:32","nodeType":"YulIdentifier","src":"15118:3:32"},"nativeSrc":"15118:18:32","nodeType":"YulFunctionCall","src":"15118:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15065:43:32","nodeType":"YulIdentifier","src":"15065:43:32"},"nativeSrc":"15065:72:32","nodeType":"YulFunctionCall","src":"15065:72:32"},"nativeSrc":"15065:72:32","nodeType":"YulExpressionStatement","src":"15065:72:32"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"14599:545:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14725:9:32","nodeType":"YulTypedName","src":"14725:9:32","type":""},{"name":"value3","nativeSrc":"14737:6:32","nodeType":"YulTypedName","src":"14737:6:32","type":""},{"name":"value2","nativeSrc":"14745:6:32","nodeType":"YulTypedName","src":"14745:6:32","type":""},{"name":"value1","nativeSrc":"14753:6:32","nodeType":"YulTypedName","src":"14753:6:32","type":""},{"name":"value0","nativeSrc":"14761:6:32","nodeType":"YulTypedName","src":"14761:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14772:4:32","nodeType":"YulTypedName","src":"14772:4:32","type":""}],"src":"14599:545:32"},{"body":{"nativeSrc":"15178:152:32","nodeType":"YulBlock","src":"15178:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15195:1:32","nodeType":"YulLiteral","src":"15195:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"15198:77:32","nodeType":"YulLiteral","src":"15198:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15188:6:32","nodeType":"YulIdentifier","src":"15188:6:32"},"nativeSrc":"15188:88:32","nodeType":"YulFunctionCall","src":"15188:88:32"},"nativeSrc":"15188:88:32","nodeType":"YulExpressionStatement","src":"15188:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15292:1:32","nodeType":"YulLiteral","src":"15292:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"15295:4:32","nodeType":"YulLiteral","src":"15295:4:32","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15285:6:32","nodeType":"YulIdentifier","src":"15285:6:32"},"nativeSrc":"15285:15:32","nodeType":"YulFunctionCall","src":"15285:15:32"},"nativeSrc":"15285:15:32","nodeType":"YulExpressionStatement","src":"15285:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15316:1:32","nodeType":"YulLiteral","src":"15316:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"15319:4:32","nodeType":"YulLiteral","src":"15319:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15309:6:32","nodeType":"YulIdentifier","src":"15309:6:32"},"nativeSrc":"15309:15:32","nodeType":"YulFunctionCall","src":"15309:15:32"},"nativeSrc":"15309:15:32","nodeType":"YulExpressionStatement","src":"15309:15:32"}]},"name":"panic_error_0x21","nativeSrc":"15150:180:32","nodeType":"YulFunctionDefinition","src":"15150:180:32"},{"body":{"nativeSrc":"15364:152:32","nodeType":"YulBlock","src":"15364:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15381:1:32","nodeType":"YulLiteral","src":"15381:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"15384:77:32","nodeType":"YulLiteral","src":"15384:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15374:6:32","nodeType":"YulIdentifier","src":"15374:6:32"},"nativeSrc":"15374:88:32","nodeType":"YulFunctionCall","src":"15374:88:32"},"nativeSrc":"15374:88:32","nodeType":"YulExpressionStatement","src":"15374:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15478:1:32","nodeType":"YulLiteral","src":"15478:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"15481:4:32","nodeType":"YulLiteral","src":"15481:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"15471:6:32","nodeType":"YulIdentifier","src":"15471:6:32"},"nativeSrc":"15471:15:32","nodeType":"YulFunctionCall","src":"15471:15:32"},"nativeSrc":"15471:15:32","nodeType":"YulExpressionStatement","src":"15471:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15502:1:32","nodeType":"YulLiteral","src":"15502:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"15505:4:32","nodeType":"YulLiteral","src":"15505:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15495:6:32","nodeType":"YulIdentifier","src":"15495:6:32"},"nativeSrc":"15495:15:32","nodeType":"YulFunctionCall","src":"15495:15:32"},"nativeSrc":"15495:15:32","nodeType":"YulExpressionStatement","src":"15495:15:32"}]},"name":"panic_error_0x11","nativeSrc":"15336:180:32","nodeType":"YulFunctionDefinition","src":"15336:180:32"},{"body":{"nativeSrc":"15566:147:32","nodeType":"YulBlock","src":"15566:147:32","statements":[{"nativeSrc":"15576:25:32","nodeType":"YulAssignment","src":"15576:25:32","value":{"arguments":[{"name":"x","nativeSrc":"15599:1:32","nodeType":"YulIdentifier","src":"15599:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15581:17:32","nodeType":"YulIdentifier","src":"15581:17:32"},"nativeSrc":"15581:20:32","nodeType":"YulFunctionCall","src":"15581:20:32"},"variableNames":[{"name":"x","nativeSrc":"15576:1:32","nodeType":"YulIdentifier","src":"15576:1:32"}]},{"nativeSrc":"15610:25:32","nodeType":"YulAssignment","src":"15610:25:32","value":{"arguments":[{"name":"y","nativeSrc":"15633:1:32","nodeType":"YulIdentifier","src":"15633:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15615:17:32","nodeType":"YulIdentifier","src":"15615:17:32"},"nativeSrc":"15615:20:32","nodeType":"YulFunctionCall","src":"15615:20:32"},"variableNames":[{"name":"y","nativeSrc":"15610:1:32","nodeType":"YulIdentifier","src":"15610:1:32"}]},{"nativeSrc":"15644:16:32","nodeType":"YulAssignment","src":"15644:16:32","value":{"arguments":[{"name":"x","nativeSrc":"15655:1:32","nodeType":"YulIdentifier","src":"15655:1:32"},{"name":"y","nativeSrc":"15658:1:32","nodeType":"YulIdentifier","src":"15658:1:32"}],"functionName":{"name":"add","nativeSrc":"15651:3:32","nodeType":"YulIdentifier","src":"15651:3:32"},"nativeSrc":"15651:9:32","nodeType":"YulFunctionCall","src":"15651:9:32"},"variableNames":[{"name":"sum","nativeSrc":"15644:3:32","nodeType":"YulIdentifier","src":"15644:3:32"}]},{"body":{"nativeSrc":"15684:22:32","nodeType":"YulBlock","src":"15684:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15686:16:32","nodeType":"YulIdentifier","src":"15686:16:32"},"nativeSrc":"15686:18:32","nodeType":"YulFunctionCall","src":"15686:18:32"},"nativeSrc":"15686:18:32","nodeType":"YulExpressionStatement","src":"15686:18:32"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"15676:1:32","nodeType":"YulIdentifier","src":"15676:1:32"},{"name":"sum","nativeSrc":"15679:3:32","nodeType":"YulIdentifier","src":"15679:3:32"}],"functionName":{"name":"gt","nativeSrc":"15673:2:32","nodeType":"YulIdentifier","src":"15673:2:32"},"nativeSrc":"15673:10:32","nodeType":"YulFunctionCall","src":"15673:10:32"},"nativeSrc":"15670:36:32","nodeType":"YulIf","src":"15670:36:32"}]},"name":"checked_add_t_uint256","nativeSrc":"15522:191:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15553:1:32","nodeType":"YulTypedName","src":"15553:1:32","type":""},{"name":"y","nativeSrc":"15556:1:32","nodeType":"YulTypedName","src":"15556:1:32","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"15562:3:32","nodeType":"YulTypedName","src":"15562:3:32","type":""}],"src":"15522:191:32"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3454":[{"length":32,"start":3075}],"3456":[{"length":32,"start":3034}],"3458":[{"length":32,"start":2948}],"3460":[{"length":32,"start":4794}],"3462":[{"length":32,"start":4827}],"3465":[{"length":32,"start":4000}],"3468":[{"length":32,"start":4059}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3EB JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x30F JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27F JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x416 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x442 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A4 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH2 0x4B1 DUP2 DUP6 DUP6 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4D1 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH2 0x4DE DUP6 DUP3 DUP6 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x4E9 DUP6 DUP6 DUP6 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x508 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x515 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x51D PUSH2 0xCBE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x527 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x531 DUP3 DUP3 PUSH2 0xD21 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x546 PUSH2 0x540 PUSH2 0x9DE JUMP JUMPDEST DUP3 PUSH2 0xDA3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x5BA PUSH1 0x0 PUSH2 0xE25 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5CE DUP3 PUSH2 0x5C8 PUSH2 0x9DE JUMP JUMPDEST DUP4 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x5D8 DUP3 DUP3 PUSH2 0xDA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E7 DUP3 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x5FE PUSH2 0xF34 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x614 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x61C PUSH2 0xFD2 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x66B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6E3 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x70F SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x731 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x73F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x771 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH2 0x77E DUP2 DUP6 DUP6 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x7CE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x7FD DUP13 PUSH2 0x100D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x813 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x836 DUP3 PUSH2 0x1064 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x846 DUP3 DUP8 DUP8 DUP8 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BA JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP3 SWAP2 SWAP1 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C5 DUP11 DUP11 DUP11 PUSH2 0x9E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x960 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DB DUP2 PUSH2 0xE25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA04 DUP5 DUP5 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA86 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA76 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA85 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x10AE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB70 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB7B DUP4 DUP4 DUP4 PUSH2 0x1285 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBFC JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC29 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC34 JUMP JUMPDEST PUSH2 0xC31 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC3F PUSH2 0x9DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5D PUSH2 0x6AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCBC JUMPI PUSH2 0xC80 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xCC6 PUSH2 0x132B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xD0A PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD93 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1285 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE21 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1285 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3C PUSH2 0x136B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF80 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8D SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFCD PUSH1 0x6 PUSH32 0x0 PUSH2 0x13AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1008 PUSH1 0x7 PUSH32 0x0 PUSH2 0x13AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 PUSH2 0x1071 PUSH2 0xB80 JUMP JUMPDEST DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1090 DUP9 DUP9 DUP9 DUP9 PUSH2 0x149D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10A0 DUP3 DUP3 PUSH2 0x1591 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1120 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1192 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x127F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1290 DUP4 DUP4 DUP4 PUSH2 0x16F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1310 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1333 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x1369 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1373 PUSH2 0x549 JUMP JUMPDEST ISZERO PUSH2 0x13AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x13C9 JUMPI PUSH2 0x13C2 DUP4 PUSH2 0x170D JUMP JUMPDEST SWAP1 POP PUSH2 0x1456 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x13D5 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1401 SWAP1 PUSH2 0x2009 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x144E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1423 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x144E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1431 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x14DD JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1502 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1524 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1578 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1587 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x15B7 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x16F1 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15D2 JUMPI PUSH2 0x15D1 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1630 JUMPI PUSH2 0x162F PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1642 PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1688 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167F SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16AE JUMPI PUSH2 0x16AD PUSH2 0x21C2 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16F0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x16FD PUSH2 0x136B JUMP JUMPDEST PUSH2 0x1708 DUP4 DUP4 DUP4 PUSH2 0x1781 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x171A DUP4 PUSH2 0x19A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x203A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x176B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D3 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17C7 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x185F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1856 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18EF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x193C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1999 SWAP2 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x19ED JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A30 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A58 DUP3 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x1A62 DUP2 DUP6 PUSH2 0x1A01 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x1A7B DUP2 PUSH2 0x1A3C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA0 DUP2 DUP5 PUSH2 0x1A4D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 DUP3 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B05 DUP2 PUSH2 0x1ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1E DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B3B DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B66 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B77 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B96 DUP2 PUSH2 0x1B81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BC0 DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BFA JUMPI PUSH2 0x1BF9 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C08 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C19 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C2A DUP7 DUP3 DUP8 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C4A DUP2 PUSH2 0x1C34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7E DUP2 PUSH2 0x1C6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB5 JUMPI PUSH2 0x1CB4 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC3 DUP5 DUP3 DUP6 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2E DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D3D DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D78 DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8A DUP4 DUP4 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAE DUP3 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x1DB8 DUP2 DUP6 PUSH2 0x1D4E JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC3 DUP4 PUSH2 0x1D5F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP2 MLOAD PUSH2 0x1DDB DUP9 DUP3 PUSH2 0x1D7E JUMP JUMPDEST SWAP8 POP PUSH2 0x1DE6 DUP4 PUSH2 0x1D96 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DC7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1E16 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1D25 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1E28 DUP2 DUP10 PUSH2 0x1A4D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E3C DUP2 DUP9 PUSH2 0x1A4D JUMP JUMPDEST SWAP1 POP PUSH2 0x1E4B PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x1E58 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x1E65 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1C75 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 DUP5 PUSH2 0x1DA3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E9A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA9 DUP2 PUSH2 0x1C34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EC6 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ED5 DUP2 PUSH2 0x1C6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF2 DUP2 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1F17 JUMPI PUSH2 0x1F16 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F25 DUP11 DUP3 DUP12 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1F36 DUP11 DUP3 DUP12 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1F47 DUP11 DUP3 DUP12 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1F58 DUP11 DUP3 DUP12 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1F69 DUP11 DUP3 DUP12 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1F7A DUP11 DUP3 DUP12 ADD PUSH2 0x1EE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1F8B DUP11 DUP3 DUP12 ADD PUSH2 0x1EE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB1 JUMPI PUSH2 0x1FB0 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FBF DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2021 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2034 JUMPI PUSH2 0x2033 PUSH2 0x1FDA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x207E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x208B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x2098 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x20A5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x20B2 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x20BF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1BB7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20DF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x20EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D34 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2108 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x2115 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x2122 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x213F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x214C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x2159 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x2166 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x2173 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D34 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2192 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x219F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C41 JUMP JUMPDEST PUSH2 0x21AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x21B9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C75 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x222B DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x2236 DUP4 PUSH2 0x1B0B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x224E JUMPI PUSH2 0x224D PUSH2 0x21F1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xA83E9C01 PUSH26 0x3404C724CC582D9859D261C34D50A75D9A4853621F0492ABB6D7 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"406:764:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;751:65:30;;;:::i;:::-;;824:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;1021:158:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2406:143:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;682:61:30;;;:::i;:::-;;5144:557:23;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:7;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:11:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;751:65:30:-;1531:13:2;:11;:13::i;:::-;798:10:30::1;:8;:10::i;:::-;751:65::o:0;824:95::-;1531:13:2;:11;:13::i;:::-;894:17:30::1;900:2;904:6;894:5;:17::i;:::-;824:95:::0;;:::o;618:87:9:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1850:84:18:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3299:116:7:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:9:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2406:143:11:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;682:61:30:-;1531:13:2;:11;:13::i;:::-;727:8:30::1;:6;:8::i;:::-;682:61::o:0;5144:557:23:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:7:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1680:672:11:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:7:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;8989:128:7:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:23:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:18:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;7721:208:7:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:2:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:17:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;2463:115:18:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;6021:126:23:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:17:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:23:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:22:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:7:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;997:170:30:-;1129:30;1143:4;1149:2;1153:5;1129:13;:30::i;:::-;997:170;;;:::o;4113:179:23:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2202:126:18:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;3385:267:19:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:24:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:22:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;1112:145:10:-;1474:19:18;:17;:19::i;:::-;1220:30:10::1;1234:4;1240:2;1244:5;1220:13;:30::i;:::-;1112:145:::0;;;:::o;2078:405:19:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;6271:1107:7:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2555:245:19:-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:32:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:::-;5682:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:119;;;5737:79;;:::i;:::-;5699:119;5857:1;5882:53;5927:7;5918:6;5907:9;5903:22;5882:53;:::i;:::-;5872:63;;5828:117;5623:329;;;;:::o;5958:149::-;5994:7;6034:66;6027:5;6023:78;6012:89;;5958:149;;;:::o;6113:115::-;6198:23;6215:5;6198:23;:::i;:::-;6193:3;6186:36;6113:115;;:::o;6234:118::-;6321:24;6339:5;6321:24;:::i;:::-;6316:3;6309:37;6234:118;;:::o;6358:114::-;6425:6;6459:5;6453:12;6443:22;;6358:114;;;:::o;6478:184::-;6577:11;6611:6;6606:3;6599:19;6651:4;6646:3;6642:14;6627:29;;6478:184;;;;:::o;6668:132::-;6735:4;6758:3;6750:11;;6788:4;6783:3;6779:14;6771:22;;6668:132;;;:::o;6806:108::-;6883:24;6901:5;6883:24;:::i;:::-;6878:3;6871:37;6806:108;;:::o;6920:179::-;6989:10;7010:46;7052:3;7044:6;7010:46;:::i;:::-;7088:4;7083:3;7079:14;7065:28;;6920:179;;;;:::o;7105:113::-;7175:4;7207;7202:3;7198:14;7190:22;;7105:113;;;:::o;7254:732::-;7373:3;7402:54;7450:5;7402:54;:::i;:::-;7472:86;7551:6;7546:3;7472:86;:::i;:::-;7465:93;;7582:56;7632:5;7582:56;:::i;:::-;7661:7;7692:1;7677:284;7702:6;7699:1;7696:13;7677:284;;;7778:6;7772:13;7805:63;7864:3;7849:13;7805:63;:::i;:::-;7798:70;;7891:60;7944:6;7891:60;:::i;:::-;7881:70;;7737:224;7724:1;7721;7717:9;7712:14;;7677:284;;;7681:14;7977:3;7970:10;;7378:608;;;7254:732;;;;:::o;7992:1215::-;8341:4;8379:3;8368:9;8364:19;8356:27;;8393:69;8459:1;8448:9;8444:17;8435:6;8393:69;:::i;:::-;8509:9;8503:4;8499:20;8494:2;8483:9;8479:18;8472:48;8537:78;8610:4;8601:6;8537:78;:::i;:::-;8529:86;;8662:9;8656:4;8652:20;8647:2;8636:9;8632:18;8625:48;8690:78;8763:4;8754:6;8690:78;:::i;:::-;8682:86;;8778:72;8846:2;8835:9;8831:18;8822:6;8778:72;:::i;:::-;8860:73;8928:3;8917:9;8913:19;8904:6;8860:73;:::i;:::-;8943;9011:3;9000:9;8996:19;8987:6;8943:73;:::i;:::-;9064:9;9058:4;9054:20;9048:3;9037:9;9033:19;9026:49;9092:108;9195:4;9186:6;9092:108;:::i;:::-;9084:116;;7992:1215;;;;;;;;;;:::o;9213:222::-;9306:4;9344:2;9333:9;9329:18;9321:26;;9357:71;9425:1;9414:9;9410:17;9401:6;9357:71;:::i;:::-;9213:222;;;;:::o;9441:118::-;9512:22;9528:5;9512:22;:::i;:::-;9505:5;9502:33;9492:61;;9549:1;9546;9539:12;9492:61;9441:118;:::o;9565:135::-;9609:5;9647:6;9634:20;9625:29;;9663:31;9688:5;9663:31;:::i;:::-;9565:135;;;;:::o;9706:122::-;9779:24;9797:5;9779:24;:::i;:::-;9772:5;9769:35;9759:63;;9818:1;9815;9808:12;9759:63;9706:122;:::o;9834:139::-;9880:5;9918:6;9905:20;9896:29;;9934:33;9961:5;9934:33;:::i;:::-;9834:139;;;;:::o;9979:1199::-;10090:6;10098;10106;10114;10122;10130;10138;10187:3;10175:9;10166:7;10162:23;10158:33;10155:120;;;10194:79;;:::i;:::-;10155:120;10314:1;10339:53;10384:7;10375:6;10364:9;10360:22;10339:53;:::i;:::-;10329:63;;10285:117;10441:2;10467:53;10512:7;10503:6;10492:9;10488:22;10467:53;:::i;:::-;10457:63;;10412:118;10569:2;10595:53;10640:7;10631:6;10620:9;10616:22;10595:53;:::i;:::-;10585:63;;10540:118;10697:2;10723:53;10768:7;10759:6;10748:9;10744:22;10723:53;:::i;:::-;10713:63;;10668:118;10825:3;10852:51;10895:7;10886:6;10875:9;10871:22;10852:51;:::i;:::-;10842:61;;10796:117;10952:3;10979:53;11024:7;11015:6;11004:9;11000:22;10979:53;:::i;:::-;10969:63;;10923:119;11081:3;11108:53;11153:7;11144:6;11133:9;11129:22;11108:53;:::i;:::-;11098:63;;11052:119;9979:1199;;;;;;;;;;:::o;11184:474::-;11252:6;11260;11309:2;11297:9;11288:7;11284:23;11280:32;11277:119;;;11315:79;;:::i;:::-;11277:119;11435:1;11460:53;11505:7;11496:6;11485:9;11481:22;11460:53;:::i;:::-;11450:63;;11406:117;11562:2;11588:53;11633:7;11624:6;11613:9;11609:22;11588:53;:::i;:::-;11578:63;;11533:118;11184:474;;;;;:::o;11664:180::-;11712:77;11709:1;11702:88;11809:4;11806:1;11799:15;11833:4;11830:1;11823:15;11850:320;11894:6;11931:1;11925:4;11921:12;11911:22;;11978:1;11972:4;11968:12;11999:18;11989:81;;12055:4;12047:6;12043:17;12033:27;;11989:81;12117:2;12109:6;12106:14;12086:18;12083:38;12080:84;;12136:18;;:::i;:::-;12080:84;11901:269;11850:320;;;:::o;12176:180::-;12224:77;12221:1;12214:88;12321:4;12318:1;12311:15;12345:4;12342:1;12335:15;12362:775;12595:4;12633:3;12622:9;12618:19;12610:27;;12647:71;12715:1;12704:9;12700:17;12691:6;12647:71;:::i;:::-;12728:72;12796:2;12785:9;12781:18;12772:6;12728:72;:::i;:::-;12810;12878:2;12867:9;12863:18;12854:6;12810:72;:::i;:::-;12892;12960:2;12949:9;12945:18;12936:6;12892:72;:::i;:::-;12974:73;13042:3;13031:9;13027:19;13018:6;12974:73;:::i;:::-;13057;13125:3;13114:9;13110:19;13101:6;13057:73;:::i;:::-;12362:775;;;;;;;;;:::o;13143:332::-;13264:4;13302:2;13291:9;13287:18;13279:26;;13315:71;13383:1;13372:9;13368:17;13359:6;13315:71;:::i;:::-;13396:72;13464:2;13453:9;13449:18;13440:6;13396:72;:::i;:::-;13143:332;;;;;:::o;13481:442::-;13630:4;13668:2;13657:9;13653:18;13645:26;;13681:71;13749:1;13738:9;13734:17;13725:6;13681:71;:::i;:::-;13762:72;13830:2;13819:9;13815:18;13806:6;13762:72;:::i;:::-;13844;13912:2;13901:9;13897:18;13888:6;13844:72;:::i;:::-;13481:442;;;;;;:::o;13929:664::-;14134:4;14172:3;14161:9;14157:19;14149:27;;14186:71;14254:1;14243:9;14239:17;14230:6;14186:71;:::i;:::-;14267:72;14335:2;14324:9;14320:18;14311:6;14267:72;:::i;:::-;14349;14417:2;14406:9;14402:18;14393:6;14349:72;:::i;:::-;14431;14499:2;14488:9;14484:18;14475:6;14431:72;:::i;:::-;14513:73;14581:3;14570:9;14566:19;14557:6;14513:73;:::i;:::-;13929:664;;;;;;;;:::o;14599:545::-;14772:4;14810:3;14799:9;14795:19;14787:27;;14824:71;14892:1;14881:9;14877:17;14868:6;14824:71;:::i;:::-;14905:68;14969:2;14958:9;14954:18;14945:6;14905:68;:::i;:::-;14983:72;15051:2;15040:9;15036:18;15027:6;14983:72;:::i;:::-;15065;15133:2;15122:9;15118:18;15109:6;15065:72;:::i;:::-;14599:545;;;;;;;:::o;15150:180::-;15198:77;15195:1;15188:88;15295:4;15292:1;15285:15;15319:4;15316:1;15309:15;15336:180;15384:77;15381:1;15374:88;15481:4;15478:1;15471:15;15505:4;15502:1;15495:15;15522:191;15562:3;15581:20;15599:1;15581:20;:::i;:::-;15576:25;;15615:20;15633:1;15615:20;:::i;:::-;15610:25;;15658:1;15655;15651:9;15644:16;;15679:3;15676:1;15673:10;15670:36;;;15686:18;;:::i;:::-;15670:36;15522:191;;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BSSToken.sol\":\"BSSToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/BSSToken.sol\":{\"keccak256\":\"0xf03e0ca49b78f6ff06a7d59c2187ddc9c2f4fb42c28d4adcd6effef86ae2c1d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5fb2ef0e14bd9214284e741291a346fb2dd490f08a1afbb9bf3a6b079fc38022\",\"dweb:/ipfs/QmVsrgnA69RFApJCmMVdPz4dvdX4YzZE9RGyU5aENcwwv3\"]}},\"version\":1}"}},"contracts/Vault.sol":{"Vault":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WITHDRAWER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxWithdrawAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxAmount","type":"uint256"}],"name":"setMaxWithdrawAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"}],"name":"setToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isEnable","type":"bool"}],"name":"setWithdrawEnable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_5664":{"entryPoint":null,"id":5664,"parameterSlots":0,"returnSlots":0},"@_add_4982":{"entryPoint":919,"id":4982,"parameterSlots":2,"returnSlots":1},"@_contains_5085":{"entryPoint":1041,"id":5085,"parameterSlots":2,"returnSlots":1},"@_grantRole_256":{"entryPoint":497,"id":256,"parameterSlots":2,"returnSlots":1},"@_grantRole_635":{"entryPoint":416,"id":635,"parameterSlots":2,"returnSlots":1},"@_msgSender_2300":{"entryPoint":212,"id":2300,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":220,"id":525,"parameterSlots":1,"returnSlots":0},"@add_5282":{"entryPoint":756,"id":5282,"parameterSlots":2,"returnSlots":1},"@hasRole_80":{"entryPoint":812,"id":80,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1128,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1145,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1108,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1076,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:590:32","nodeType":"YulBlock","src":"0:590:32","statements":[{"body":{"nativeSrc":"52:81:32","nodeType":"YulBlock","src":"52:81:32","statements":[{"nativeSrc":"62:65:32","nodeType":"YulAssignment","src":"62:65:32","value":{"arguments":[{"name":"value","nativeSrc":"77:5:32","nodeType":"YulIdentifier","src":"77:5:32"},{"kind":"number","nativeSrc":"84:42:32","nodeType":"YulLiteral","src":"84:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:32","nodeType":"YulIdentifier","src":"73:3:32"},"nativeSrc":"73:54:32","nodeType":"YulFunctionCall","src":"73:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:32","nodeType":"YulIdentifier","src":"62:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:32","nodeType":"YulTypedName","src":"34:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:32","nodeType":"YulTypedName","src":"44:7:32","type":""}],"src":"7:126:32"},{"body":{"nativeSrc":"184:51:32","nodeType":"YulBlock","src":"184:51:32","statements":[{"nativeSrc":"194:35:32","nodeType":"YulAssignment","src":"194:35:32","value":{"arguments":[{"name":"value","nativeSrc":"223:5:32","nodeType":"YulIdentifier","src":"223:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:32","nodeType":"YulIdentifier","src":"205:17:32"},"nativeSrc":"205:24:32","nodeType":"YulFunctionCall","src":"205:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:32","nodeType":"YulIdentifier","src":"194:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:32","nodeType":"YulTypedName","src":"166:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:32","nodeType":"YulTypedName","src":"176:7:32","type":""}],"src":"139:96:32"},{"body":{"nativeSrc":"306:53:32","nodeType":"YulBlock","src":"306:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:32","nodeType":"YulIdentifier","src":"323:3:32"},{"arguments":[{"name":"value","nativeSrc":"346:5:32","nodeType":"YulIdentifier","src":"346:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:32","nodeType":"YulIdentifier","src":"328:17:32"},"nativeSrc":"328:24:32","nodeType":"YulFunctionCall","src":"328:24:32"}],"functionName":{"name":"mstore","nativeSrc":"316:6:32","nodeType":"YulIdentifier","src":"316:6:32"},"nativeSrc":"316:37:32","nodeType":"YulFunctionCall","src":"316:37:32"},"nativeSrc":"316:37:32","nodeType":"YulExpressionStatement","src":"316:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:32","nodeType":"YulTypedName","src":"294:5:32","type":""},{"name":"pos","nativeSrc":"301:3:32","nodeType":"YulTypedName","src":"301:3:32","type":""}],"src":"241:118:32"},{"body":{"nativeSrc":"463:124:32","nodeType":"YulBlock","src":"463:124:32","statements":[{"nativeSrc":"473:26:32","nodeType":"YulAssignment","src":"473:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:32","nodeType":"YulIdentifier","src":"485:9:32"},{"kind":"number","nativeSrc":"496:2:32","nodeType":"YulLiteral","src":"496:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:32","nodeType":"YulIdentifier","src":"481:3:32"},"nativeSrc":"481:18:32","nodeType":"YulFunctionCall","src":"481:18:32"},"variableNames":[{"name":"tail","nativeSrc":"473:4:32","nodeType":"YulIdentifier","src":"473:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:32","nodeType":"YulIdentifier","src":"553:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:32","nodeType":"YulIdentifier","src":"566:9:32"},{"kind":"number","nativeSrc":"577:1:32","nodeType":"YulLiteral","src":"577:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:32","nodeType":"YulIdentifier","src":"562:3:32"},"nativeSrc":"562:17:32","nodeType":"YulFunctionCall","src":"562:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:32","nodeType":"YulIdentifier","src":"509:43:32"},"nativeSrc":"509:71:32","nodeType":"YulFunctionCall","src":"509:71:32"},"nativeSrc":"509:71:32","nodeType":"YulExpressionStatement","src":"509:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:32","nodeType":"YulTypedName","src":"435:9:32","type":""},{"name":"value0","nativeSrc":"447:6:32","nodeType":"YulTypedName","src":"447:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:32","nodeType":"YulTypedName","src":"458:4:32","type":""}],"src":"365:222:32"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5062000022620000d460201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000975760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200008e919062000479565b60405180910390fd5b620000a881620000dc60201b60201c565b50620000cd6000801b620000c1620000d460201b60201c565b620001a060201b60201c565b5062000496565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080620001b58484620001f160201b60201c565b90508015620001e757620001e58360026000878152602001908152602001600020620002f460201b90919060201c565b505b8091505092915050565b60006200020583836200032c60201b60201c565b620002e957600180600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000285620000d460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620002ee565b600090505b92915050565b600062000324836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200039760201b60201c565b905092915050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000620003ab83836200041160201b60201c565b620004065782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506200040b565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004618262000434565b9050919050565b620004738162000454565b82525050565b600060208201905062000490600083018462000468565b92915050565b611d0880620004a66000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639010d07c116100ad578063d547741f11610071578063d547741f1461032f578063df74e0281461034b578063f2fde38b14610367578063f3fef3a314610383578063f516440c1461039f5761012c565b80639010d07c1461026557806391d1485414610295578063a217fddf146102c5578063b6b55f25146102e3578063ca15c873146102ff5761012c565b806336568abe116100f457806336568abe146101e7578063715018a614610203578063827a560b1461020d57806385f438c1146102295780638da5cb5b146102475761012c565b806301ffc9a714610131578063144fa6d7146101615780632287e96a1461017d578063248a9ca31461019b5780632f2ff15d146101cb575b600080fd5b61014b60048036038101906101469190611505565b6103bd565b604051610158919061154d565b60405180910390f35b61017b600480360381019061017691906115d8565b610437565b005b610185610483565b604051610192919061154d565b60405180910390f35b6101b560048036038101906101b0919061163b565b610496565b6040516101c29190611677565b60405180910390f35b6101e560048036038101906101e091906116be565b6104b6565b005b61020160048036038101906101fc91906116be565b6104d8565b005b61020b610553565b005b6102276004803603810190610222919061172a565b610567565b005b61023161058c565b60405161023e9190611677565b60405180910390f35b61024f6105b0565b60405161025c9190611766565b60405180910390f35b61027f600480360381019061027a91906117b7565b6105d9565b60405161028c9190611766565b60405180910390f35b6102af60048036038101906102aa91906116be565b610608565b6040516102bc919061154d565b60405180910390f35b6102cd610673565b6040516102da9190611677565b60405180910390f35b6102fd60048036038101906102f891906117f7565b61067a565b005b6103196004803603810190610314919061163b565b610789565b6040516103269190611833565b60405180910390f35b610349600480360381019061034491906116be565b6107ad565b005b610365600480360381019061036091906117f7565b6107cf565b005b610381600480360381019061037c919061184e565b6107e1565b005b61039d6004803603810190610398919061187b565b610867565b005b6103a7610a54565b6040516103b49190611833565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610430575061042f82610a5a565b5b9050919050565b61043f610ad4565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900460ff1681565b600060016000838152602001908152602001600020600101549050919050565b6104bf82610496565b6104c881610b5b565b6104d28383610b6f565b50505050565b6104e0610bb5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610544576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054e8282610bbd565b505050565b61055b610ad4565b6105656000610c03565b565b61056f610ad4565b80600560006101000a81548160ff02191690831515021790555050565b7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006106008260026000868152602001908152602001600020610cc790919063ffffffff16565b905092915050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106d69190611766565b602060405180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906118d0565b1015610758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074f9061195a565b60405180910390fd5b610786600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610ce1565b50565b60006107a660026000848152602001908152602001600020610d63565b9050919050565b6107b682610496565b6107bf81610b5b565b6107c98383610bbd565b50505050565b6107d7610ad4565b8060048190555050565b6107e9610ad4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361085b5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108529190611766565b60405180910390fd5b61086481610c03565b50565b61086f610bb5565b73ffffffffffffffffffffffffffffffffffffffff1661088d6105b0565b73ffffffffffffffffffffffffffffffffffffffff1614806108dc57506108db7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e46108d6610bb5565b610608565b5b61091b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610912906119c6565b60405180910390fd5b600560009054906101000a900460ff1661096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190611a32565b60405180910390fd5b6004548111156109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a690611a9e565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610a0c929190611abe565b6020604051808303816000875af1158015610a2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190611afc565b505050565b60045481565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610acd5750610acc82610d78565b5b9050919050565b610adc610bb5565b73ffffffffffffffffffffffffffffffffffffffff16610afa6105b0565b73ffffffffffffffffffffffffffffffffffffffff1614610b5957610b1d610bb5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b509190611766565b60405180910390fd5b565b610b6c81610b67610bb5565b610de2565b50565b600080610b7c8484610e33565b90508015610bab57610ba98360026000878152602001908152602001600020610f2490919063ffffffff16565b505b8091505092915050565b600033905090565b600080610bca8484610f54565b90508015610bf957610bf7836002600087815260200190815260200160002061104790919063ffffffff16565b505b8091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610cd68360000183611077565b60001c905092915050565b610d5d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d1693929190611b29565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110a2565b50505050565b6000610d7182600001611139565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610dec8282610608565b610e2f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610e26929190611b60565b60405180910390fd5b5050565b6000610e3f8383610608565b610f1957600180600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610eb6610bb5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610f1e565b600090505b92915050565b6000610f4c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61114a565b905092915050565b6000610f608383610608565b1561103c5760006001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610fd9610bb5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611041565b600090505b92915050565b600061106f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6111ba565b905092915050565b600082600001828154811061108f5761108e611b89565b5b9060005260206000200154905092915050565b60006110cd828473ffffffffffffffffffffffffffffffffffffffff166112ce90919063ffffffff16565b905060008151141580156110f25750808060200190518101906110f09190611afc565b155b1561113457826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161112b9190611766565b60405180910390fd5b505050565b600081600001805490509050919050565b600061115683836112e4565b6111af5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506111b4565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146112c25760006001826111ec9190611be7565b90506000600186600001805490506112049190611be7565b905080821461127357600086600001828154811061122557611224611b89565b5b906000526020600020015490508087600001848154811061124957611248611b89565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061128757611286611c1b565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506112c8565b60009150505b92915050565b60606112dc83836000611307565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b60608147101561134e57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016113459190611766565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516113779190611cbb565b60006040518083038185875af1925050503d80600081146113b4576040519150601f19603f3d011682016040523d82523d6000602084013e6113b9565b606091505b50915091506113c98683836113d4565b925050509392505050565b6060826113e9576113e482611463565b61145b565b60008251148015611411575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561145357836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161144a9190611766565b60405180910390fd5b81905061145c565b5b9392505050565b6000815111156114765780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114e2816114ad565b81146114ed57600080fd5b50565b6000813590506114ff816114d9565b92915050565b60006020828403121561151b5761151a6114a8565b5b6000611529848285016114f0565b91505092915050565b60008115159050919050565b61154781611532565b82525050565b6000602082019050611562600083018461153e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061159382611568565b9050919050565b60006115a582611588565b9050919050565b6115b58161159a565b81146115c057600080fd5b50565b6000813590506115d2816115ac565b92915050565b6000602082840312156115ee576115ed6114a8565b5b60006115fc848285016115c3565b91505092915050565b6000819050919050565b61161881611605565b811461162357600080fd5b50565b6000813590506116358161160f565b92915050565b600060208284031215611651576116506114a8565b5b600061165f84828501611626565b91505092915050565b61167181611605565b82525050565b600060208201905061168c6000830184611668565b92915050565b61169b81611588565b81146116a657600080fd5b50565b6000813590506116b881611692565b92915050565b600080604083850312156116d5576116d46114a8565b5b60006116e385828601611626565b92505060206116f4858286016116a9565b9150509250929050565b61170781611532565b811461171257600080fd5b50565b600081359050611724816116fe565b92915050565b6000602082840312156117405761173f6114a8565b5b600061174e84828501611715565b91505092915050565b61176081611588565b82525050565b600060208201905061177b6000830184611757565b92915050565b6000819050919050565b61179481611781565b811461179f57600080fd5b50565b6000813590506117b18161178b565b92915050565b600080604083850312156117ce576117cd6114a8565b5b60006117dc85828601611626565b92505060206117ed858286016117a2565b9150509250929050565b60006020828403121561180d5761180c6114a8565b5b600061181b848285016117a2565b91505092915050565b61182d81611781565b82525050565b60006020820190506118486000830184611824565b92915050565b600060208284031215611864576118636114a8565b5b6000611872848285016116a9565b91505092915050565b60008060408385031215611892576118916114a8565b5b60006118a0858286016116a9565b92505060206118b1858286016117a2565b9150509250929050565b6000815190506118ca8161178b565b92915050565b6000602082840312156118e6576118e56114a8565b5b60006118f4848285016118bb565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b6000611944601c836118fd565b915061194f8261190e565b602082019050919050565b6000602082019050818103600083015261197381611937565b9050919050565b7f43616c6c6572206973206e6f7420612077697468647261776572000000000000600082015250565b60006119b0601a836118fd565b91506119bb8261197a565b602082019050919050565b600060208201905081810360008301526119df816119a3565b9050919050565b7f5769746864726177206973206e6f7420617661696c61626c6500000000000000600082015250565b6000611a1c6019836118fd565b9150611a27826119e6565b602082019050919050565b60006020820190508181036000830152611a4b81611a0f565b9050919050565b7f457863656564206d6178696d756d20616d6f756e740000000000000000000000600082015250565b6000611a886015836118fd565b9150611a9382611a52565b602082019050919050565b60006020820190508181036000830152611ab781611a7b565b9050919050565b6000604082019050611ad36000830185611757565b611ae06020830184611824565b9392505050565b600081519050611af6816116fe565b92915050565b600060208284031215611b1257611b116114a8565b5b6000611b2084828501611ae7565b91505092915050565b6000606082019050611b3e6000830186611757565b611b4b6020830185611757565b611b586040830184611824565b949350505050565b6000604082019050611b756000830185611757565b611b826020830184611668565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bf282611781565b9150611bfd83611781565b9250828203905081811115611c1557611c14611bb8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b600081905092915050565b60005b83811015611c7e578082015181840152602081019050611c63565b60008484015250505050565b6000611c9582611c4a565b611c9f8185611c55565b9350611caf818560208601611c60565b80840191505092915050565b6000611cc78284611c8a565b91508190509291505056fea2646970667358221220c4ac21d6de9a0afa1dcc195dd001ac1a89fc02af28b8a4126cc2a94f246286f464736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0xD4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x97 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA8 DUP2 PUSH3 0xDC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xCD PUSH1 0x0 DUP1 SHL PUSH3 0xC1 PUSH3 0xD4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x496 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1B5 DUP5 DUP5 PUSH3 0x1F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x1E7 JUMPI PUSH3 0x1E5 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x2F4 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x205 DUP4 DUP4 PUSH3 0x32C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2E9 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x285 PUSH3 0xD4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x324 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x397 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AB DUP4 DUP4 PUSH3 0x411 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x406 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x40B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x461 DUP3 PUSH3 0x434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x473 DUP2 PUSH3 0x454 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x490 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D08 DUP1 PUSH3 0x4A6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xDF74E028 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xF516440C EQ PUSH2 0x39F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x9010D07C EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2FF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x827A560B EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x85F438C1 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x2287E96A EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x430 JUMPI POP PUSH2 0x42F DUP3 PUSH2 0xA5A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43F PUSH2 0xAD4 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BF DUP3 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x4C8 DUP2 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x4D2 DUP4 DUP4 PUSH2 0xB6F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x54E DUP3 DUP3 PUSH2 0xBBD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x55B PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x565 PUSH1 0x0 PUSH2 0xC03 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x56F PUSH2 0xAD4 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xCC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST LT ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x786 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xCE1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A6 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xD63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x7BF DUP2 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x7C9 DUP4 DUP4 PUSH2 0xBBD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0xAD4 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x85B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x864 DUP2 PUSH2 0xC03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x86F PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88D PUSH2 0x5B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x8DC JUMPI POP PUSH2 0x8DB PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 PUSH2 0x8D6 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST JUMPDEST PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x961 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP3 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4F SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xACD JUMPI POP PUSH2 0xACC DUP3 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADC PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAFA PUSH2 0x5B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB59 JUMPI PUSH2 0xB1D PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB6C DUP2 PUSH2 0xB67 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB7C DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xBAB JUMPI PUSH2 0xBA9 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBCA DUP5 DUP5 PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1047 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD6 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD16 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10A2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD71 DUP3 PUSH1 0x0 ADD PUSH2 0x1139 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEC DUP3 DUP3 PUSH2 0x608 JUMP JUMPDEST PUSH2 0xE2F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE26 SWAP3 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F DUP4 DUP4 PUSH2 0x608 JUMP JUMPDEST PUSH2 0xF19 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEB6 PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4C DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x114A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF60 DUP4 DUP4 PUSH2 0x608 JUMP JUMPDEST ISZERO PUSH2 0x103C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xFD9 PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x11BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x10F2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10F0 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1134 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1156 DUP4 DUP4 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0x11AF JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x12C2 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1204 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1273 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1225 JUMPI PUSH2 0x1224 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1249 JUMPI PUSH2 0x1248 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x1C1B JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12DC DUP4 DUP4 PUSH1 0x0 PUSH2 0x1307 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x134E JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1345 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1377 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13C9 DUP7 DUP4 DUP4 PUSH2 0x13D4 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x13E9 JUMPI PUSH2 0x13E4 DUP3 PUSH2 0x1463 JUMP JUMPDEST PUSH2 0x145B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1411 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1453 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144A SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x145C JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1476 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E2 DUP2 PUSH2 0x14AD JUMP JUMPDEST DUP2 EQ PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FF DUP2 PUSH2 0x14D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1529 DUP5 DUP3 DUP6 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x1532 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1562 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x153E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1593 DUP3 PUSH2 0x1568 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A5 DUP3 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x159A JUMP JUMPDEST DUP2 EQ PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D2 DUP2 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15ED PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FC DUP5 DUP3 DUP6 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1618 DUP2 PUSH2 0x1605 JUMP JUMPDEST DUP2 EQ PUSH2 0x1623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1635 DUP2 PUSH2 0x160F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH2 0x1650 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x165F DUP5 DUP3 DUP6 ADD PUSH2 0x1626 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1671 DUP2 PUSH2 0x1605 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1668 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169B DUP2 PUSH2 0x1588 JUMP JUMPDEST DUP2 EQ PUSH2 0x16A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B8 DUP2 PUSH2 0x1692 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1626 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16F4 DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x1532 JUMP JUMPDEST DUP2 EQ PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1724 DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1740 JUMPI PUSH2 0x173F PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174E DUP5 DUP3 DUP6 ADD PUSH2 0x1715 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1760 DUP2 PUSH2 0x1588 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1757 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B1 DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CE JUMPI PUSH2 0x17CD PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DC DUP6 DUP3 DUP7 ADD PUSH2 0x1626 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17ED DUP6 DUP3 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181B DUP5 DUP3 DUP6 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x182D DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1848 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1872 DUP5 DUP3 DUP6 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1892 JUMPI PUSH2 0x1891 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A0 DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18B1 DUP6 DUP3 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18CA DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E6 JUMPI PUSH2 0x18E5 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18F4 DUP5 DUP3 DUP6 ADD PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206163636F756E742062616C616E636500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1944 PUSH1 0x1C DUP4 PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP PUSH2 0x194F DUP3 PUSH2 0x190E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1973 DUP2 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612077697468647261776572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B0 PUSH1 0x1A DUP4 PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP PUSH2 0x19BB DUP3 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19DF DUP2 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177206973206E6F7420617661696C61626C6500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1C PUSH1 0x19 DUP4 PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1A27 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4B DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457863656564206D6178696D756D20616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A88 PUSH1 0x15 DUP4 PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1A93 DUP3 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB7 DUP2 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x1AE0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF6 DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B12 JUMPI PUSH2 0x1B11 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B20 DUP5 DUP3 DUP6 ADD PUSH2 0x1AE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B3E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x1B4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x1B58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x1B82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1668 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BF2 DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFD DUP4 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x1BB8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C7E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C95 DUP3 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C9F DUP2 DUP6 PUSH2 0x1C55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C60 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC7 DUP3 DUP5 PUSH2 0x1C8A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xAC 0x21 0xD6 0xDE SWAP11 EXP STATICCALL SAR 0xCC NOT 0x5D 0xD0 ADD 0xAC BYTE DUP10 0xFC MUL 0xAF 0x28 0xB8 LOG4 SLT PUSH13 0xC2A94F246286F464736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"290:1460:31:-:0;;;354:99;;;;;;;;;;376:12;:10;;;:12;;:::i;:::-;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;401:44:31::1;2232:4:0;412:18:31::0;::::1;432:12;:10;;;:12;;:::i;:::-;401:10;;;:44;;:::i;:::-;;290:1460:::0;;656:96:16;709:7;735:10;728:17;;656:96;:::o;2912:187:2:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2069:257:3:-;2155:4;2171:12;2186:31;2203:4;2209:7;2186:16;;;:31;;:::i;:::-;2171:46;;2231:7;2227:69;;;2254:31;2277:7;2254:12;:18;2267:4;2254:18;;;;;;;;;;;:22;;;;:31;;;;:::i;:::-;;2227:69;2312:7;2305:14;;;2069:257;;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;8316:150:29:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;;;:50;;:::i;:::-;8402:57;;8316:150;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2241:406:29:-;2304:4;2325:21;2335:3;2340:5;2325:9;;;:21;;:::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;4264:129::-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;7:126:32:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;290:1460:31:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":1651,"id":29,"parameterSlots":0,"returnSlots":0},"@WITHDRAWER_ROLE_5676":{"entryPoint":1420,"id":5676,"parameterSlots":0,"returnSlots":0},"@_add_4982":{"entryPoint":4426,"id":4982,"parameterSlots":2,"returnSlots":1},"@_at_5116":{"entryPoint":4215,"id":5116,"parameterSlots":2,"returnSlots":1},"@_callOptionalReturn_1985":{"entryPoint":4258,"id":1985,"parameterSlots":2,"returnSlots":0},"@_checkOwner_463":{"entryPoint":2772,"id":463,"parameterSlots":0,"returnSlots":0},"@_checkRole_114":{"entryPoint":3554,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":2907,"id":93,"parameterSlots":1,"returnSlots":0},"@_contains_5085":{"entryPoint":4836,"id":5085,"parameterSlots":2,"returnSlots":1},"@_grantRole_256":{"entryPoint":3635,"id":256,"parameterSlots":2,"returnSlots":1},"@_grantRole_635":{"entryPoint":2927,"id":635,"parameterSlots":2,"returnSlots":1},"@_length_5099":{"entryPoint":4409,"id":5099,"parameterSlots":1,"returnSlots":1},"@_msgSender_2300":{"entryPoint":2997,"id":2300,"parameterSlots":0,"returnSlots":1},"@_remove_5066":{"entryPoint":4538,"id":5066,"parameterSlots":2,"returnSlots":1},"@_revert_2287":{"entryPoint":5219,"id":2287,"parameterSlots":1,"returnSlots":0},"@_revokeRole_294":{"entryPoint":3924,"id":294,"parameterSlots":2,"returnSlots":1},"@_revokeRole_667":{"entryPoint":3005,"id":667,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":3075,"id":525,"parameterSlots":1,"returnSlots":0},"@add_5282":{"entryPoint":3876,"id":5282,"parameterSlots":2,"returnSlots":1},"@at_5378":{"entryPoint":3271,"id":5378,"parameterSlots":2,"returnSlots":1},"@deposit_5791":{"entryPoint":1658,"id":5791,"parameterSlots":1,"returnSlots":0},"@functionCallWithValue_2155":{"entryPoint":4871,"id":2155,"parameterSlots":3,"returnSlots":1},"@functionCall_2109":{"entryPoint":4814,"id":2109,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":1174,"id":128,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_603":{"entryPoint":1929,"id":603,"parameterSlots":1,"returnSlots":1},"@getRoleMember_588":{"entryPoint":1497,"id":588,"parameterSlots":2,"returnSlots":1},"@grantRole_147":{"entryPoint":1206,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":1544,"id":80,"parameterSlots":2,"returnSlots":1},"@length_5351":{"entryPoint":3427,"id":5351,"parameterSlots":1,"returnSlots":1},"@maxWithdrawAmount_5669":{"entryPoint":2644,"id":5669,"parameterSlots":0,"returnSlots":0},"@owner_446":{"entryPoint":1456,"id":446,"parameterSlots":0,"returnSlots":1},"@remove_5309":{"entryPoint":4167,"id":5309,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":1363,"id":477,"parameterSlots":0,"returnSlots":0},"@renounceRole_189":{"entryPoint":1240,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":1965,"id":166,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1822":{"entryPoint":3297,"id":1822,"parameterSlots":4,"returnSlots":0},"@setMaxWithdrawAmount_5719":{"entryPoint":1999,"id":5719,"parameterSlots":1,"returnSlots":0},"@setToken_5732":{"entryPoint":1079,"id":5732,"parameterSlots":1,"returnSlots":0},"@setWithdrawEnable_5707":{"entryPoint":1383,"id":5707,"parameterSlots":1,"returnSlots":0},"@supportsInterface_3757":{"entryPoint":3448,"id":3757,"parameterSlots":1,"returnSlots":1},"@supportsInterface_570":{"entryPoint":957,"id":570,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":2650,"id":62,"parameterSlots":1,"returnSlots":1},"@transferOwnership_505":{"entryPoint":2017,"id":505,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_2247":{"entryPoint":5076,"id":2247,"parameterSlots":3,"returnSlots":1},"@withdrawEnabled_5671":{"entryPoint":1155,"id":5671,"parameterSlots":0,"returnSlots":0},"@withdraw_5761":{"entryPoint":2151,"id":5761,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$1449":{"entryPoint":5571,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6267,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":5930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":5691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5822,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":6071,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$1449":{"entryPoint":5592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5975,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5438,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5736,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack":{"entryPoint":6779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack":{"entryPoint":6455,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack":{"entryPoint":6563,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack":{"entryPoint":6671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6180,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5990,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":6953,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":7008,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6846,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5751,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6814,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6598,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6195,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7242,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7253,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6397,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7143,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5512,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5426,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5637,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5293,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$1449":{"entryPoint":5530,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5480,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6017,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7264,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":7096,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":7195,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7049,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5288,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b":{"entryPoint":6738,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b":{"entryPoint":6414,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73":{"entryPoint":6522,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62":{"entryPoint":6630,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5778,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5886,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5647,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5337,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$1449":{"entryPoint":5548,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6027,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15787:32","nodeType":"YulBlock","src":"0:15787:32","statements":[{"body":{"nativeSrc":"47:35:32","nodeType":"YulBlock","src":"47:35:32","statements":[{"nativeSrc":"57:19:32","nodeType":"YulAssignment","src":"57:19:32","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:32","nodeType":"YulLiteral","src":"73:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:32","nodeType":"YulIdentifier","src":"67:5:32"},"nativeSrc":"67:9:32","nodeType":"YulFunctionCall","src":"67:9:32"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:32","nodeType":"YulIdentifier","src":"57:6:32"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:32","nodeType":"YulTypedName","src":"40:6:32","type":""}],"src":"7:75:32"},{"body":{"nativeSrc":"177:28:32","nodeType":"YulBlock","src":"177:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:32","nodeType":"YulLiteral","src":"194:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:32","nodeType":"YulLiteral","src":"197:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:32","nodeType":"YulIdentifier","src":"187:6:32"},"nativeSrc":"187:12:32","nodeType":"YulFunctionCall","src":"187:12:32"},"nativeSrc":"187:12:32","nodeType":"YulExpressionStatement","src":"187:12:32"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:32","nodeType":"YulFunctionDefinition","src":"88:117:32"},{"body":{"nativeSrc":"300:28:32","nodeType":"YulBlock","src":"300:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:32","nodeType":"YulLiteral","src":"317:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:32","nodeType":"YulLiteral","src":"320:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:32","nodeType":"YulIdentifier","src":"310:6:32"},"nativeSrc":"310:12:32","nodeType":"YulFunctionCall","src":"310:12:32"},"nativeSrc":"310:12:32","nodeType":"YulExpressionStatement","src":"310:12:32"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:32","nodeType":"YulFunctionDefinition","src":"211:117:32"},{"body":{"nativeSrc":"378:105:32","nodeType":"YulBlock","src":"378:105:32","statements":[{"nativeSrc":"388:89:32","nodeType":"YulAssignment","src":"388:89:32","value":{"arguments":[{"name":"value","nativeSrc":"403:5:32","nodeType":"YulIdentifier","src":"403:5:32"},{"kind":"number","nativeSrc":"410:66:32","nodeType":"YulLiteral","src":"410:66:32","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:32","nodeType":"YulIdentifier","src":"399:3:32"},"nativeSrc":"399:78:32","nodeType":"YulFunctionCall","src":"399:78:32"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:32","nodeType":"YulIdentifier","src":"388:7:32"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:32","nodeType":"YulTypedName","src":"360:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:32","nodeType":"YulTypedName","src":"370:7:32","type":""}],"src":"334:149:32"},{"body":{"nativeSrc":"531:78:32","nodeType":"YulBlock","src":"531:78:32","statements":[{"body":{"nativeSrc":"587:16:32","nodeType":"YulBlock","src":"587:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:32","nodeType":"YulLiteral","src":"596:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:32","nodeType":"YulLiteral","src":"599:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:32","nodeType":"YulIdentifier","src":"589:6:32"},"nativeSrc":"589:12:32","nodeType":"YulFunctionCall","src":"589:12:32"},"nativeSrc":"589:12:32","nodeType":"YulExpressionStatement","src":"589:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:32","nodeType":"YulIdentifier","src":"554:5:32"},{"arguments":[{"name":"value","nativeSrc":"578:5:32","nodeType":"YulIdentifier","src":"578:5:32"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:32","nodeType":"YulIdentifier","src":"561:16:32"},"nativeSrc":"561:23:32","nodeType":"YulFunctionCall","src":"561:23:32"}],"functionName":{"name":"eq","nativeSrc":"551:2:32","nodeType":"YulIdentifier","src":"551:2:32"},"nativeSrc":"551:34:32","nodeType":"YulFunctionCall","src":"551:34:32"}],"functionName":{"name":"iszero","nativeSrc":"544:6:32","nodeType":"YulIdentifier","src":"544:6:32"},"nativeSrc":"544:42:32","nodeType":"YulFunctionCall","src":"544:42:32"},"nativeSrc":"541:62:32","nodeType":"YulIf","src":"541:62:32"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:32","nodeType":"YulTypedName","src":"524:5:32","type":""}],"src":"489:120:32"},{"body":{"nativeSrc":"666:86:32","nodeType":"YulBlock","src":"666:86:32","statements":[{"nativeSrc":"676:29:32","nodeType":"YulAssignment","src":"676:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:32","nodeType":"YulIdentifier","src":"698:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:32","nodeType":"YulIdentifier","src":"685:12:32"},"nativeSrc":"685:20:32","nodeType":"YulFunctionCall","src":"685:20:32"},"variableNames":[{"name":"value","nativeSrc":"676:5:32","nodeType":"YulIdentifier","src":"676:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:32","nodeType":"YulIdentifier","src":"740:5:32"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:32","nodeType":"YulIdentifier","src":"714:25:32"},"nativeSrc":"714:32:32","nodeType":"YulFunctionCall","src":"714:32:32"},"nativeSrc":"714:32:32","nodeType":"YulExpressionStatement","src":"714:32:32"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:32","nodeType":"YulTypedName","src":"644:6:32","type":""},{"name":"end","nativeSrc":"652:3:32","nodeType":"YulTypedName","src":"652:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:32","nodeType":"YulTypedName","src":"660:5:32","type":""}],"src":"615:137:32"},{"body":{"nativeSrc":"823:262:32","nodeType":"YulBlock","src":"823:262:32","statements":[{"body":{"nativeSrc":"869:83:32","nodeType":"YulBlock","src":"869:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:32","nodeType":"YulIdentifier","src":"871:77:32"},"nativeSrc":"871:79:32","nodeType":"YulFunctionCall","src":"871:79:32"},"nativeSrc":"871:79:32","nodeType":"YulExpressionStatement","src":"871:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:32","nodeType":"YulIdentifier","src":"844:7:32"},{"name":"headStart","nativeSrc":"853:9:32","nodeType":"YulIdentifier","src":"853:9:32"}],"functionName":{"name":"sub","nativeSrc":"840:3:32","nodeType":"YulIdentifier","src":"840:3:32"},"nativeSrc":"840:23:32","nodeType":"YulFunctionCall","src":"840:23:32"},{"kind":"number","nativeSrc":"865:2:32","nodeType":"YulLiteral","src":"865:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:32","nodeType":"YulIdentifier","src":"836:3:32"},"nativeSrc":"836:32:32","nodeType":"YulFunctionCall","src":"836:32:32"},"nativeSrc":"833:119:32","nodeType":"YulIf","src":"833:119:32"},{"nativeSrc":"962:116:32","nodeType":"YulBlock","src":"962:116:32","statements":[{"nativeSrc":"977:15:32","nodeType":"YulVariableDeclaration","src":"977:15:32","value":{"kind":"number","nativeSrc":"991:1:32","nodeType":"YulLiteral","src":"991:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:32","nodeType":"YulTypedName","src":"981:6:32","type":""}]},{"nativeSrc":"1006:62:32","nodeType":"YulAssignment","src":"1006:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:32","nodeType":"YulIdentifier","src":"1040:9:32"},{"name":"offset","nativeSrc":"1051:6:32","nodeType":"YulIdentifier","src":"1051:6:32"}],"functionName":{"name":"add","nativeSrc":"1036:3:32","nodeType":"YulIdentifier","src":"1036:3:32"},"nativeSrc":"1036:22:32","nodeType":"YulFunctionCall","src":"1036:22:32"},{"name":"dataEnd","nativeSrc":"1060:7:32","nodeType":"YulIdentifier","src":"1060:7:32"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:32","nodeType":"YulIdentifier","src":"1016:19:32"},"nativeSrc":"1016:52:32","nodeType":"YulFunctionCall","src":"1016:52:32"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:32","nodeType":"YulIdentifier","src":"1006:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:32","nodeType":"YulTypedName","src":"793:9:32","type":""},{"name":"dataEnd","nativeSrc":"804:7:32","nodeType":"YulTypedName","src":"804:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:32","nodeType":"YulTypedName","src":"816:6:32","type":""}],"src":"758:327:32"},{"body":{"nativeSrc":"1133:48:32","nodeType":"YulBlock","src":"1133:48:32","statements":[{"nativeSrc":"1143:32:32","nodeType":"YulAssignment","src":"1143:32:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:32","nodeType":"YulIdentifier","src":"1168:5:32"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:32","nodeType":"YulIdentifier","src":"1161:6:32"},"nativeSrc":"1161:13:32","nodeType":"YulFunctionCall","src":"1161:13:32"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:32","nodeType":"YulIdentifier","src":"1154:6:32"},"nativeSrc":"1154:21:32","nodeType":"YulFunctionCall","src":"1154:21:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:32","nodeType":"YulIdentifier","src":"1143:7:32"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:32","nodeType":"YulTypedName","src":"1115:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:32","nodeType":"YulTypedName","src":"1125:7:32","type":""}],"src":"1091:90:32"},{"body":{"nativeSrc":"1246:50:32","nodeType":"YulBlock","src":"1246:50:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:32","nodeType":"YulIdentifier","src":"1263:3:32"},{"arguments":[{"name":"value","nativeSrc":"1283:5:32","nodeType":"YulIdentifier","src":"1283:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:32","nodeType":"YulIdentifier","src":"1268:14:32"},"nativeSrc":"1268:21:32","nodeType":"YulFunctionCall","src":"1268:21:32"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:32","nodeType":"YulIdentifier","src":"1256:6:32"},"nativeSrc":"1256:34:32","nodeType":"YulFunctionCall","src":"1256:34:32"},"nativeSrc":"1256:34:32","nodeType":"YulExpressionStatement","src":"1256:34:32"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:32","nodeType":"YulTypedName","src":"1234:5:32","type":""},{"name":"pos","nativeSrc":"1241:3:32","nodeType":"YulTypedName","src":"1241:3:32","type":""}],"src":"1187:109:32"},{"body":{"nativeSrc":"1394:118:32","nodeType":"YulBlock","src":"1394:118:32","statements":[{"nativeSrc":"1404:26:32","nodeType":"YulAssignment","src":"1404:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:32","nodeType":"YulIdentifier","src":"1416:9:32"},{"kind":"number","nativeSrc":"1427:2:32","nodeType":"YulLiteral","src":"1427:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:32","nodeType":"YulIdentifier","src":"1412:3:32"},"nativeSrc":"1412:18:32","nodeType":"YulFunctionCall","src":"1412:18:32"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:32","nodeType":"YulIdentifier","src":"1404:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:32","nodeType":"YulIdentifier","src":"1478:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:32","nodeType":"YulIdentifier","src":"1491:9:32"},{"kind":"number","nativeSrc":"1502:1:32","nodeType":"YulLiteral","src":"1502:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:32","nodeType":"YulIdentifier","src":"1487:3:32"},"nativeSrc":"1487:17:32","nodeType":"YulFunctionCall","src":"1487:17:32"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:32","nodeType":"YulIdentifier","src":"1440:37:32"},"nativeSrc":"1440:65:32","nodeType":"YulFunctionCall","src":"1440:65:32"},"nativeSrc":"1440:65:32","nodeType":"YulExpressionStatement","src":"1440:65:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:32","nodeType":"YulTypedName","src":"1366:9:32","type":""},{"name":"value0","nativeSrc":"1378:6:32","nodeType":"YulTypedName","src":"1378:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:32","nodeType":"YulTypedName","src":"1389:4:32","type":""}],"src":"1302:210:32"},{"body":{"nativeSrc":"1563:81:32","nodeType":"YulBlock","src":"1563:81:32","statements":[{"nativeSrc":"1573:65:32","nodeType":"YulAssignment","src":"1573:65:32","value":{"arguments":[{"name":"value","nativeSrc":"1588:5:32","nodeType":"YulIdentifier","src":"1588:5:32"},{"kind":"number","nativeSrc":"1595:42:32","nodeType":"YulLiteral","src":"1595:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1584:3:32","nodeType":"YulIdentifier","src":"1584:3:32"},"nativeSrc":"1584:54:32","nodeType":"YulFunctionCall","src":"1584:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1573:7:32","nodeType":"YulIdentifier","src":"1573:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1518:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1545:5:32","nodeType":"YulTypedName","src":"1545:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1555:7:32","nodeType":"YulTypedName","src":"1555:7:32","type":""}],"src":"1518:126:32"},{"body":{"nativeSrc":"1695:51:32","nodeType":"YulBlock","src":"1695:51:32","statements":[{"nativeSrc":"1705:35:32","nodeType":"YulAssignment","src":"1705:35:32","value":{"arguments":[{"name":"value","nativeSrc":"1734:5:32","nodeType":"YulIdentifier","src":"1734:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1716:17:32","nodeType":"YulIdentifier","src":"1716:17:32"},"nativeSrc":"1716:24:32","nodeType":"YulFunctionCall","src":"1716:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1705:7:32","nodeType":"YulIdentifier","src":"1705:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"1650:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1677:5:32","nodeType":"YulTypedName","src":"1677:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1687:7:32","nodeType":"YulTypedName","src":"1687:7:32","type":""}],"src":"1650:96:32"},{"body":{"nativeSrc":"1812:51:32","nodeType":"YulBlock","src":"1812:51:32","statements":[{"nativeSrc":"1822:35:32","nodeType":"YulAssignment","src":"1822:35:32","value":{"arguments":[{"name":"value","nativeSrc":"1851:5:32","nodeType":"YulIdentifier","src":"1851:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1833:17:32","nodeType":"YulIdentifier","src":"1833:17:32"},"nativeSrc":"1833:24:32","nodeType":"YulFunctionCall","src":"1833:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1822:7:32","nodeType":"YulIdentifier","src":"1822:7:32"}]}]},"name":"cleanup_t_contract$_IERC20_$1449","nativeSrc":"1752:111:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1794:5:32","nodeType":"YulTypedName","src":"1794:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1804:7:32","nodeType":"YulTypedName","src":"1804:7:32","type":""}],"src":"1752:111:32"},{"body":{"nativeSrc":"1927:94:32","nodeType":"YulBlock","src":"1927:94:32","statements":[{"body":{"nativeSrc":"1999:16:32","nodeType":"YulBlock","src":"1999:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2008:1:32","nodeType":"YulLiteral","src":"2008:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"2011:1:32","nodeType":"YulLiteral","src":"2011:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2001:6:32","nodeType":"YulIdentifier","src":"2001:6:32"},"nativeSrc":"2001:12:32","nodeType":"YulFunctionCall","src":"2001:12:32"},"nativeSrc":"2001:12:32","nodeType":"YulExpressionStatement","src":"2001:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1950:5:32","nodeType":"YulIdentifier","src":"1950:5:32"},{"arguments":[{"name":"value","nativeSrc":"1990:5:32","nodeType":"YulIdentifier","src":"1990:5:32"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$1449","nativeSrc":"1957:32:32","nodeType":"YulIdentifier","src":"1957:32:32"},"nativeSrc":"1957:39:32","nodeType":"YulFunctionCall","src":"1957:39:32"}],"functionName":{"name":"eq","nativeSrc":"1947:2:32","nodeType":"YulIdentifier","src":"1947:2:32"},"nativeSrc":"1947:50:32","nodeType":"YulFunctionCall","src":"1947:50:32"}],"functionName":{"name":"iszero","nativeSrc":"1940:6:32","nodeType":"YulIdentifier","src":"1940:6:32"},"nativeSrc":"1940:58:32","nodeType":"YulFunctionCall","src":"1940:58:32"},"nativeSrc":"1937:78:32","nodeType":"YulIf","src":"1937:78:32"}]},"name":"validator_revert_t_contract$_IERC20_$1449","nativeSrc":"1869:152:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1920:5:32","nodeType":"YulTypedName","src":"1920:5:32","type":""}],"src":"1869:152:32"},{"body":{"nativeSrc":"2094:102:32","nodeType":"YulBlock","src":"2094:102:32","statements":[{"nativeSrc":"2104:29:32","nodeType":"YulAssignment","src":"2104:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"2126:6:32","nodeType":"YulIdentifier","src":"2126:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"2113:12:32","nodeType":"YulIdentifier","src":"2113:12:32"},"nativeSrc":"2113:20:32","nodeType":"YulFunctionCall","src":"2113:20:32"},"variableNames":[{"name":"value","nativeSrc":"2104:5:32","nodeType":"YulIdentifier","src":"2104:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2184:5:32","nodeType":"YulIdentifier","src":"2184:5:32"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$1449","nativeSrc":"2142:41:32","nodeType":"YulIdentifier","src":"2142:41:32"},"nativeSrc":"2142:48:32","nodeType":"YulFunctionCall","src":"2142:48:32"},"nativeSrc":"2142:48:32","nodeType":"YulExpressionStatement","src":"2142:48:32"}]},"name":"abi_decode_t_contract$_IERC20_$1449","nativeSrc":"2027:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2072:6:32","nodeType":"YulTypedName","src":"2072:6:32","type":""},{"name":"end","nativeSrc":"2080:3:32","nodeType":"YulTypedName","src":"2080:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2088:5:32","nodeType":"YulTypedName","src":"2088:5:32","type":""}],"src":"2027:169:32"},{"body":{"nativeSrc":"2283:278:32","nodeType":"YulBlock","src":"2283:278:32","statements":[{"body":{"nativeSrc":"2329:83:32","nodeType":"YulBlock","src":"2329:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2331:77:32","nodeType":"YulIdentifier","src":"2331:77:32"},"nativeSrc":"2331:79:32","nodeType":"YulFunctionCall","src":"2331:79:32"},"nativeSrc":"2331:79:32","nodeType":"YulExpressionStatement","src":"2331:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2304:7:32","nodeType":"YulIdentifier","src":"2304:7:32"},{"name":"headStart","nativeSrc":"2313:9:32","nodeType":"YulIdentifier","src":"2313:9:32"}],"functionName":{"name":"sub","nativeSrc":"2300:3:32","nodeType":"YulIdentifier","src":"2300:3:32"},"nativeSrc":"2300:23:32","nodeType":"YulFunctionCall","src":"2300:23:32"},{"kind":"number","nativeSrc":"2325:2:32","nodeType":"YulLiteral","src":"2325:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2296:3:32","nodeType":"YulIdentifier","src":"2296:3:32"},"nativeSrc":"2296:32:32","nodeType":"YulFunctionCall","src":"2296:32:32"},"nativeSrc":"2293:119:32","nodeType":"YulIf","src":"2293:119:32"},{"nativeSrc":"2422:132:32","nodeType":"YulBlock","src":"2422:132:32","statements":[{"nativeSrc":"2437:15:32","nodeType":"YulVariableDeclaration","src":"2437:15:32","value":{"kind":"number","nativeSrc":"2451:1:32","nodeType":"YulLiteral","src":"2451:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2441:6:32","nodeType":"YulTypedName","src":"2441:6:32","type":""}]},{"nativeSrc":"2466:78:32","nodeType":"YulAssignment","src":"2466:78:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2516:9:32","nodeType":"YulIdentifier","src":"2516:9:32"},{"name":"offset","nativeSrc":"2527:6:32","nodeType":"YulIdentifier","src":"2527:6:32"}],"functionName":{"name":"add","nativeSrc":"2512:3:32","nodeType":"YulIdentifier","src":"2512:3:32"},"nativeSrc":"2512:22:32","nodeType":"YulFunctionCall","src":"2512:22:32"},{"name":"dataEnd","nativeSrc":"2536:7:32","nodeType":"YulIdentifier","src":"2536:7:32"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$1449","nativeSrc":"2476:35:32","nodeType":"YulIdentifier","src":"2476:35:32"},"nativeSrc":"2476:68:32","nodeType":"YulFunctionCall","src":"2476:68:32"},"variableNames":[{"name":"value0","nativeSrc":"2466:6:32","nodeType":"YulIdentifier","src":"2466:6:32"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1449","nativeSrc":"2202:359:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2253:9:32","nodeType":"YulTypedName","src":"2253:9:32","type":""},{"name":"dataEnd","nativeSrc":"2264:7:32","nodeType":"YulTypedName","src":"2264:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2276:6:32","nodeType":"YulTypedName","src":"2276:6:32","type":""}],"src":"2202:359:32"},{"body":{"nativeSrc":"2612:32:32","nodeType":"YulBlock","src":"2612:32:32","statements":[{"nativeSrc":"2622:16:32","nodeType":"YulAssignment","src":"2622:16:32","value":{"name":"value","nativeSrc":"2633:5:32","nodeType":"YulIdentifier","src":"2633:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"2622:7:32","nodeType":"YulIdentifier","src":"2622:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"2567:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2594:5:32","nodeType":"YulTypedName","src":"2594:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2604:7:32","nodeType":"YulTypedName","src":"2604:7:32","type":""}],"src":"2567:77:32"},{"body":{"nativeSrc":"2693:79:32","nodeType":"YulBlock","src":"2693:79:32","statements":[{"body":{"nativeSrc":"2750:16:32","nodeType":"YulBlock","src":"2750:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2759:1:32","nodeType":"YulLiteral","src":"2759:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"2762:1:32","nodeType":"YulLiteral","src":"2762:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2752:6:32","nodeType":"YulIdentifier","src":"2752:6:32"},"nativeSrc":"2752:12:32","nodeType":"YulFunctionCall","src":"2752:12:32"},"nativeSrc":"2752:12:32","nodeType":"YulExpressionStatement","src":"2752:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2716:5:32","nodeType":"YulIdentifier","src":"2716:5:32"},{"arguments":[{"name":"value","nativeSrc":"2741:5:32","nodeType":"YulIdentifier","src":"2741:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"2723:17:32","nodeType":"YulIdentifier","src":"2723:17:32"},"nativeSrc":"2723:24:32","nodeType":"YulFunctionCall","src":"2723:24:32"}],"functionName":{"name":"eq","nativeSrc":"2713:2:32","nodeType":"YulIdentifier","src":"2713:2:32"},"nativeSrc":"2713:35:32","nodeType":"YulFunctionCall","src":"2713:35:32"}],"functionName":{"name":"iszero","nativeSrc":"2706:6:32","nodeType":"YulIdentifier","src":"2706:6:32"},"nativeSrc":"2706:43:32","nodeType":"YulFunctionCall","src":"2706:43:32"},"nativeSrc":"2703:63:32","nodeType":"YulIf","src":"2703:63:32"}]},"name":"validator_revert_t_bytes32","nativeSrc":"2650:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2686:5:32","nodeType":"YulTypedName","src":"2686:5:32","type":""}],"src":"2650:122:32"},{"body":{"nativeSrc":"2830:87:32","nodeType":"YulBlock","src":"2830:87:32","statements":[{"nativeSrc":"2840:29:32","nodeType":"YulAssignment","src":"2840:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"2862:6:32","nodeType":"YulIdentifier","src":"2862:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"2849:12:32","nodeType":"YulIdentifier","src":"2849:12:32"},"nativeSrc":"2849:20:32","nodeType":"YulFunctionCall","src":"2849:20:32"},"variableNames":[{"name":"value","nativeSrc":"2840:5:32","nodeType":"YulIdentifier","src":"2840:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2905:5:32","nodeType":"YulIdentifier","src":"2905:5:32"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"2878:26:32","nodeType":"YulIdentifier","src":"2878:26:32"},"nativeSrc":"2878:33:32","nodeType":"YulFunctionCall","src":"2878:33:32"},"nativeSrc":"2878:33:32","nodeType":"YulExpressionStatement","src":"2878:33:32"}]},"name":"abi_decode_t_bytes32","nativeSrc":"2778:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2808:6:32","nodeType":"YulTypedName","src":"2808:6:32","type":""},{"name":"end","nativeSrc":"2816:3:32","nodeType":"YulTypedName","src":"2816:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2824:5:32","nodeType":"YulTypedName","src":"2824:5:32","type":""}],"src":"2778:139:32"},{"body":{"nativeSrc":"2989:263:32","nodeType":"YulBlock","src":"2989:263:32","statements":[{"body":{"nativeSrc":"3035:83:32","nodeType":"YulBlock","src":"3035:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3037:77:32","nodeType":"YulIdentifier","src":"3037:77:32"},"nativeSrc":"3037:79:32","nodeType":"YulFunctionCall","src":"3037:79:32"},"nativeSrc":"3037:79:32","nodeType":"YulExpressionStatement","src":"3037:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3010:7:32","nodeType":"YulIdentifier","src":"3010:7:32"},{"name":"headStart","nativeSrc":"3019:9:32","nodeType":"YulIdentifier","src":"3019:9:32"}],"functionName":{"name":"sub","nativeSrc":"3006:3:32","nodeType":"YulIdentifier","src":"3006:3:32"},"nativeSrc":"3006:23:32","nodeType":"YulFunctionCall","src":"3006:23:32"},{"kind":"number","nativeSrc":"3031:2:32","nodeType":"YulLiteral","src":"3031:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3002:3:32","nodeType":"YulIdentifier","src":"3002:3:32"},"nativeSrc":"3002:32:32","nodeType":"YulFunctionCall","src":"3002:32:32"},"nativeSrc":"2999:119:32","nodeType":"YulIf","src":"2999:119:32"},{"nativeSrc":"3128:117:32","nodeType":"YulBlock","src":"3128:117:32","statements":[{"nativeSrc":"3143:15:32","nodeType":"YulVariableDeclaration","src":"3143:15:32","value":{"kind":"number","nativeSrc":"3157:1:32","nodeType":"YulLiteral","src":"3157:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3147:6:32","nodeType":"YulTypedName","src":"3147:6:32","type":""}]},{"nativeSrc":"3172:63:32","nodeType":"YulAssignment","src":"3172:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3207:9:32","nodeType":"YulIdentifier","src":"3207:9:32"},{"name":"offset","nativeSrc":"3218:6:32","nodeType":"YulIdentifier","src":"3218:6:32"}],"functionName":{"name":"add","nativeSrc":"3203:3:32","nodeType":"YulIdentifier","src":"3203:3:32"},"nativeSrc":"3203:22:32","nodeType":"YulFunctionCall","src":"3203:22:32"},{"name":"dataEnd","nativeSrc":"3227:7:32","nodeType":"YulIdentifier","src":"3227:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"3182:20:32","nodeType":"YulIdentifier","src":"3182:20:32"},"nativeSrc":"3182:53:32","nodeType":"YulFunctionCall","src":"3182:53:32"},"variableNames":[{"name":"value0","nativeSrc":"3172:6:32","nodeType":"YulIdentifier","src":"3172:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2923:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2959:9:32","nodeType":"YulTypedName","src":"2959:9:32","type":""},{"name":"dataEnd","nativeSrc":"2970:7:32","nodeType":"YulTypedName","src":"2970:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2982:6:32","nodeType":"YulTypedName","src":"2982:6:32","type":""}],"src":"2923:329:32"},{"body":{"nativeSrc":"3323:53:32","nodeType":"YulBlock","src":"3323:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3340:3:32","nodeType":"YulIdentifier","src":"3340:3:32"},{"arguments":[{"name":"value","nativeSrc":"3363:5:32","nodeType":"YulIdentifier","src":"3363:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"3345:17:32","nodeType":"YulIdentifier","src":"3345:17:32"},"nativeSrc":"3345:24:32","nodeType":"YulFunctionCall","src":"3345:24:32"}],"functionName":{"name":"mstore","nativeSrc":"3333:6:32","nodeType":"YulIdentifier","src":"3333:6:32"},"nativeSrc":"3333:37:32","nodeType":"YulFunctionCall","src":"3333:37:32"},"nativeSrc":"3333:37:32","nodeType":"YulExpressionStatement","src":"3333:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"3258:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3311:5:32","nodeType":"YulTypedName","src":"3311:5:32","type":""},{"name":"pos","nativeSrc":"3318:3:32","nodeType":"YulTypedName","src":"3318:3:32","type":""}],"src":"3258:118:32"},{"body":{"nativeSrc":"3480:124:32","nodeType":"YulBlock","src":"3480:124:32","statements":[{"nativeSrc":"3490:26:32","nodeType":"YulAssignment","src":"3490:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"3502:9:32","nodeType":"YulIdentifier","src":"3502:9:32"},{"kind":"number","nativeSrc":"3513:2:32","nodeType":"YulLiteral","src":"3513:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3498:3:32","nodeType":"YulIdentifier","src":"3498:3:32"},"nativeSrc":"3498:18:32","nodeType":"YulFunctionCall","src":"3498:18:32"},"variableNames":[{"name":"tail","nativeSrc":"3490:4:32","nodeType":"YulIdentifier","src":"3490:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3570:6:32","nodeType":"YulIdentifier","src":"3570:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"3583:9:32","nodeType":"YulIdentifier","src":"3583:9:32"},{"kind":"number","nativeSrc":"3594:1:32","nodeType":"YulLiteral","src":"3594:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3579:3:32","nodeType":"YulIdentifier","src":"3579:3:32"},"nativeSrc":"3579:17:32","nodeType":"YulFunctionCall","src":"3579:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"3526:43:32","nodeType":"YulIdentifier","src":"3526:43:32"},"nativeSrc":"3526:71:32","nodeType":"YulFunctionCall","src":"3526:71:32"},"nativeSrc":"3526:71:32","nodeType":"YulExpressionStatement","src":"3526:71:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"3382:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3452:9:32","nodeType":"YulTypedName","src":"3452:9:32","type":""},{"name":"value0","nativeSrc":"3464:6:32","nodeType":"YulTypedName","src":"3464:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3475:4:32","nodeType":"YulTypedName","src":"3475:4:32","type":""}],"src":"3382:222:32"},{"body":{"nativeSrc":"3653:79:32","nodeType":"YulBlock","src":"3653:79:32","statements":[{"body":{"nativeSrc":"3710:16:32","nodeType":"YulBlock","src":"3710:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3719:1:32","nodeType":"YulLiteral","src":"3719:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"3722:1:32","nodeType":"YulLiteral","src":"3722:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3712:6:32","nodeType":"YulIdentifier","src":"3712:6:32"},"nativeSrc":"3712:12:32","nodeType":"YulFunctionCall","src":"3712:12:32"},"nativeSrc":"3712:12:32","nodeType":"YulExpressionStatement","src":"3712:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3676:5:32","nodeType":"YulIdentifier","src":"3676:5:32"},{"arguments":[{"name":"value","nativeSrc":"3701:5:32","nodeType":"YulIdentifier","src":"3701:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3683:17:32","nodeType":"YulIdentifier","src":"3683:17:32"},"nativeSrc":"3683:24:32","nodeType":"YulFunctionCall","src":"3683:24:32"}],"functionName":{"name":"eq","nativeSrc":"3673:2:32","nodeType":"YulIdentifier","src":"3673:2:32"},"nativeSrc":"3673:35:32","nodeType":"YulFunctionCall","src":"3673:35:32"}],"functionName":{"name":"iszero","nativeSrc":"3666:6:32","nodeType":"YulIdentifier","src":"3666:6:32"},"nativeSrc":"3666:43:32","nodeType":"YulFunctionCall","src":"3666:43:32"},"nativeSrc":"3663:63:32","nodeType":"YulIf","src":"3663:63:32"}]},"name":"validator_revert_t_address","nativeSrc":"3610:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3646:5:32","nodeType":"YulTypedName","src":"3646:5:32","type":""}],"src":"3610:122:32"},{"body":{"nativeSrc":"3790:87:32","nodeType":"YulBlock","src":"3790:87:32","statements":[{"nativeSrc":"3800:29:32","nodeType":"YulAssignment","src":"3800:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"3822:6:32","nodeType":"YulIdentifier","src":"3822:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"3809:12:32","nodeType":"YulIdentifier","src":"3809:12:32"},"nativeSrc":"3809:20:32","nodeType":"YulFunctionCall","src":"3809:20:32"},"variableNames":[{"name":"value","nativeSrc":"3800:5:32","nodeType":"YulIdentifier","src":"3800:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3865:5:32","nodeType":"YulIdentifier","src":"3865:5:32"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3838:26:32","nodeType":"YulIdentifier","src":"3838:26:32"},"nativeSrc":"3838:33:32","nodeType":"YulFunctionCall","src":"3838:33:32"},"nativeSrc":"3838:33:32","nodeType":"YulExpressionStatement","src":"3838:33:32"}]},"name":"abi_decode_t_address","nativeSrc":"3738:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3768:6:32","nodeType":"YulTypedName","src":"3768:6:32","type":""},{"name":"end","nativeSrc":"3776:3:32","nodeType":"YulTypedName","src":"3776:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3784:5:32","nodeType":"YulTypedName","src":"3784:5:32","type":""}],"src":"3738:139:32"},{"body":{"nativeSrc":"3966:391:32","nodeType":"YulBlock","src":"3966:391:32","statements":[{"body":{"nativeSrc":"4012:83:32","nodeType":"YulBlock","src":"4012:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4014:77:32","nodeType":"YulIdentifier","src":"4014:77:32"},"nativeSrc":"4014:79:32","nodeType":"YulFunctionCall","src":"4014:79:32"},"nativeSrc":"4014:79:32","nodeType":"YulExpressionStatement","src":"4014:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3987:7:32","nodeType":"YulIdentifier","src":"3987:7:32"},{"name":"headStart","nativeSrc":"3996:9:32","nodeType":"YulIdentifier","src":"3996:9:32"}],"functionName":{"name":"sub","nativeSrc":"3983:3:32","nodeType":"YulIdentifier","src":"3983:3:32"},"nativeSrc":"3983:23:32","nodeType":"YulFunctionCall","src":"3983:23:32"},{"kind":"number","nativeSrc":"4008:2:32","nodeType":"YulLiteral","src":"4008:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3979:3:32","nodeType":"YulIdentifier","src":"3979:3:32"},"nativeSrc":"3979:32:32","nodeType":"YulFunctionCall","src":"3979:32:32"},"nativeSrc":"3976:119:32","nodeType":"YulIf","src":"3976:119:32"},{"nativeSrc":"4105:117:32","nodeType":"YulBlock","src":"4105:117:32","statements":[{"nativeSrc":"4120:15:32","nodeType":"YulVariableDeclaration","src":"4120:15:32","value":{"kind":"number","nativeSrc":"4134:1:32","nodeType":"YulLiteral","src":"4134:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4124:6:32","nodeType":"YulTypedName","src":"4124:6:32","type":""}]},{"nativeSrc":"4149:63:32","nodeType":"YulAssignment","src":"4149:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4184:9:32","nodeType":"YulIdentifier","src":"4184:9:32"},{"name":"offset","nativeSrc":"4195:6:32","nodeType":"YulIdentifier","src":"4195:6:32"}],"functionName":{"name":"add","nativeSrc":"4180:3:32","nodeType":"YulIdentifier","src":"4180:3:32"},"nativeSrc":"4180:22:32","nodeType":"YulFunctionCall","src":"4180:22:32"},{"name":"dataEnd","nativeSrc":"4204:7:32","nodeType":"YulIdentifier","src":"4204:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"4159:20:32","nodeType":"YulIdentifier","src":"4159:20:32"},"nativeSrc":"4159:53:32","nodeType":"YulFunctionCall","src":"4159:53:32"},"variableNames":[{"name":"value0","nativeSrc":"4149:6:32","nodeType":"YulIdentifier","src":"4149:6:32"}]}]},{"nativeSrc":"4232:118:32","nodeType":"YulBlock","src":"4232:118:32","statements":[{"nativeSrc":"4247:16:32","nodeType":"YulVariableDeclaration","src":"4247:16:32","value":{"kind":"number","nativeSrc":"4261:2:32","nodeType":"YulLiteral","src":"4261:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4251:6:32","nodeType":"YulTypedName","src":"4251:6:32","type":""}]},{"nativeSrc":"4277:63:32","nodeType":"YulAssignment","src":"4277:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4312:9:32","nodeType":"YulIdentifier","src":"4312:9:32"},{"name":"offset","nativeSrc":"4323:6:32","nodeType":"YulIdentifier","src":"4323:6:32"}],"functionName":{"name":"add","nativeSrc":"4308:3:32","nodeType":"YulIdentifier","src":"4308:3:32"},"nativeSrc":"4308:22:32","nodeType":"YulFunctionCall","src":"4308:22:32"},{"name":"dataEnd","nativeSrc":"4332:7:32","nodeType":"YulIdentifier","src":"4332:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4287:20:32","nodeType":"YulIdentifier","src":"4287:20:32"},"nativeSrc":"4287:53:32","nodeType":"YulFunctionCall","src":"4287:53:32"},"variableNames":[{"name":"value1","nativeSrc":"4277:6:32","nodeType":"YulIdentifier","src":"4277:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"3883:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3928:9:32","nodeType":"YulTypedName","src":"3928:9:32","type":""},{"name":"dataEnd","nativeSrc":"3939:7:32","nodeType":"YulTypedName","src":"3939:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3951:6:32","nodeType":"YulTypedName","src":"3951:6:32","type":""},{"name":"value1","nativeSrc":"3959:6:32","nodeType":"YulTypedName","src":"3959:6:32","type":""}],"src":"3883:474:32"},{"body":{"nativeSrc":"4403:76:32","nodeType":"YulBlock","src":"4403:76:32","statements":[{"body":{"nativeSrc":"4457:16:32","nodeType":"YulBlock","src":"4457:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4466:1:32","nodeType":"YulLiteral","src":"4466:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"4469:1:32","nodeType":"YulLiteral","src":"4469:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4459:6:32","nodeType":"YulIdentifier","src":"4459:6:32"},"nativeSrc":"4459:12:32","nodeType":"YulFunctionCall","src":"4459:12:32"},"nativeSrc":"4459:12:32","nodeType":"YulExpressionStatement","src":"4459:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4426:5:32","nodeType":"YulIdentifier","src":"4426:5:32"},{"arguments":[{"name":"value","nativeSrc":"4448:5:32","nodeType":"YulIdentifier","src":"4448:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"4433:14:32","nodeType":"YulIdentifier","src":"4433:14:32"},"nativeSrc":"4433:21:32","nodeType":"YulFunctionCall","src":"4433:21:32"}],"functionName":{"name":"eq","nativeSrc":"4423:2:32","nodeType":"YulIdentifier","src":"4423:2:32"},"nativeSrc":"4423:32:32","nodeType":"YulFunctionCall","src":"4423:32:32"}],"functionName":{"name":"iszero","nativeSrc":"4416:6:32","nodeType":"YulIdentifier","src":"4416:6:32"},"nativeSrc":"4416:40:32","nodeType":"YulFunctionCall","src":"4416:40:32"},"nativeSrc":"4413:60:32","nodeType":"YulIf","src":"4413:60:32"}]},"name":"validator_revert_t_bool","nativeSrc":"4363:116:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4396:5:32","nodeType":"YulTypedName","src":"4396:5:32","type":""}],"src":"4363:116:32"},{"body":{"nativeSrc":"4534:84:32","nodeType":"YulBlock","src":"4534:84:32","statements":[{"nativeSrc":"4544:29:32","nodeType":"YulAssignment","src":"4544:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"4566:6:32","nodeType":"YulIdentifier","src":"4566:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"4553:12:32","nodeType":"YulIdentifier","src":"4553:12:32"},"nativeSrc":"4553:20:32","nodeType":"YulFunctionCall","src":"4553:20:32"},"variableNames":[{"name":"value","nativeSrc":"4544:5:32","nodeType":"YulIdentifier","src":"4544:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4606:5:32","nodeType":"YulIdentifier","src":"4606:5:32"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"4582:23:32","nodeType":"YulIdentifier","src":"4582:23:32"},"nativeSrc":"4582:30:32","nodeType":"YulFunctionCall","src":"4582:30:32"},"nativeSrc":"4582:30:32","nodeType":"YulExpressionStatement","src":"4582:30:32"}]},"name":"abi_decode_t_bool","nativeSrc":"4485:133:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4512:6:32","nodeType":"YulTypedName","src":"4512:6:32","type":""},{"name":"end","nativeSrc":"4520:3:32","nodeType":"YulTypedName","src":"4520:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4528:5:32","nodeType":"YulTypedName","src":"4528:5:32","type":""}],"src":"4485:133:32"},{"body":{"nativeSrc":"4687:260:32","nodeType":"YulBlock","src":"4687:260:32","statements":[{"body":{"nativeSrc":"4733:83:32","nodeType":"YulBlock","src":"4733:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4735:77:32","nodeType":"YulIdentifier","src":"4735:77:32"},"nativeSrc":"4735:79:32","nodeType":"YulFunctionCall","src":"4735:79:32"},"nativeSrc":"4735:79:32","nodeType":"YulExpressionStatement","src":"4735:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4708:7:32","nodeType":"YulIdentifier","src":"4708:7:32"},{"name":"headStart","nativeSrc":"4717:9:32","nodeType":"YulIdentifier","src":"4717:9:32"}],"functionName":{"name":"sub","nativeSrc":"4704:3:32","nodeType":"YulIdentifier","src":"4704:3:32"},"nativeSrc":"4704:23:32","nodeType":"YulFunctionCall","src":"4704:23:32"},{"kind":"number","nativeSrc":"4729:2:32","nodeType":"YulLiteral","src":"4729:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4700:3:32","nodeType":"YulIdentifier","src":"4700:3:32"},"nativeSrc":"4700:32:32","nodeType":"YulFunctionCall","src":"4700:32:32"},"nativeSrc":"4697:119:32","nodeType":"YulIf","src":"4697:119:32"},{"nativeSrc":"4826:114:32","nodeType":"YulBlock","src":"4826:114:32","statements":[{"nativeSrc":"4841:15:32","nodeType":"YulVariableDeclaration","src":"4841:15:32","value":{"kind":"number","nativeSrc":"4855:1:32","nodeType":"YulLiteral","src":"4855:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4845:6:32","nodeType":"YulTypedName","src":"4845:6:32","type":""}]},{"nativeSrc":"4870:60:32","nodeType":"YulAssignment","src":"4870:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4902:9:32","nodeType":"YulIdentifier","src":"4902:9:32"},{"name":"offset","nativeSrc":"4913:6:32","nodeType":"YulIdentifier","src":"4913:6:32"}],"functionName":{"name":"add","nativeSrc":"4898:3:32","nodeType":"YulIdentifier","src":"4898:3:32"},"nativeSrc":"4898:22:32","nodeType":"YulFunctionCall","src":"4898:22:32"},{"name":"dataEnd","nativeSrc":"4922:7:32","nodeType":"YulIdentifier","src":"4922:7:32"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"4880:17:32","nodeType":"YulIdentifier","src":"4880:17:32"},"nativeSrc":"4880:50:32","nodeType":"YulFunctionCall","src":"4880:50:32"},"variableNames":[{"name":"value0","nativeSrc":"4870:6:32","nodeType":"YulIdentifier","src":"4870:6:32"}]}]}]},"name":"abi_decode_tuple_t_bool","nativeSrc":"4624:323:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4657:9:32","nodeType":"YulTypedName","src":"4657:9:32","type":""},{"name":"dataEnd","nativeSrc":"4668:7:32","nodeType":"YulTypedName","src":"4668:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4680:6:32","nodeType":"YulTypedName","src":"4680:6:32","type":""}],"src":"4624:323:32"},{"body":{"nativeSrc":"5018:53:32","nodeType":"YulBlock","src":"5018:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5035:3:32","nodeType":"YulIdentifier","src":"5035:3:32"},{"arguments":[{"name":"value","nativeSrc":"5058:5:32","nodeType":"YulIdentifier","src":"5058:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5040:17:32","nodeType":"YulIdentifier","src":"5040:17:32"},"nativeSrc":"5040:24:32","nodeType":"YulFunctionCall","src":"5040:24:32"}],"functionName":{"name":"mstore","nativeSrc":"5028:6:32","nodeType":"YulIdentifier","src":"5028:6:32"},"nativeSrc":"5028:37:32","nodeType":"YulFunctionCall","src":"5028:37:32"},"nativeSrc":"5028:37:32","nodeType":"YulExpressionStatement","src":"5028:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4953:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5006:5:32","nodeType":"YulTypedName","src":"5006:5:32","type":""},{"name":"pos","nativeSrc":"5013:3:32","nodeType":"YulTypedName","src":"5013:3:32","type":""}],"src":"4953:118:32"},{"body":{"nativeSrc":"5175:124:32","nodeType":"YulBlock","src":"5175:124:32","statements":[{"nativeSrc":"5185:26:32","nodeType":"YulAssignment","src":"5185:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"5197:9:32","nodeType":"YulIdentifier","src":"5197:9:32"},{"kind":"number","nativeSrc":"5208:2:32","nodeType":"YulLiteral","src":"5208:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5193:3:32","nodeType":"YulIdentifier","src":"5193:3:32"},"nativeSrc":"5193:18:32","nodeType":"YulFunctionCall","src":"5193:18:32"},"variableNames":[{"name":"tail","nativeSrc":"5185:4:32","nodeType":"YulIdentifier","src":"5185:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5265:6:32","nodeType":"YulIdentifier","src":"5265:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"5278:9:32","nodeType":"YulIdentifier","src":"5278:9:32"},{"kind":"number","nativeSrc":"5289:1:32","nodeType":"YulLiteral","src":"5289:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5274:3:32","nodeType":"YulIdentifier","src":"5274:3:32"},"nativeSrc":"5274:17:32","nodeType":"YulFunctionCall","src":"5274:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5221:43:32","nodeType":"YulIdentifier","src":"5221:43:32"},"nativeSrc":"5221:71:32","nodeType":"YulFunctionCall","src":"5221:71:32"},"nativeSrc":"5221:71:32","nodeType":"YulExpressionStatement","src":"5221:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5077:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5147:9:32","nodeType":"YulTypedName","src":"5147:9:32","type":""},{"name":"value0","nativeSrc":"5159:6:32","nodeType":"YulTypedName","src":"5159:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5170:4:32","nodeType":"YulTypedName","src":"5170:4:32","type":""}],"src":"5077:222:32"},{"body":{"nativeSrc":"5350:32:32","nodeType":"YulBlock","src":"5350:32:32","statements":[{"nativeSrc":"5360:16:32","nodeType":"YulAssignment","src":"5360:16:32","value":{"name":"value","nativeSrc":"5371:5:32","nodeType":"YulIdentifier","src":"5371:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"5360:7:32","nodeType":"YulIdentifier","src":"5360:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5305:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5332:5:32","nodeType":"YulTypedName","src":"5332:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5342:7:32","nodeType":"YulTypedName","src":"5342:7:32","type":""}],"src":"5305:77:32"},{"body":{"nativeSrc":"5431:79:32","nodeType":"YulBlock","src":"5431:79:32","statements":[{"body":{"nativeSrc":"5488:16:32","nodeType":"YulBlock","src":"5488:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5497:1:32","nodeType":"YulLiteral","src":"5497:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5500:1:32","nodeType":"YulLiteral","src":"5500:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5490:6:32","nodeType":"YulIdentifier","src":"5490:6:32"},"nativeSrc":"5490:12:32","nodeType":"YulFunctionCall","src":"5490:12:32"},"nativeSrc":"5490:12:32","nodeType":"YulExpressionStatement","src":"5490:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5454:5:32","nodeType":"YulIdentifier","src":"5454:5:32"},{"arguments":[{"name":"value","nativeSrc":"5479:5:32","nodeType":"YulIdentifier","src":"5479:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5461:17:32","nodeType":"YulIdentifier","src":"5461:17:32"},"nativeSrc":"5461:24:32","nodeType":"YulFunctionCall","src":"5461:24:32"}],"functionName":{"name":"eq","nativeSrc":"5451:2:32","nodeType":"YulIdentifier","src":"5451:2:32"},"nativeSrc":"5451:35:32","nodeType":"YulFunctionCall","src":"5451:35:32"}],"functionName":{"name":"iszero","nativeSrc":"5444:6:32","nodeType":"YulIdentifier","src":"5444:6:32"},"nativeSrc":"5444:43:32","nodeType":"YulFunctionCall","src":"5444:43:32"},"nativeSrc":"5441:63:32","nodeType":"YulIf","src":"5441:63:32"}]},"name":"validator_revert_t_uint256","nativeSrc":"5388:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5424:5:32","nodeType":"YulTypedName","src":"5424:5:32","type":""}],"src":"5388:122:32"},{"body":{"nativeSrc":"5568:87:32","nodeType":"YulBlock","src":"5568:87:32","statements":[{"nativeSrc":"5578:29:32","nodeType":"YulAssignment","src":"5578:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"5600:6:32","nodeType":"YulIdentifier","src":"5600:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"5587:12:32","nodeType":"YulIdentifier","src":"5587:12:32"},"nativeSrc":"5587:20:32","nodeType":"YulFunctionCall","src":"5587:20:32"},"variableNames":[{"name":"value","nativeSrc":"5578:5:32","nodeType":"YulIdentifier","src":"5578:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5643:5:32","nodeType":"YulIdentifier","src":"5643:5:32"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5616:26:32","nodeType":"YulIdentifier","src":"5616:26:32"},"nativeSrc":"5616:33:32","nodeType":"YulFunctionCall","src":"5616:33:32"},"nativeSrc":"5616:33:32","nodeType":"YulExpressionStatement","src":"5616:33:32"}]},"name":"abi_decode_t_uint256","nativeSrc":"5516:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5546:6:32","nodeType":"YulTypedName","src":"5546:6:32","type":""},{"name":"end","nativeSrc":"5554:3:32","nodeType":"YulTypedName","src":"5554:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5562:5:32","nodeType":"YulTypedName","src":"5562:5:32","type":""}],"src":"5516:139:32"},{"body":{"nativeSrc":"5744:391:32","nodeType":"YulBlock","src":"5744:391:32","statements":[{"body":{"nativeSrc":"5790:83:32","nodeType":"YulBlock","src":"5790:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5792:77:32","nodeType":"YulIdentifier","src":"5792:77:32"},"nativeSrc":"5792:79:32","nodeType":"YulFunctionCall","src":"5792:79:32"},"nativeSrc":"5792:79:32","nodeType":"YulExpressionStatement","src":"5792:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5765:7:32","nodeType":"YulIdentifier","src":"5765:7:32"},{"name":"headStart","nativeSrc":"5774:9:32","nodeType":"YulIdentifier","src":"5774:9:32"}],"functionName":{"name":"sub","nativeSrc":"5761:3:32","nodeType":"YulIdentifier","src":"5761:3:32"},"nativeSrc":"5761:23:32","nodeType":"YulFunctionCall","src":"5761:23:32"},{"kind":"number","nativeSrc":"5786:2:32","nodeType":"YulLiteral","src":"5786:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5757:3:32","nodeType":"YulIdentifier","src":"5757:3:32"},"nativeSrc":"5757:32:32","nodeType":"YulFunctionCall","src":"5757:32:32"},"nativeSrc":"5754:119:32","nodeType":"YulIf","src":"5754:119:32"},{"nativeSrc":"5883:117:32","nodeType":"YulBlock","src":"5883:117:32","statements":[{"nativeSrc":"5898:15:32","nodeType":"YulVariableDeclaration","src":"5898:15:32","value":{"kind":"number","nativeSrc":"5912:1:32","nodeType":"YulLiteral","src":"5912:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5902:6:32","nodeType":"YulTypedName","src":"5902:6:32","type":""}]},{"nativeSrc":"5927:63:32","nodeType":"YulAssignment","src":"5927:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5962:9:32","nodeType":"YulIdentifier","src":"5962:9:32"},{"name":"offset","nativeSrc":"5973:6:32","nodeType":"YulIdentifier","src":"5973:6:32"}],"functionName":{"name":"add","nativeSrc":"5958:3:32","nodeType":"YulIdentifier","src":"5958:3:32"},"nativeSrc":"5958:22:32","nodeType":"YulFunctionCall","src":"5958:22:32"},{"name":"dataEnd","nativeSrc":"5982:7:32","nodeType":"YulIdentifier","src":"5982:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5937:20:32","nodeType":"YulIdentifier","src":"5937:20:32"},"nativeSrc":"5937:53:32","nodeType":"YulFunctionCall","src":"5937:53:32"},"variableNames":[{"name":"value0","nativeSrc":"5927:6:32","nodeType":"YulIdentifier","src":"5927:6:32"}]}]},{"nativeSrc":"6010:118:32","nodeType":"YulBlock","src":"6010:118:32","statements":[{"nativeSrc":"6025:16:32","nodeType":"YulVariableDeclaration","src":"6025:16:32","value":{"kind":"number","nativeSrc":"6039:2:32","nodeType":"YulLiteral","src":"6039:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6029:6:32","nodeType":"YulTypedName","src":"6029:6:32","type":""}]},{"nativeSrc":"6055:63:32","nodeType":"YulAssignment","src":"6055:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6090:9:32","nodeType":"YulIdentifier","src":"6090:9:32"},{"name":"offset","nativeSrc":"6101:6:32","nodeType":"YulIdentifier","src":"6101:6:32"}],"functionName":{"name":"add","nativeSrc":"6086:3:32","nodeType":"YulIdentifier","src":"6086:3:32"},"nativeSrc":"6086:22:32","nodeType":"YulFunctionCall","src":"6086:22:32"},{"name":"dataEnd","nativeSrc":"6110:7:32","nodeType":"YulIdentifier","src":"6110:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6065:20:32","nodeType":"YulIdentifier","src":"6065:20:32"},"nativeSrc":"6065:53:32","nodeType":"YulFunctionCall","src":"6065:53:32"},"variableNames":[{"name":"value1","nativeSrc":"6055:6:32","nodeType":"YulIdentifier","src":"6055:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nativeSrc":"5661:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5706:9:32","nodeType":"YulTypedName","src":"5706:9:32","type":""},{"name":"dataEnd","nativeSrc":"5717:7:32","nodeType":"YulTypedName","src":"5717:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5729:6:32","nodeType":"YulTypedName","src":"5729:6:32","type":""},{"name":"value1","nativeSrc":"5737:6:32","nodeType":"YulTypedName","src":"5737:6:32","type":""}],"src":"5661:474:32"},{"body":{"nativeSrc":"6207:263:32","nodeType":"YulBlock","src":"6207:263:32","statements":[{"body":{"nativeSrc":"6253:83:32","nodeType":"YulBlock","src":"6253:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6255:77:32","nodeType":"YulIdentifier","src":"6255:77:32"},"nativeSrc":"6255:79:32","nodeType":"YulFunctionCall","src":"6255:79:32"},"nativeSrc":"6255:79:32","nodeType":"YulExpressionStatement","src":"6255:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6228:7:32","nodeType":"YulIdentifier","src":"6228:7:32"},{"name":"headStart","nativeSrc":"6237:9:32","nodeType":"YulIdentifier","src":"6237:9:32"}],"functionName":{"name":"sub","nativeSrc":"6224:3:32","nodeType":"YulIdentifier","src":"6224:3:32"},"nativeSrc":"6224:23:32","nodeType":"YulFunctionCall","src":"6224:23:32"},{"kind":"number","nativeSrc":"6249:2:32","nodeType":"YulLiteral","src":"6249:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6220:3:32","nodeType":"YulIdentifier","src":"6220:3:32"},"nativeSrc":"6220:32:32","nodeType":"YulFunctionCall","src":"6220:32:32"},"nativeSrc":"6217:119:32","nodeType":"YulIf","src":"6217:119:32"},{"nativeSrc":"6346:117:32","nodeType":"YulBlock","src":"6346:117:32","statements":[{"nativeSrc":"6361:15:32","nodeType":"YulVariableDeclaration","src":"6361:15:32","value":{"kind":"number","nativeSrc":"6375:1:32","nodeType":"YulLiteral","src":"6375:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6365:6:32","nodeType":"YulTypedName","src":"6365:6:32","type":""}]},{"nativeSrc":"6390:63:32","nodeType":"YulAssignment","src":"6390:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6425:9:32","nodeType":"YulIdentifier","src":"6425:9:32"},{"name":"offset","nativeSrc":"6436:6:32","nodeType":"YulIdentifier","src":"6436:6:32"}],"functionName":{"name":"add","nativeSrc":"6421:3:32","nodeType":"YulIdentifier","src":"6421:3:32"},"nativeSrc":"6421:22:32","nodeType":"YulFunctionCall","src":"6421:22:32"},{"name":"dataEnd","nativeSrc":"6445:7:32","nodeType":"YulIdentifier","src":"6445:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6400:20:32","nodeType":"YulIdentifier","src":"6400:20:32"},"nativeSrc":"6400:53:32","nodeType":"YulFunctionCall","src":"6400:53:32"},"variableNames":[{"name":"value0","nativeSrc":"6390:6:32","nodeType":"YulIdentifier","src":"6390:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"6141:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6177:9:32","nodeType":"YulTypedName","src":"6177:9:32","type":""},{"name":"dataEnd","nativeSrc":"6188:7:32","nodeType":"YulTypedName","src":"6188:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6200:6:32","nodeType":"YulTypedName","src":"6200:6:32","type":""}],"src":"6141:329:32"},{"body":{"nativeSrc":"6541:53:32","nodeType":"YulBlock","src":"6541:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6558:3:32","nodeType":"YulIdentifier","src":"6558:3:32"},{"arguments":[{"name":"value","nativeSrc":"6581:5:32","nodeType":"YulIdentifier","src":"6581:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6563:17:32","nodeType":"YulIdentifier","src":"6563:17:32"},"nativeSrc":"6563:24:32","nodeType":"YulFunctionCall","src":"6563:24:32"}],"functionName":{"name":"mstore","nativeSrc":"6551:6:32","nodeType":"YulIdentifier","src":"6551:6:32"},"nativeSrc":"6551:37:32","nodeType":"YulFunctionCall","src":"6551:37:32"},"nativeSrc":"6551:37:32","nodeType":"YulExpressionStatement","src":"6551:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6476:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6529:5:32","nodeType":"YulTypedName","src":"6529:5:32","type":""},{"name":"pos","nativeSrc":"6536:3:32","nodeType":"YulTypedName","src":"6536:3:32","type":""}],"src":"6476:118:32"},{"body":{"nativeSrc":"6698:124:32","nodeType":"YulBlock","src":"6698:124:32","statements":[{"nativeSrc":"6708:26:32","nodeType":"YulAssignment","src":"6708:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"6720:9:32","nodeType":"YulIdentifier","src":"6720:9:32"},{"kind":"number","nativeSrc":"6731:2:32","nodeType":"YulLiteral","src":"6731:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6716:3:32","nodeType":"YulIdentifier","src":"6716:3:32"},"nativeSrc":"6716:18:32","nodeType":"YulFunctionCall","src":"6716:18:32"},"variableNames":[{"name":"tail","nativeSrc":"6708:4:32","nodeType":"YulIdentifier","src":"6708:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6788:6:32","nodeType":"YulIdentifier","src":"6788:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"6801:9:32","nodeType":"YulIdentifier","src":"6801:9:32"},{"kind":"number","nativeSrc":"6812:1:32","nodeType":"YulLiteral","src":"6812:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6797:3:32","nodeType":"YulIdentifier","src":"6797:3:32"},"nativeSrc":"6797:17:32","nodeType":"YulFunctionCall","src":"6797:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6744:43:32","nodeType":"YulIdentifier","src":"6744:43:32"},"nativeSrc":"6744:71:32","nodeType":"YulFunctionCall","src":"6744:71:32"},"nativeSrc":"6744:71:32","nodeType":"YulExpressionStatement","src":"6744:71:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"6600:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6670:9:32","nodeType":"YulTypedName","src":"6670:9:32","type":""},{"name":"value0","nativeSrc":"6682:6:32","nodeType":"YulTypedName","src":"6682:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6693:4:32","nodeType":"YulTypedName","src":"6693:4:32","type":""}],"src":"6600:222:32"},{"body":{"nativeSrc":"6894:263:32","nodeType":"YulBlock","src":"6894:263:32","statements":[{"body":{"nativeSrc":"6940:83:32","nodeType":"YulBlock","src":"6940:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6942:77:32","nodeType":"YulIdentifier","src":"6942:77:32"},"nativeSrc":"6942:79:32","nodeType":"YulFunctionCall","src":"6942:79:32"},"nativeSrc":"6942:79:32","nodeType":"YulExpressionStatement","src":"6942:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6915:7:32","nodeType":"YulIdentifier","src":"6915:7:32"},{"name":"headStart","nativeSrc":"6924:9:32","nodeType":"YulIdentifier","src":"6924:9:32"}],"functionName":{"name":"sub","nativeSrc":"6911:3:32","nodeType":"YulIdentifier","src":"6911:3:32"},"nativeSrc":"6911:23:32","nodeType":"YulFunctionCall","src":"6911:23:32"},{"kind":"number","nativeSrc":"6936:2:32","nodeType":"YulLiteral","src":"6936:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6907:3:32","nodeType":"YulIdentifier","src":"6907:3:32"},"nativeSrc":"6907:32:32","nodeType":"YulFunctionCall","src":"6907:32:32"},"nativeSrc":"6904:119:32","nodeType":"YulIf","src":"6904:119:32"},{"nativeSrc":"7033:117:32","nodeType":"YulBlock","src":"7033:117:32","statements":[{"nativeSrc":"7048:15:32","nodeType":"YulVariableDeclaration","src":"7048:15:32","value":{"kind":"number","nativeSrc":"7062:1:32","nodeType":"YulLiteral","src":"7062:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7052:6:32","nodeType":"YulTypedName","src":"7052:6:32","type":""}]},{"nativeSrc":"7077:63:32","nodeType":"YulAssignment","src":"7077:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7112:9:32","nodeType":"YulIdentifier","src":"7112:9:32"},{"name":"offset","nativeSrc":"7123:6:32","nodeType":"YulIdentifier","src":"7123:6:32"}],"functionName":{"name":"add","nativeSrc":"7108:3:32","nodeType":"YulIdentifier","src":"7108:3:32"},"nativeSrc":"7108:22:32","nodeType":"YulFunctionCall","src":"7108:22:32"},{"name":"dataEnd","nativeSrc":"7132:7:32","nodeType":"YulIdentifier","src":"7132:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7087:20:32","nodeType":"YulIdentifier","src":"7087:20:32"},"nativeSrc":"7087:53:32","nodeType":"YulFunctionCall","src":"7087:53:32"},"variableNames":[{"name":"value0","nativeSrc":"7077:6:32","nodeType":"YulIdentifier","src":"7077:6:32"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"6828:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6864:9:32","nodeType":"YulTypedName","src":"6864:9:32","type":""},{"name":"dataEnd","nativeSrc":"6875:7:32","nodeType":"YulTypedName","src":"6875:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6887:6:32","nodeType":"YulTypedName","src":"6887:6:32","type":""}],"src":"6828:329:32"},{"body":{"nativeSrc":"7246:391:32","nodeType":"YulBlock","src":"7246:391:32","statements":[{"body":{"nativeSrc":"7292:83:32","nodeType":"YulBlock","src":"7292:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7294:77:32","nodeType":"YulIdentifier","src":"7294:77:32"},"nativeSrc":"7294:79:32","nodeType":"YulFunctionCall","src":"7294:79:32"},"nativeSrc":"7294:79:32","nodeType":"YulExpressionStatement","src":"7294:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7267:7:32","nodeType":"YulIdentifier","src":"7267:7:32"},{"name":"headStart","nativeSrc":"7276:9:32","nodeType":"YulIdentifier","src":"7276:9:32"}],"functionName":{"name":"sub","nativeSrc":"7263:3:32","nodeType":"YulIdentifier","src":"7263:3:32"},"nativeSrc":"7263:23:32","nodeType":"YulFunctionCall","src":"7263:23:32"},{"kind":"number","nativeSrc":"7288:2:32","nodeType":"YulLiteral","src":"7288:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7259:3:32","nodeType":"YulIdentifier","src":"7259:3:32"},"nativeSrc":"7259:32:32","nodeType":"YulFunctionCall","src":"7259:32:32"},"nativeSrc":"7256:119:32","nodeType":"YulIf","src":"7256:119:32"},{"nativeSrc":"7385:117:32","nodeType":"YulBlock","src":"7385:117:32","statements":[{"nativeSrc":"7400:15:32","nodeType":"YulVariableDeclaration","src":"7400:15:32","value":{"kind":"number","nativeSrc":"7414:1:32","nodeType":"YulLiteral","src":"7414:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7404:6:32","nodeType":"YulTypedName","src":"7404:6:32","type":""}]},{"nativeSrc":"7429:63:32","nodeType":"YulAssignment","src":"7429:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7464:9:32","nodeType":"YulIdentifier","src":"7464:9:32"},{"name":"offset","nativeSrc":"7475:6:32","nodeType":"YulIdentifier","src":"7475:6:32"}],"functionName":{"name":"add","nativeSrc":"7460:3:32","nodeType":"YulIdentifier","src":"7460:3:32"},"nativeSrc":"7460:22:32","nodeType":"YulFunctionCall","src":"7460:22:32"},{"name":"dataEnd","nativeSrc":"7484:7:32","nodeType":"YulIdentifier","src":"7484:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7439:20:32","nodeType":"YulIdentifier","src":"7439:20:32"},"nativeSrc":"7439:53:32","nodeType":"YulFunctionCall","src":"7439:53:32"},"variableNames":[{"name":"value0","nativeSrc":"7429:6:32","nodeType":"YulIdentifier","src":"7429:6:32"}]}]},{"nativeSrc":"7512:118:32","nodeType":"YulBlock","src":"7512:118:32","statements":[{"nativeSrc":"7527:16:32","nodeType":"YulVariableDeclaration","src":"7527:16:32","value":{"kind":"number","nativeSrc":"7541:2:32","nodeType":"YulLiteral","src":"7541:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7531:6:32","nodeType":"YulTypedName","src":"7531:6:32","type":""}]},{"nativeSrc":"7557:63:32","nodeType":"YulAssignment","src":"7557:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7592:9:32","nodeType":"YulIdentifier","src":"7592:9:32"},{"name":"offset","nativeSrc":"7603:6:32","nodeType":"YulIdentifier","src":"7603:6:32"}],"functionName":{"name":"add","nativeSrc":"7588:3:32","nodeType":"YulIdentifier","src":"7588:3:32"},"nativeSrc":"7588:22:32","nodeType":"YulFunctionCall","src":"7588:22:32"},{"name":"dataEnd","nativeSrc":"7612:7:32","nodeType":"YulIdentifier","src":"7612:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7567:20:32","nodeType":"YulIdentifier","src":"7567:20:32"},"nativeSrc":"7567:53:32","nodeType":"YulFunctionCall","src":"7567:53:32"},"variableNames":[{"name":"value1","nativeSrc":"7557:6:32","nodeType":"YulIdentifier","src":"7557:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"7163:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7208:9:32","nodeType":"YulTypedName","src":"7208:9:32","type":""},{"name":"dataEnd","nativeSrc":"7219:7:32","nodeType":"YulTypedName","src":"7219:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7231:6:32","nodeType":"YulTypedName","src":"7231:6:32","type":""},{"name":"value1","nativeSrc":"7239:6:32","nodeType":"YulTypedName","src":"7239:6:32","type":""}],"src":"7163:474:32"},{"body":{"nativeSrc":"7706:80:32","nodeType":"YulBlock","src":"7706:80:32","statements":[{"nativeSrc":"7716:22:32","nodeType":"YulAssignment","src":"7716:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"7731:6:32","nodeType":"YulIdentifier","src":"7731:6:32"}],"functionName":{"name":"mload","nativeSrc":"7725:5:32","nodeType":"YulIdentifier","src":"7725:5:32"},"nativeSrc":"7725:13:32","nodeType":"YulFunctionCall","src":"7725:13:32"},"variableNames":[{"name":"value","nativeSrc":"7716:5:32","nodeType":"YulIdentifier","src":"7716:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7774:5:32","nodeType":"YulIdentifier","src":"7774:5:32"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"7747:26:32","nodeType":"YulIdentifier","src":"7747:26:32"},"nativeSrc":"7747:33:32","nodeType":"YulFunctionCall","src":"7747:33:32"},"nativeSrc":"7747:33:32","nodeType":"YulExpressionStatement","src":"7747:33:32"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"7643:143:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7684:6:32","nodeType":"YulTypedName","src":"7684:6:32","type":""},{"name":"end","nativeSrc":"7692:3:32","nodeType":"YulTypedName","src":"7692:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7700:5:32","nodeType":"YulTypedName","src":"7700:5:32","type":""}],"src":"7643:143:32"},{"body":{"nativeSrc":"7869:274:32","nodeType":"YulBlock","src":"7869:274:32","statements":[{"body":{"nativeSrc":"7915:83:32","nodeType":"YulBlock","src":"7915:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7917:77:32","nodeType":"YulIdentifier","src":"7917:77:32"},"nativeSrc":"7917:79:32","nodeType":"YulFunctionCall","src":"7917:79:32"},"nativeSrc":"7917:79:32","nodeType":"YulExpressionStatement","src":"7917:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7890:7:32","nodeType":"YulIdentifier","src":"7890:7:32"},{"name":"headStart","nativeSrc":"7899:9:32","nodeType":"YulIdentifier","src":"7899:9:32"}],"functionName":{"name":"sub","nativeSrc":"7886:3:32","nodeType":"YulIdentifier","src":"7886:3:32"},"nativeSrc":"7886:23:32","nodeType":"YulFunctionCall","src":"7886:23:32"},{"kind":"number","nativeSrc":"7911:2:32","nodeType":"YulLiteral","src":"7911:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7882:3:32","nodeType":"YulIdentifier","src":"7882:3:32"},"nativeSrc":"7882:32:32","nodeType":"YulFunctionCall","src":"7882:32:32"},"nativeSrc":"7879:119:32","nodeType":"YulIf","src":"7879:119:32"},{"nativeSrc":"8008:128:32","nodeType":"YulBlock","src":"8008:128:32","statements":[{"nativeSrc":"8023:15:32","nodeType":"YulVariableDeclaration","src":"8023:15:32","value":{"kind":"number","nativeSrc":"8037:1:32","nodeType":"YulLiteral","src":"8037:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8027:6:32","nodeType":"YulTypedName","src":"8027:6:32","type":""}]},{"nativeSrc":"8052:74:32","nodeType":"YulAssignment","src":"8052:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8098:9:32","nodeType":"YulIdentifier","src":"8098:9:32"},{"name":"offset","nativeSrc":"8109:6:32","nodeType":"YulIdentifier","src":"8109:6:32"}],"functionName":{"name":"add","nativeSrc":"8094:3:32","nodeType":"YulIdentifier","src":"8094:3:32"},"nativeSrc":"8094:22:32","nodeType":"YulFunctionCall","src":"8094:22:32"},{"name":"dataEnd","nativeSrc":"8118:7:32","nodeType":"YulIdentifier","src":"8118:7:32"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"8062:31:32","nodeType":"YulIdentifier","src":"8062:31:32"},"nativeSrc":"8062:64:32","nodeType":"YulFunctionCall","src":"8062:64:32"},"variableNames":[{"name":"value0","nativeSrc":"8052:6:32","nodeType":"YulIdentifier","src":"8052:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"7792:351:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7839:9:32","nodeType":"YulTypedName","src":"7839:9:32","type":""},{"name":"dataEnd","nativeSrc":"7850:7:32","nodeType":"YulTypedName","src":"7850:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7862:6:32","nodeType":"YulTypedName","src":"7862:6:32","type":""}],"src":"7792:351:32"},{"body":{"nativeSrc":"8245:73:32","nodeType":"YulBlock","src":"8245:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8262:3:32","nodeType":"YulIdentifier","src":"8262:3:32"},{"name":"length","nativeSrc":"8267:6:32","nodeType":"YulIdentifier","src":"8267:6:32"}],"functionName":{"name":"mstore","nativeSrc":"8255:6:32","nodeType":"YulIdentifier","src":"8255:6:32"},"nativeSrc":"8255:19:32","nodeType":"YulFunctionCall","src":"8255:19:32"},"nativeSrc":"8255:19:32","nodeType":"YulExpressionStatement","src":"8255:19:32"},{"nativeSrc":"8283:29:32","nodeType":"YulAssignment","src":"8283:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"8302:3:32","nodeType":"YulIdentifier","src":"8302:3:32"},{"kind":"number","nativeSrc":"8307:4:32","nodeType":"YulLiteral","src":"8307:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8298:3:32","nodeType":"YulIdentifier","src":"8298:3:32"},"nativeSrc":"8298:14:32","nodeType":"YulFunctionCall","src":"8298:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"8283:11:32","nodeType":"YulIdentifier","src":"8283:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8149:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8217:3:32","nodeType":"YulTypedName","src":"8217:3:32","type":""},{"name":"length","nativeSrc":"8222:6:32","nodeType":"YulTypedName","src":"8222:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"8233:11:32","nodeType":"YulTypedName","src":"8233:11:32","type":""}],"src":"8149:169:32"},{"body":{"nativeSrc":"8430:72:32","nodeType":"YulBlock","src":"8430:72:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"8452:6:32","nodeType":"YulIdentifier","src":"8452:6:32"},{"kind":"number","nativeSrc":"8460:1:32","nodeType":"YulLiteral","src":"8460:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8448:3:32","nodeType":"YulIdentifier","src":"8448:3:32"},"nativeSrc":"8448:14:32","nodeType":"YulFunctionCall","src":"8448:14:32"},{"hexValue":"496e73756666696369656e74206163636f756e742062616c616e6365","kind":"string","nativeSrc":"8464:30:32","nodeType":"YulLiteral","src":"8464:30:32","type":"","value":"Insufficient account balance"}],"functionName":{"name":"mstore","nativeSrc":"8441:6:32","nodeType":"YulIdentifier","src":"8441:6:32"},"nativeSrc":"8441:54:32","nodeType":"YulFunctionCall","src":"8441:54:32"},"nativeSrc":"8441:54:32","nodeType":"YulExpressionStatement","src":"8441:54:32"}]},"name":"store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b","nativeSrc":"8324:178:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8422:6:32","nodeType":"YulTypedName","src":"8422:6:32","type":""}],"src":"8324:178:32"},{"body":{"nativeSrc":"8654:220:32","nodeType":"YulBlock","src":"8654:220:32","statements":[{"nativeSrc":"8664:74:32","nodeType":"YulAssignment","src":"8664:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"8730:3:32","nodeType":"YulIdentifier","src":"8730:3:32"},{"kind":"number","nativeSrc":"8735:2:32","nodeType":"YulLiteral","src":"8735:2:32","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8671:58:32","nodeType":"YulIdentifier","src":"8671:58:32"},"nativeSrc":"8671:67:32","nodeType":"YulFunctionCall","src":"8671:67:32"},"variableNames":[{"name":"pos","nativeSrc":"8664:3:32","nodeType":"YulIdentifier","src":"8664:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8836:3:32","nodeType":"YulIdentifier","src":"8836:3:32"}],"functionName":{"name":"store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b","nativeSrc":"8747:88:32","nodeType":"YulIdentifier","src":"8747:88:32"},"nativeSrc":"8747:93:32","nodeType":"YulFunctionCall","src":"8747:93:32"},"nativeSrc":"8747:93:32","nodeType":"YulExpressionStatement","src":"8747:93:32"},{"nativeSrc":"8849:19:32","nodeType":"YulAssignment","src":"8849:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"8860:3:32","nodeType":"YulIdentifier","src":"8860:3:32"},{"kind":"number","nativeSrc":"8865:2:32","nodeType":"YulLiteral","src":"8865:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8856:3:32","nodeType":"YulIdentifier","src":"8856:3:32"},"nativeSrc":"8856:12:32","nodeType":"YulFunctionCall","src":"8856:12:32"},"variableNames":[{"name":"end","nativeSrc":"8849:3:32","nodeType":"YulIdentifier","src":"8849:3:32"}]}]},"name":"abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack","nativeSrc":"8508:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8642:3:32","nodeType":"YulTypedName","src":"8642:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8650:3:32","nodeType":"YulTypedName","src":"8650:3:32","type":""}],"src":"8508:366:32"},{"body":{"nativeSrc":"9051:248:32","nodeType":"YulBlock","src":"9051:248:32","statements":[{"nativeSrc":"9061:26:32","nodeType":"YulAssignment","src":"9061:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"9073:9:32","nodeType":"YulIdentifier","src":"9073:9:32"},{"kind":"number","nativeSrc":"9084:2:32","nodeType":"YulLiteral","src":"9084:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9069:3:32","nodeType":"YulIdentifier","src":"9069:3:32"},"nativeSrc":"9069:18:32","nodeType":"YulFunctionCall","src":"9069:18:32"},"variableNames":[{"name":"tail","nativeSrc":"9061:4:32","nodeType":"YulIdentifier","src":"9061:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9108:9:32","nodeType":"YulIdentifier","src":"9108:9:32"},{"kind":"number","nativeSrc":"9119:1:32","nodeType":"YulLiteral","src":"9119:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9104:3:32","nodeType":"YulIdentifier","src":"9104:3:32"},"nativeSrc":"9104:17:32","nodeType":"YulFunctionCall","src":"9104:17:32"},{"arguments":[{"name":"tail","nativeSrc":"9127:4:32","nodeType":"YulIdentifier","src":"9127:4:32"},{"name":"headStart","nativeSrc":"9133:9:32","nodeType":"YulIdentifier","src":"9133:9:32"}],"functionName":{"name":"sub","nativeSrc":"9123:3:32","nodeType":"YulIdentifier","src":"9123:3:32"},"nativeSrc":"9123:20:32","nodeType":"YulFunctionCall","src":"9123:20:32"}],"functionName":{"name":"mstore","nativeSrc":"9097:6:32","nodeType":"YulIdentifier","src":"9097:6:32"},"nativeSrc":"9097:47:32","nodeType":"YulFunctionCall","src":"9097:47:32"},"nativeSrc":"9097:47:32","nodeType":"YulExpressionStatement","src":"9097:47:32"},{"nativeSrc":"9153:139:32","nodeType":"YulAssignment","src":"9153:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"9287:4:32","nodeType":"YulIdentifier","src":"9287:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack","nativeSrc":"9161:124:32","nodeType":"YulIdentifier","src":"9161:124:32"},"nativeSrc":"9161:131:32","nodeType":"YulFunctionCall","src":"9161:131:32"},"variableNames":[{"name":"tail","nativeSrc":"9153:4:32","nodeType":"YulIdentifier","src":"9153:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8880:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9031:9:32","nodeType":"YulTypedName","src":"9031:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9046:4:32","nodeType":"YulTypedName","src":"9046:4:32","type":""}],"src":"8880:419:32"},{"body":{"nativeSrc":"9411:70:32","nodeType":"YulBlock","src":"9411:70:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9433:6:32","nodeType":"YulIdentifier","src":"9433:6:32"},{"kind":"number","nativeSrc":"9441:1:32","nodeType":"YulLiteral","src":"9441:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9429:3:32","nodeType":"YulIdentifier","src":"9429:3:32"},"nativeSrc":"9429:14:32","nodeType":"YulFunctionCall","src":"9429:14:32"},{"hexValue":"43616c6c6572206973206e6f7420612077697468647261776572","kind":"string","nativeSrc":"9445:28:32","nodeType":"YulLiteral","src":"9445:28:32","type":"","value":"Caller is not a withdrawer"}],"functionName":{"name":"mstore","nativeSrc":"9422:6:32","nodeType":"YulIdentifier","src":"9422:6:32"},"nativeSrc":"9422:52:32","nodeType":"YulFunctionCall","src":"9422:52:32"},"nativeSrc":"9422:52:32","nodeType":"YulExpressionStatement","src":"9422:52:32"}]},"name":"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","nativeSrc":"9305:176:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9403:6:32","nodeType":"YulTypedName","src":"9403:6:32","type":""}],"src":"9305:176:32"},{"body":{"nativeSrc":"9633:220:32","nodeType":"YulBlock","src":"9633:220:32","statements":[{"nativeSrc":"9643:74:32","nodeType":"YulAssignment","src":"9643:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"9709:3:32","nodeType":"YulIdentifier","src":"9709:3:32"},{"kind":"number","nativeSrc":"9714:2:32","nodeType":"YulLiteral","src":"9714:2:32","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9650:58:32","nodeType":"YulIdentifier","src":"9650:58:32"},"nativeSrc":"9650:67:32","nodeType":"YulFunctionCall","src":"9650:67:32"},"variableNames":[{"name":"pos","nativeSrc":"9643:3:32","nodeType":"YulIdentifier","src":"9643:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9815:3:32","nodeType":"YulIdentifier","src":"9815:3:32"}],"functionName":{"name":"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","nativeSrc":"9726:88:32","nodeType":"YulIdentifier","src":"9726:88:32"},"nativeSrc":"9726:93:32","nodeType":"YulFunctionCall","src":"9726:93:32"},"nativeSrc":"9726:93:32","nodeType":"YulExpressionStatement","src":"9726:93:32"},{"nativeSrc":"9828:19:32","nodeType":"YulAssignment","src":"9828:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"9839:3:32","nodeType":"YulIdentifier","src":"9839:3:32"},{"kind":"number","nativeSrc":"9844:2:32","nodeType":"YulLiteral","src":"9844:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9835:3:32","nodeType":"YulIdentifier","src":"9835:3:32"},"nativeSrc":"9835:12:32","nodeType":"YulFunctionCall","src":"9835:12:32"},"variableNames":[{"name":"end","nativeSrc":"9828:3:32","nodeType":"YulIdentifier","src":"9828:3:32"}]}]},"name":"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack","nativeSrc":"9487:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9621:3:32","nodeType":"YulTypedName","src":"9621:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9629:3:32","nodeType":"YulTypedName","src":"9629:3:32","type":""}],"src":"9487:366:32"},{"body":{"nativeSrc":"10030:248:32","nodeType":"YulBlock","src":"10030:248:32","statements":[{"nativeSrc":"10040:26:32","nodeType":"YulAssignment","src":"10040:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"10052:9:32","nodeType":"YulIdentifier","src":"10052:9:32"},{"kind":"number","nativeSrc":"10063:2:32","nodeType":"YulLiteral","src":"10063:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10048:3:32","nodeType":"YulIdentifier","src":"10048:3:32"},"nativeSrc":"10048:18:32","nodeType":"YulFunctionCall","src":"10048:18:32"},"variableNames":[{"name":"tail","nativeSrc":"10040:4:32","nodeType":"YulIdentifier","src":"10040:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10087:9:32","nodeType":"YulIdentifier","src":"10087:9:32"},{"kind":"number","nativeSrc":"10098:1:32","nodeType":"YulLiteral","src":"10098:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10083:3:32","nodeType":"YulIdentifier","src":"10083:3:32"},"nativeSrc":"10083:17:32","nodeType":"YulFunctionCall","src":"10083:17:32"},{"arguments":[{"name":"tail","nativeSrc":"10106:4:32","nodeType":"YulIdentifier","src":"10106:4:32"},{"name":"headStart","nativeSrc":"10112:9:32","nodeType":"YulIdentifier","src":"10112:9:32"}],"functionName":{"name":"sub","nativeSrc":"10102:3:32","nodeType":"YulIdentifier","src":"10102:3:32"},"nativeSrc":"10102:20:32","nodeType":"YulFunctionCall","src":"10102:20:32"}],"functionName":{"name":"mstore","nativeSrc":"10076:6:32","nodeType":"YulIdentifier","src":"10076:6:32"},"nativeSrc":"10076:47:32","nodeType":"YulFunctionCall","src":"10076:47:32"},"nativeSrc":"10076:47:32","nodeType":"YulExpressionStatement","src":"10076:47:32"},{"nativeSrc":"10132:139:32","nodeType":"YulAssignment","src":"10132:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"10266:4:32","nodeType":"YulIdentifier","src":"10266:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack","nativeSrc":"10140:124:32","nodeType":"YulIdentifier","src":"10140:124:32"},"nativeSrc":"10140:131:32","nodeType":"YulFunctionCall","src":"10140:131:32"},"variableNames":[{"name":"tail","nativeSrc":"10132:4:32","nodeType":"YulIdentifier","src":"10132:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9859:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10010:9:32","nodeType":"YulTypedName","src":"10010:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10025:4:32","nodeType":"YulTypedName","src":"10025:4:32","type":""}],"src":"9859:419:32"},{"body":{"nativeSrc":"10390:69:32","nodeType":"YulBlock","src":"10390:69:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10412:6:32","nodeType":"YulIdentifier","src":"10412:6:32"},{"kind":"number","nativeSrc":"10420:1:32","nodeType":"YulLiteral","src":"10420:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10408:3:32","nodeType":"YulIdentifier","src":"10408:3:32"},"nativeSrc":"10408:14:32","nodeType":"YulFunctionCall","src":"10408:14:32"},{"hexValue":"5769746864726177206973206e6f7420617661696c61626c65","kind":"string","nativeSrc":"10424:27:32","nodeType":"YulLiteral","src":"10424:27:32","type":"","value":"Withdraw is not available"}],"functionName":{"name":"mstore","nativeSrc":"10401:6:32","nodeType":"YulIdentifier","src":"10401:6:32"},"nativeSrc":"10401:51:32","nodeType":"YulFunctionCall","src":"10401:51:32"},"nativeSrc":"10401:51:32","nodeType":"YulExpressionStatement","src":"10401:51:32"}]},"name":"store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62","nativeSrc":"10284:175:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10382:6:32","nodeType":"YulTypedName","src":"10382:6:32","type":""}],"src":"10284:175:32"},{"body":{"nativeSrc":"10611:220:32","nodeType":"YulBlock","src":"10611:220:32","statements":[{"nativeSrc":"10621:74:32","nodeType":"YulAssignment","src":"10621:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"10687:3:32","nodeType":"YulIdentifier","src":"10687:3:32"},{"kind":"number","nativeSrc":"10692:2:32","nodeType":"YulLiteral","src":"10692:2:32","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10628:58:32","nodeType":"YulIdentifier","src":"10628:58:32"},"nativeSrc":"10628:67:32","nodeType":"YulFunctionCall","src":"10628:67:32"},"variableNames":[{"name":"pos","nativeSrc":"10621:3:32","nodeType":"YulIdentifier","src":"10621:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10793:3:32","nodeType":"YulIdentifier","src":"10793:3:32"}],"functionName":{"name":"store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62","nativeSrc":"10704:88:32","nodeType":"YulIdentifier","src":"10704:88:32"},"nativeSrc":"10704:93:32","nodeType":"YulFunctionCall","src":"10704:93:32"},"nativeSrc":"10704:93:32","nodeType":"YulExpressionStatement","src":"10704:93:32"},{"nativeSrc":"10806:19:32","nodeType":"YulAssignment","src":"10806:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"10817:3:32","nodeType":"YulIdentifier","src":"10817:3:32"},{"kind":"number","nativeSrc":"10822:2:32","nodeType":"YulLiteral","src":"10822:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10813:3:32","nodeType":"YulIdentifier","src":"10813:3:32"},"nativeSrc":"10813:12:32","nodeType":"YulFunctionCall","src":"10813:12:32"},"variableNames":[{"name":"end","nativeSrc":"10806:3:32","nodeType":"YulIdentifier","src":"10806:3:32"}]}]},"name":"abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack","nativeSrc":"10465:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10599:3:32","nodeType":"YulTypedName","src":"10599:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10607:3:32","nodeType":"YulTypedName","src":"10607:3:32","type":""}],"src":"10465:366:32"},{"body":{"nativeSrc":"11008:248:32","nodeType":"YulBlock","src":"11008:248:32","statements":[{"nativeSrc":"11018:26:32","nodeType":"YulAssignment","src":"11018:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"11030:9:32","nodeType":"YulIdentifier","src":"11030:9:32"},{"kind":"number","nativeSrc":"11041:2:32","nodeType":"YulLiteral","src":"11041:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11026:3:32","nodeType":"YulIdentifier","src":"11026:3:32"},"nativeSrc":"11026:18:32","nodeType":"YulFunctionCall","src":"11026:18:32"},"variableNames":[{"name":"tail","nativeSrc":"11018:4:32","nodeType":"YulIdentifier","src":"11018:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11065:9:32","nodeType":"YulIdentifier","src":"11065:9:32"},{"kind":"number","nativeSrc":"11076:1:32","nodeType":"YulLiteral","src":"11076:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11061:3:32","nodeType":"YulIdentifier","src":"11061:3:32"},"nativeSrc":"11061:17:32","nodeType":"YulFunctionCall","src":"11061:17:32"},{"arguments":[{"name":"tail","nativeSrc":"11084:4:32","nodeType":"YulIdentifier","src":"11084:4:32"},{"name":"headStart","nativeSrc":"11090:9:32","nodeType":"YulIdentifier","src":"11090:9:32"}],"functionName":{"name":"sub","nativeSrc":"11080:3:32","nodeType":"YulIdentifier","src":"11080:3:32"},"nativeSrc":"11080:20:32","nodeType":"YulFunctionCall","src":"11080:20:32"}],"functionName":{"name":"mstore","nativeSrc":"11054:6:32","nodeType":"YulIdentifier","src":"11054:6:32"},"nativeSrc":"11054:47:32","nodeType":"YulFunctionCall","src":"11054:47:32"},"nativeSrc":"11054:47:32","nodeType":"YulExpressionStatement","src":"11054:47:32"},{"nativeSrc":"11110:139:32","nodeType":"YulAssignment","src":"11110:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"11244:4:32","nodeType":"YulIdentifier","src":"11244:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack","nativeSrc":"11118:124:32","nodeType":"YulIdentifier","src":"11118:124:32"},"nativeSrc":"11118:131:32","nodeType":"YulFunctionCall","src":"11118:131:32"},"variableNames":[{"name":"tail","nativeSrc":"11110:4:32","nodeType":"YulIdentifier","src":"11110:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10837:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10988:9:32","nodeType":"YulTypedName","src":"10988:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11003:4:32","nodeType":"YulTypedName","src":"11003:4:32","type":""}],"src":"10837:419:32"},{"body":{"nativeSrc":"11368:65:32","nodeType":"YulBlock","src":"11368:65:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11390:6:32","nodeType":"YulIdentifier","src":"11390:6:32"},{"kind":"number","nativeSrc":"11398:1:32","nodeType":"YulLiteral","src":"11398:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11386:3:32","nodeType":"YulIdentifier","src":"11386:3:32"},"nativeSrc":"11386:14:32","nodeType":"YulFunctionCall","src":"11386:14:32"},{"hexValue":"457863656564206d6178696d756d20616d6f756e74","kind":"string","nativeSrc":"11402:23:32","nodeType":"YulLiteral","src":"11402:23:32","type":"","value":"Exceed maximum amount"}],"functionName":{"name":"mstore","nativeSrc":"11379:6:32","nodeType":"YulIdentifier","src":"11379:6:32"},"nativeSrc":"11379:47:32","nodeType":"YulFunctionCall","src":"11379:47:32"},"nativeSrc":"11379:47:32","nodeType":"YulExpressionStatement","src":"11379:47:32"}]},"name":"store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b","nativeSrc":"11262:171:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11360:6:32","nodeType":"YulTypedName","src":"11360:6:32","type":""}],"src":"11262:171:32"},{"body":{"nativeSrc":"11585:220:32","nodeType":"YulBlock","src":"11585:220:32","statements":[{"nativeSrc":"11595:74:32","nodeType":"YulAssignment","src":"11595:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"11661:3:32","nodeType":"YulIdentifier","src":"11661:3:32"},{"kind":"number","nativeSrc":"11666:2:32","nodeType":"YulLiteral","src":"11666:2:32","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11602:58:32","nodeType":"YulIdentifier","src":"11602:58:32"},"nativeSrc":"11602:67:32","nodeType":"YulFunctionCall","src":"11602:67:32"},"variableNames":[{"name":"pos","nativeSrc":"11595:3:32","nodeType":"YulIdentifier","src":"11595:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11767:3:32","nodeType":"YulIdentifier","src":"11767:3:32"}],"functionName":{"name":"store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b","nativeSrc":"11678:88:32","nodeType":"YulIdentifier","src":"11678:88:32"},"nativeSrc":"11678:93:32","nodeType":"YulFunctionCall","src":"11678:93:32"},"nativeSrc":"11678:93:32","nodeType":"YulExpressionStatement","src":"11678:93:32"},{"nativeSrc":"11780:19:32","nodeType":"YulAssignment","src":"11780:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"11791:3:32","nodeType":"YulIdentifier","src":"11791:3:32"},{"kind":"number","nativeSrc":"11796:2:32","nodeType":"YulLiteral","src":"11796:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11787:3:32","nodeType":"YulIdentifier","src":"11787:3:32"},"nativeSrc":"11787:12:32","nodeType":"YulFunctionCall","src":"11787:12:32"},"variableNames":[{"name":"end","nativeSrc":"11780:3:32","nodeType":"YulIdentifier","src":"11780:3:32"}]}]},"name":"abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack","nativeSrc":"11439:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11573:3:32","nodeType":"YulTypedName","src":"11573:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11581:3:32","nodeType":"YulTypedName","src":"11581:3:32","type":""}],"src":"11439:366:32"},{"body":{"nativeSrc":"11982:248:32","nodeType":"YulBlock","src":"11982:248:32","statements":[{"nativeSrc":"11992:26:32","nodeType":"YulAssignment","src":"11992:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"12004:9:32","nodeType":"YulIdentifier","src":"12004:9:32"},{"kind":"number","nativeSrc":"12015:2:32","nodeType":"YulLiteral","src":"12015:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12000:3:32","nodeType":"YulIdentifier","src":"12000:3:32"},"nativeSrc":"12000:18:32","nodeType":"YulFunctionCall","src":"12000:18:32"},"variableNames":[{"name":"tail","nativeSrc":"11992:4:32","nodeType":"YulIdentifier","src":"11992:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12039:9:32","nodeType":"YulIdentifier","src":"12039:9:32"},{"kind":"number","nativeSrc":"12050:1:32","nodeType":"YulLiteral","src":"12050:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12035:3:32","nodeType":"YulIdentifier","src":"12035:3:32"},"nativeSrc":"12035:17:32","nodeType":"YulFunctionCall","src":"12035:17:32"},{"arguments":[{"name":"tail","nativeSrc":"12058:4:32","nodeType":"YulIdentifier","src":"12058:4:32"},{"name":"headStart","nativeSrc":"12064:9:32","nodeType":"YulIdentifier","src":"12064:9:32"}],"functionName":{"name":"sub","nativeSrc":"12054:3:32","nodeType":"YulIdentifier","src":"12054:3:32"},"nativeSrc":"12054:20:32","nodeType":"YulFunctionCall","src":"12054:20:32"}],"functionName":{"name":"mstore","nativeSrc":"12028:6:32","nodeType":"YulIdentifier","src":"12028:6:32"},"nativeSrc":"12028:47:32","nodeType":"YulFunctionCall","src":"12028:47:32"},"nativeSrc":"12028:47:32","nodeType":"YulExpressionStatement","src":"12028:47:32"},{"nativeSrc":"12084:139:32","nodeType":"YulAssignment","src":"12084:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"12218:4:32","nodeType":"YulIdentifier","src":"12218:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack","nativeSrc":"12092:124:32","nodeType":"YulIdentifier","src":"12092:124:32"},"nativeSrc":"12092:131:32","nodeType":"YulFunctionCall","src":"12092:131:32"},"variableNames":[{"name":"tail","nativeSrc":"12084:4:32","nodeType":"YulIdentifier","src":"12084:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11811:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11962:9:32","nodeType":"YulTypedName","src":"11962:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11977:4:32","nodeType":"YulTypedName","src":"11977:4:32","type":""}],"src":"11811:419:32"},{"body":{"nativeSrc":"12362:206:32","nodeType":"YulBlock","src":"12362:206:32","statements":[{"nativeSrc":"12372:26:32","nodeType":"YulAssignment","src":"12372:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"12384:9:32","nodeType":"YulIdentifier","src":"12384:9:32"},{"kind":"number","nativeSrc":"12395:2:32","nodeType":"YulLiteral","src":"12395:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12380:3:32","nodeType":"YulIdentifier","src":"12380:3:32"},"nativeSrc":"12380:18:32","nodeType":"YulFunctionCall","src":"12380:18:32"},"variableNames":[{"name":"tail","nativeSrc":"12372:4:32","nodeType":"YulIdentifier","src":"12372:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12452:6:32","nodeType":"YulIdentifier","src":"12452:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12465:9:32","nodeType":"YulIdentifier","src":"12465:9:32"},{"kind":"number","nativeSrc":"12476:1:32","nodeType":"YulLiteral","src":"12476:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12461:3:32","nodeType":"YulIdentifier","src":"12461:3:32"},"nativeSrc":"12461:17:32","nodeType":"YulFunctionCall","src":"12461:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12408:43:32","nodeType":"YulIdentifier","src":"12408:43:32"},"nativeSrc":"12408:71:32","nodeType":"YulFunctionCall","src":"12408:71:32"},"nativeSrc":"12408:71:32","nodeType":"YulExpressionStatement","src":"12408:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12533:6:32","nodeType":"YulIdentifier","src":"12533:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12546:9:32","nodeType":"YulIdentifier","src":"12546:9:32"},{"kind":"number","nativeSrc":"12557:2:32","nodeType":"YulLiteral","src":"12557:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12542:3:32","nodeType":"YulIdentifier","src":"12542:3:32"},"nativeSrc":"12542:18:32","nodeType":"YulFunctionCall","src":"12542:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12489:43:32","nodeType":"YulIdentifier","src":"12489:43:32"},"nativeSrc":"12489:72:32","nodeType":"YulFunctionCall","src":"12489:72:32"},"nativeSrc":"12489:72:32","nodeType":"YulExpressionStatement","src":"12489:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"12236:332:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12326:9:32","nodeType":"YulTypedName","src":"12326:9:32","type":""},{"name":"value1","nativeSrc":"12338:6:32","nodeType":"YulTypedName","src":"12338:6:32","type":""},{"name":"value0","nativeSrc":"12346:6:32","nodeType":"YulTypedName","src":"12346:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12357:4:32","nodeType":"YulTypedName","src":"12357:4:32","type":""}],"src":"12236:332:32"},{"body":{"nativeSrc":"12634:77:32","nodeType":"YulBlock","src":"12634:77:32","statements":[{"nativeSrc":"12644:22:32","nodeType":"YulAssignment","src":"12644:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"12659:6:32","nodeType":"YulIdentifier","src":"12659:6:32"}],"functionName":{"name":"mload","nativeSrc":"12653:5:32","nodeType":"YulIdentifier","src":"12653:5:32"},"nativeSrc":"12653:13:32","nodeType":"YulFunctionCall","src":"12653:13:32"},"variableNames":[{"name":"value","nativeSrc":"12644:5:32","nodeType":"YulIdentifier","src":"12644:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12699:5:32","nodeType":"YulIdentifier","src":"12699:5:32"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"12675:23:32","nodeType":"YulIdentifier","src":"12675:23:32"},"nativeSrc":"12675:30:32","nodeType":"YulFunctionCall","src":"12675:30:32"},"nativeSrc":"12675:30:32","nodeType":"YulExpressionStatement","src":"12675:30:32"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"12574:137:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12612:6:32","nodeType":"YulTypedName","src":"12612:6:32","type":""},{"name":"end","nativeSrc":"12620:3:32","nodeType":"YulTypedName","src":"12620:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12628:5:32","nodeType":"YulTypedName","src":"12628:5:32","type":""}],"src":"12574:137:32"},{"body":{"nativeSrc":"12791:271:32","nodeType":"YulBlock","src":"12791:271:32","statements":[{"body":{"nativeSrc":"12837:83:32","nodeType":"YulBlock","src":"12837:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12839:77:32","nodeType":"YulIdentifier","src":"12839:77:32"},"nativeSrc":"12839:79:32","nodeType":"YulFunctionCall","src":"12839:79:32"},"nativeSrc":"12839:79:32","nodeType":"YulExpressionStatement","src":"12839:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12812:7:32","nodeType":"YulIdentifier","src":"12812:7:32"},{"name":"headStart","nativeSrc":"12821:9:32","nodeType":"YulIdentifier","src":"12821:9:32"}],"functionName":{"name":"sub","nativeSrc":"12808:3:32","nodeType":"YulIdentifier","src":"12808:3:32"},"nativeSrc":"12808:23:32","nodeType":"YulFunctionCall","src":"12808:23:32"},{"kind":"number","nativeSrc":"12833:2:32","nodeType":"YulLiteral","src":"12833:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12804:3:32","nodeType":"YulIdentifier","src":"12804:3:32"},"nativeSrc":"12804:32:32","nodeType":"YulFunctionCall","src":"12804:32:32"},"nativeSrc":"12801:119:32","nodeType":"YulIf","src":"12801:119:32"},{"nativeSrc":"12930:125:32","nodeType":"YulBlock","src":"12930:125:32","statements":[{"nativeSrc":"12945:15:32","nodeType":"YulVariableDeclaration","src":"12945:15:32","value":{"kind":"number","nativeSrc":"12959:1:32","nodeType":"YulLiteral","src":"12959:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12949:6:32","nodeType":"YulTypedName","src":"12949:6:32","type":""}]},{"nativeSrc":"12974:71:32","nodeType":"YulAssignment","src":"12974:71:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13017:9:32","nodeType":"YulIdentifier","src":"13017:9:32"},{"name":"offset","nativeSrc":"13028:6:32","nodeType":"YulIdentifier","src":"13028:6:32"}],"functionName":{"name":"add","nativeSrc":"13013:3:32","nodeType":"YulIdentifier","src":"13013:3:32"},"nativeSrc":"13013:22:32","nodeType":"YulFunctionCall","src":"13013:22:32"},{"name":"dataEnd","nativeSrc":"13037:7:32","nodeType":"YulIdentifier","src":"13037:7:32"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"12984:28:32","nodeType":"YulIdentifier","src":"12984:28:32"},"nativeSrc":"12984:61:32","nodeType":"YulFunctionCall","src":"12984:61:32"},"variableNames":[{"name":"value0","nativeSrc":"12974:6:32","nodeType":"YulIdentifier","src":"12974:6:32"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"12717:345:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12761:9:32","nodeType":"YulTypedName","src":"12761:9:32","type":""},{"name":"dataEnd","nativeSrc":"12772:7:32","nodeType":"YulTypedName","src":"12772:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12784:6:32","nodeType":"YulTypedName","src":"12784:6:32","type":""}],"src":"12717:345:32"},{"body":{"nativeSrc":"13222:288:32","nodeType":"YulBlock","src":"13222:288:32","statements":[{"nativeSrc":"13232:26:32","nodeType":"YulAssignment","src":"13232:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"13244:9:32","nodeType":"YulIdentifier","src":"13244:9:32"},{"kind":"number","nativeSrc":"13255:2:32","nodeType":"YulLiteral","src":"13255:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13240:3:32","nodeType":"YulIdentifier","src":"13240:3:32"},"nativeSrc":"13240:18:32","nodeType":"YulFunctionCall","src":"13240:18:32"},"variableNames":[{"name":"tail","nativeSrc":"13232:4:32","nodeType":"YulIdentifier","src":"13232:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13312:6:32","nodeType":"YulIdentifier","src":"13312:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13325:9:32","nodeType":"YulIdentifier","src":"13325:9:32"},{"kind":"number","nativeSrc":"13336:1:32","nodeType":"YulLiteral","src":"13336:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13321:3:32","nodeType":"YulIdentifier","src":"13321:3:32"},"nativeSrc":"13321:17:32","nodeType":"YulFunctionCall","src":"13321:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13268:43:32","nodeType":"YulIdentifier","src":"13268:43:32"},"nativeSrc":"13268:71:32","nodeType":"YulFunctionCall","src":"13268:71:32"},"nativeSrc":"13268:71:32","nodeType":"YulExpressionStatement","src":"13268:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13393:6:32","nodeType":"YulIdentifier","src":"13393:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13406:9:32","nodeType":"YulIdentifier","src":"13406:9:32"},{"kind":"number","nativeSrc":"13417:2:32","nodeType":"YulLiteral","src":"13417:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13402:3:32","nodeType":"YulIdentifier","src":"13402:3:32"},"nativeSrc":"13402:18:32","nodeType":"YulFunctionCall","src":"13402:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13349:43:32","nodeType":"YulIdentifier","src":"13349:43:32"},"nativeSrc":"13349:72:32","nodeType":"YulFunctionCall","src":"13349:72:32"},"nativeSrc":"13349:72:32","nodeType":"YulExpressionStatement","src":"13349:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13475:6:32","nodeType":"YulIdentifier","src":"13475:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13488:9:32","nodeType":"YulIdentifier","src":"13488:9:32"},{"kind":"number","nativeSrc":"13499:2:32","nodeType":"YulLiteral","src":"13499:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13484:3:32","nodeType":"YulIdentifier","src":"13484:3:32"},"nativeSrc":"13484:18:32","nodeType":"YulFunctionCall","src":"13484:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13431:43:32","nodeType":"YulIdentifier","src":"13431:43:32"},"nativeSrc":"13431:72:32","nodeType":"YulFunctionCall","src":"13431:72:32"},"nativeSrc":"13431:72:32","nodeType":"YulExpressionStatement","src":"13431:72:32"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"13068:442:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13178:9:32","nodeType":"YulTypedName","src":"13178:9:32","type":""},{"name":"value2","nativeSrc":"13190:6:32","nodeType":"YulTypedName","src":"13190:6:32","type":""},{"name":"value1","nativeSrc":"13198:6:32","nodeType":"YulTypedName","src":"13198:6:32","type":""},{"name":"value0","nativeSrc":"13206:6:32","nodeType":"YulTypedName","src":"13206:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13217:4:32","nodeType":"YulTypedName","src":"13217:4:32","type":""}],"src":"13068:442:32"},{"body":{"nativeSrc":"13642:206:32","nodeType":"YulBlock","src":"13642:206:32","statements":[{"nativeSrc":"13652:26:32","nodeType":"YulAssignment","src":"13652:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"13664:9:32","nodeType":"YulIdentifier","src":"13664:9:32"},{"kind":"number","nativeSrc":"13675:2:32","nodeType":"YulLiteral","src":"13675:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13660:3:32","nodeType":"YulIdentifier","src":"13660:3:32"},"nativeSrc":"13660:18:32","nodeType":"YulFunctionCall","src":"13660:18:32"},"variableNames":[{"name":"tail","nativeSrc":"13652:4:32","nodeType":"YulIdentifier","src":"13652:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13732:6:32","nodeType":"YulIdentifier","src":"13732:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13745:9:32","nodeType":"YulIdentifier","src":"13745:9:32"},{"kind":"number","nativeSrc":"13756:1:32","nodeType":"YulLiteral","src":"13756:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13741:3:32","nodeType":"YulIdentifier","src":"13741:3:32"},"nativeSrc":"13741:17:32","nodeType":"YulFunctionCall","src":"13741:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13688:43:32","nodeType":"YulIdentifier","src":"13688:43:32"},"nativeSrc":"13688:71:32","nodeType":"YulFunctionCall","src":"13688:71:32"},"nativeSrc":"13688:71:32","nodeType":"YulExpressionStatement","src":"13688:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13813:6:32","nodeType":"YulIdentifier","src":"13813:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"13826:9:32","nodeType":"YulIdentifier","src":"13826:9:32"},{"kind":"number","nativeSrc":"13837:2:32","nodeType":"YulLiteral","src":"13837:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13822:3:32","nodeType":"YulIdentifier","src":"13822:3:32"},"nativeSrc":"13822:18:32","nodeType":"YulFunctionCall","src":"13822:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"13769:43:32","nodeType":"YulIdentifier","src":"13769:43:32"},"nativeSrc":"13769:72:32","nodeType":"YulFunctionCall","src":"13769:72:32"},"nativeSrc":"13769:72:32","nodeType":"YulExpressionStatement","src":"13769:72:32"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"13516:332:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13606:9:32","nodeType":"YulTypedName","src":"13606:9:32","type":""},{"name":"value1","nativeSrc":"13618:6:32","nodeType":"YulTypedName","src":"13618:6:32","type":""},{"name":"value0","nativeSrc":"13626:6:32","nodeType":"YulTypedName","src":"13626:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13637:4:32","nodeType":"YulTypedName","src":"13637:4:32","type":""}],"src":"13516:332:32"},{"body":{"nativeSrc":"13882:152:32","nodeType":"YulBlock","src":"13882:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13899:1:32","nodeType":"YulLiteral","src":"13899:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"13902:77:32","nodeType":"YulLiteral","src":"13902:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13892:6:32","nodeType":"YulIdentifier","src":"13892:6:32"},"nativeSrc":"13892:88:32","nodeType":"YulFunctionCall","src":"13892:88:32"},"nativeSrc":"13892:88:32","nodeType":"YulExpressionStatement","src":"13892:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13996:1:32","nodeType":"YulLiteral","src":"13996:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"13999:4:32","nodeType":"YulLiteral","src":"13999:4:32","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"13989:6:32","nodeType":"YulIdentifier","src":"13989:6:32"},"nativeSrc":"13989:15:32","nodeType":"YulFunctionCall","src":"13989:15:32"},"nativeSrc":"13989:15:32","nodeType":"YulExpressionStatement","src":"13989:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14020:1:32","nodeType":"YulLiteral","src":"14020:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"14023:4:32","nodeType":"YulLiteral","src":"14023:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14013:6:32","nodeType":"YulIdentifier","src":"14013:6:32"},"nativeSrc":"14013:15:32","nodeType":"YulFunctionCall","src":"14013:15:32"},"nativeSrc":"14013:15:32","nodeType":"YulExpressionStatement","src":"14013:15:32"}]},"name":"panic_error_0x32","nativeSrc":"13854:180:32","nodeType":"YulFunctionDefinition","src":"13854:180:32"},{"body":{"nativeSrc":"14068:152:32","nodeType":"YulBlock","src":"14068:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14085:1:32","nodeType":"YulLiteral","src":"14085:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"14088:77:32","nodeType":"YulLiteral","src":"14088:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14078:6:32","nodeType":"YulIdentifier","src":"14078:6:32"},"nativeSrc":"14078:88:32","nodeType":"YulFunctionCall","src":"14078:88:32"},"nativeSrc":"14078:88:32","nodeType":"YulExpressionStatement","src":"14078:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14182:1:32","nodeType":"YulLiteral","src":"14182:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"14185:4:32","nodeType":"YulLiteral","src":"14185:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"14175:6:32","nodeType":"YulIdentifier","src":"14175:6:32"},"nativeSrc":"14175:15:32","nodeType":"YulFunctionCall","src":"14175:15:32"},"nativeSrc":"14175:15:32","nodeType":"YulExpressionStatement","src":"14175:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14206:1:32","nodeType":"YulLiteral","src":"14206:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"14209:4:32","nodeType":"YulLiteral","src":"14209:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14199:6:32","nodeType":"YulIdentifier","src":"14199:6:32"},"nativeSrc":"14199:15:32","nodeType":"YulFunctionCall","src":"14199:15:32"},"nativeSrc":"14199:15:32","nodeType":"YulExpressionStatement","src":"14199:15:32"}]},"name":"panic_error_0x11","nativeSrc":"14040:180:32","nodeType":"YulFunctionDefinition","src":"14040:180:32"},{"body":{"nativeSrc":"14271:149:32","nodeType":"YulBlock","src":"14271:149:32","statements":[{"nativeSrc":"14281:25:32","nodeType":"YulAssignment","src":"14281:25:32","value":{"arguments":[{"name":"x","nativeSrc":"14304:1:32","nodeType":"YulIdentifier","src":"14304:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14286:17:32","nodeType":"YulIdentifier","src":"14286:17:32"},"nativeSrc":"14286:20:32","nodeType":"YulFunctionCall","src":"14286:20:32"},"variableNames":[{"name":"x","nativeSrc":"14281:1:32","nodeType":"YulIdentifier","src":"14281:1:32"}]},{"nativeSrc":"14315:25:32","nodeType":"YulAssignment","src":"14315:25:32","value":{"arguments":[{"name":"y","nativeSrc":"14338:1:32","nodeType":"YulIdentifier","src":"14338:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14320:17:32","nodeType":"YulIdentifier","src":"14320:17:32"},"nativeSrc":"14320:20:32","nodeType":"YulFunctionCall","src":"14320:20:32"},"variableNames":[{"name":"y","nativeSrc":"14315:1:32","nodeType":"YulIdentifier","src":"14315:1:32"}]},{"nativeSrc":"14349:17:32","nodeType":"YulAssignment","src":"14349:17:32","value":{"arguments":[{"name":"x","nativeSrc":"14361:1:32","nodeType":"YulIdentifier","src":"14361:1:32"},{"name":"y","nativeSrc":"14364:1:32","nodeType":"YulIdentifier","src":"14364:1:32"}],"functionName":{"name":"sub","nativeSrc":"14357:3:32","nodeType":"YulIdentifier","src":"14357:3:32"},"nativeSrc":"14357:9:32","nodeType":"YulFunctionCall","src":"14357:9:32"},"variableNames":[{"name":"diff","nativeSrc":"14349:4:32","nodeType":"YulIdentifier","src":"14349:4:32"}]},{"body":{"nativeSrc":"14391:22:32","nodeType":"YulBlock","src":"14391:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14393:16:32","nodeType":"YulIdentifier","src":"14393:16:32"},"nativeSrc":"14393:18:32","nodeType":"YulFunctionCall","src":"14393:18:32"},"nativeSrc":"14393:18:32","nodeType":"YulExpressionStatement","src":"14393:18:32"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"14382:4:32","nodeType":"YulIdentifier","src":"14382:4:32"},{"name":"x","nativeSrc":"14388:1:32","nodeType":"YulIdentifier","src":"14388:1:32"}],"functionName":{"name":"gt","nativeSrc":"14379:2:32","nodeType":"YulIdentifier","src":"14379:2:32"},"nativeSrc":"14379:11:32","nodeType":"YulFunctionCall","src":"14379:11:32"},"nativeSrc":"14376:37:32","nodeType":"YulIf","src":"14376:37:32"}]},"name":"checked_sub_t_uint256","nativeSrc":"14226:194:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14257:1:32","nodeType":"YulTypedName","src":"14257:1:32","type":""},{"name":"y","nativeSrc":"14260:1:32","nodeType":"YulTypedName","src":"14260:1:32","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"14266:4:32","nodeType":"YulTypedName","src":"14266:4:32","type":""}],"src":"14226:194:32"},{"body":{"nativeSrc":"14454:152:32","nodeType":"YulBlock","src":"14454:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14471:1:32","nodeType":"YulLiteral","src":"14471:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"14474:77:32","nodeType":"YulLiteral","src":"14474:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14464:6:32","nodeType":"YulIdentifier","src":"14464:6:32"},"nativeSrc":"14464:88:32","nodeType":"YulFunctionCall","src":"14464:88:32"},"nativeSrc":"14464:88:32","nodeType":"YulExpressionStatement","src":"14464:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14568:1:32","nodeType":"YulLiteral","src":"14568:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"14571:4:32","nodeType":"YulLiteral","src":"14571:4:32","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"14561:6:32","nodeType":"YulIdentifier","src":"14561:6:32"},"nativeSrc":"14561:15:32","nodeType":"YulFunctionCall","src":"14561:15:32"},"nativeSrc":"14561:15:32","nodeType":"YulExpressionStatement","src":"14561:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14592:1:32","nodeType":"YulLiteral","src":"14592:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"14595:4:32","nodeType":"YulLiteral","src":"14595:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14585:6:32","nodeType":"YulIdentifier","src":"14585:6:32"},"nativeSrc":"14585:15:32","nodeType":"YulFunctionCall","src":"14585:15:32"},"nativeSrc":"14585:15:32","nodeType":"YulExpressionStatement","src":"14585:15:32"}]},"name":"panic_error_0x31","nativeSrc":"14426:180:32","nodeType":"YulFunctionDefinition","src":"14426:180:32"},{"body":{"nativeSrc":"14670:40:32","nodeType":"YulBlock","src":"14670:40:32","statements":[{"nativeSrc":"14681:22:32","nodeType":"YulAssignment","src":"14681:22:32","value":{"arguments":[{"name":"value","nativeSrc":"14697:5:32","nodeType":"YulIdentifier","src":"14697:5:32"}],"functionName":{"name":"mload","nativeSrc":"14691:5:32","nodeType":"YulIdentifier","src":"14691:5:32"},"nativeSrc":"14691:12:32","nodeType":"YulFunctionCall","src":"14691:12:32"},"variableNames":[{"name":"length","nativeSrc":"14681:6:32","nodeType":"YulIdentifier","src":"14681:6:32"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"14612:98:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14653:5:32","nodeType":"YulTypedName","src":"14653:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"14663:6:32","nodeType":"YulTypedName","src":"14663:6:32","type":""}],"src":"14612:98:32"},{"body":{"nativeSrc":"14829:34:32","nodeType":"YulBlock","src":"14829:34:32","statements":[{"nativeSrc":"14839:18:32","nodeType":"YulAssignment","src":"14839:18:32","value":{"name":"pos","nativeSrc":"14854:3:32","nodeType":"YulIdentifier","src":"14854:3:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"14839:11:32","nodeType":"YulIdentifier","src":"14839:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14716:147:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14801:3:32","nodeType":"YulTypedName","src":"14801:3:32","type":""},{"name":"length","nativeSrc":"14806:6:32","nodeType":"YulTypedName","src":"14806:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14817:11:32","nodeType":"YulTypedName","src":"14817:11:32","type":""}],"src":"14716:147:32"},{"body":{"nativeSrc":"14931:184:32","nodeType":"YulBlock","src":"14931:184:32","statements":[{"nativeSrc":"14941:10:32","nodeType":"YulVariableDeclaration","src":"14941:10:32","value":{"kind":"number","nativeSrc":"14950:1:32","nodeType":"YulLiteral","src":"14950:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"14945:1:32","nodeType":"YulTypedName","src":"14945:1:32","type":""}]},{"body":{"nativeSrc":"15010:63:32","nodeType":"YulBlock","src":"15010:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"15035:3:32","nodeType":"YulIdentifier","src":"15035:3:32"},{"name":"i","nativeSrc":"15040:1:32","nodeType":"YulIdentifier","src":"15040:1:32"}],"functionName":{"name":"add","nativeSrc":"15031:3:32","nodeType":"YulIdentifier","src":"15031:3:32"},"nativeSrc":"15031:11:32","nodeType":"YulFunctionCall","src":"15031:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15054:3:32","nodeType":"YulIdentifier","src":"15054:3:32"},{"name":"i","nativeSrc":"15059:1:32","nodeType":"YulIdentifier","src":"15059:1:32"}],"functionName":{"name":"add","nativeSrc":"15050:3:32","nodeType":"YulIdentifier","src":"15050:3:32"},"nativeSrc":"15050:11:32","nodeType":"YulFunctionCall","src":"15050:11:32"}],"functionName":{"name":"mload","nativeSrc":"15044:5:32","nodeType":"YulIdentifier","src":"15044:5:32"},"nativeSrc":"15044:18:32","nodeType":"YulFunctionCall","src":"15044:18:32"}],"functionName":{"name":"mstore","nativeSrc":"15024:6:32","nodeType":"YulIdentifier","src":"15024:6:32"},"nativeSrc":"15024:39:32","nodeType":"YulFunctionCall","src":"15024:39:32"},"nativeSrc":"15024:39:32","nodeType":"YulExpressionStatement","src":"15024:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"14971:1:32","nodeType":"YulIdentifier","src":"14971:1:32"},{"name":"length","nativeSrc":"14974:6:32","nodeType":"YulIdentifier","src":"14974:6:32"}],"functionName":{"name":"lt","nativeSrc":"14968:2:32","nodeType":"YulIdentifier","src":"14968:2:32"},"nativeSrc":"14968:13:32","nodeType":"YulFunctionCall","src":"14968:13:32"},"nativeSrc":"14960:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"14982:19:32","nodeType":"YulBlock","src":"14982:19:32","statements":[{"nativeSrc":"14984:15:32","nodeType":"YulAssignment","src":"14984:15:32","value":{"arguments":[{"name":"i","nativeSrc":"14993:1:32","nodeType":"YulIdentifier","src":"14993:1:32"},{"kind":"number","nativeSrc":"14996:2:32","nodeType":"YulLiteral","src":"14996:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14989:3:32","nodeType":"YulIdentifier","src":"14989:3:32"},"nativeSrc":"14989:10:32","nodeType":"YulFunctionCall","src":"14989:10:32"},"variableNames":[{"name":"i","nativeSrc":"14984:1:32","nodeType":"YulIdentifier","src":"14984:1:32"}]}]},"pre":{"nativeSrc":"14964:3:32","nodeType":"YulBlock","src":"14964:3:32","statements":[]},"src":"14960:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"15093:3:32","nodeType":"YulIdentifier","src":"15093:3:32"},{"name":"length","nativeSrc":"15098:6:32","nodeType":"YulIdentifier","src":"15098:6:32"}],"functionName":{"name":"add","nativeSrc":"15089:3:32","nodeType":"YulIdentifier","src":"15089:3:32"},"nativeSrc":"15089:16:32","nodeType":"YulFunctionCall","src":"15089:16:32"},{"kind":"number","nativeSrc":"15107:1:32","nodeType":"YulLiteral","src":"15107:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"15082:6:32","nodeType":"YulIdentifier","src":"15082:6:32"},"nativeSrc":"15082:27:32","nodeType":"YulFunctionCall","src":"15082:27:32"},"nativeSrc":"15082:27:32","nodeType":"YulExpressionStatement","src":"15082:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"14869:246:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"14913:3:32","nodeType":"YulTypedName","src":"14913:3:32","type":""},{"name":"dst","nativeSrc":"14918:3:32","nodeType":"YulTypedName","src":"14918:3:32","type":""},{"name":"length","nativeSrc":"14923:6:32","nodeType":"YulTypedName","src":"14923:6:32","type":""}],"src":"14869:246:32"},{"body":{"nativeSrc":"15229:278:32","nodeType":"YulBlock","src":"15229:278:32","statements":[{"nativeSrc":"15239:52:32","nodeType":"YulVariableDeclaration","src":"15239:52:32","value":{"arguments":[{"name":"value","nativeSrc":"15285:5:32","nodeType":"YulIdentifier","src":"15285:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"15253:31:32","nodeType":"YulIdentifier","src":"15253:31:32"},"nativeSrc":"15253:38:32","nodeType":"YulFunctionCall","src":"15253:38:32"},"variables":[{"name":"length","nativeSrc":"15243:6:32","nodeType":"YulTypedName","src":"15243:6:32","type":""}]},{"nativeSrc":"15300:95:32","nodeType":"YulAssignment","src":"15300:95:32","value":{"arguments":[{"name":"pos","nativeSrc":"15383:3:32","nodeType":"YulIdentifier","src":"15383:3:32"},{"name":"length","nativeSrc":"15388:6:32","nodeType":"YulIdentifier","src":"15388:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15307:75:32","nodeType":"YulIdentifier","src":"15307:75:32"},"nativeSrc":"15307:88:32","nodeType":"YulFunctionCall","src":"15307:88:32"},"variableNames":[{"name":"pos","nativeSrc":"15300:3:32","nodeType":"YulIdentifier","src":"15300:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15443:5:32","nodeType":"YulIdentifier","src":"15443:5:32"},{"kind":"number","nativeSrc":"15450:4:32","nodeType":"YulLiteral","src":"15450:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15439:3:32","nodeType":"YulIdentifier","src":"15439:3:32"},"nativeSrc":"15439:16:32","nodeType":"YulFunctionCall","src":"15439:16:32"},{"name":"pos","nativeSrc":"15457:3:32","nodeType":"YulIdentifier","src":"15457:3:32"},{"name":"length","nativeSrc":"15462:6:32","nodeType":"YulIdentifier","src":"15462:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"15404:34:32","nodeType":"YulIdentifier","src":"15404:34:32"},"nativeSrc":"15404:65:32","nodeType":"YulFunctionCall","src":"15404:65:32"},"nativeSrc":"15404:65:32","nodeType":"YulExpressionStatement","src":"15404:65:32"},{"nativeSrc":"15478:23:32","nodeType":"YulAssignment","src":"15478:23:32","value":{"arguments":[{"name":"pos","nativeSrc":"15489:3:32","nodeType":"YulIdentifier","src":"15489:3:32"},{"name":"length","nativeSrc":"15494:6:32","nodeType":"YulIdentifier","src":"15494:6:32"}],"functionName":{"name":"add","nativeSrc":"15485:3:32","nodeType":"YulIdentifier","src":"15485:3:32"},"nativeSrc":"15485:16:32","nodeType":"YulFunctionCall","src":"15485:16:32"},"variableNames":[{"name":"end","nativeSrc":"15478:3:32","nodeType":"YulIdentifier","src":"15478:3:32"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15121:386:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15210:5:32","nodeType":"YulTypedName","src":"15210:5:32","type":""},{"name":"pos","nativeSrc":"15217:3:32","nodeType":"YulTypedName","src":"15217:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15225:3:32","nodeType":"YulTypedName","src":"15225:3:32","type":""}],"src":"15121:386:32"},{"body":{"nativeSrc":"15647:137:32","nodeType":"YulBlock","src":"15647:137:32","statements":[{"nativeSrc":"15658:100:32","nodeType":"YulAssignment","src":"15658:100:32","value":{"arguments":[{"name":"value0","nativeSrc":"15745:6:32","nodeType":"YulIdentifier","src":"15745:6:32"},{"name":"pos","nativeSrc":"15754:3:32","nodeType":"YulIdentifier","src":"15754:3:32"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15665:79:32","nodeType":"YulIdentifier","src":"15665:79:32"},"nativeSrc":"15665:93:32","nodeType":"YulFunctionCall","src":"15665:93:32"},"variableNames":[{"name":"pos","nativeSrc":"15658:3:32","nodeType":"YulIdentifier","src":"15658:3:32"}]},{"nativeSrc":"15768:10:32","nodeType":"YulAssignment","src":"15768:10:32","value":{"name":"pos","nativeSrc":"15775:3:32","nodeType":"YulIdentifier","src":"15775:3:32"},"variableNames":[{"name":"end","nativeSrc":"15768:3:32","nodeType":"YulIdentifier","src":"15768:3:32"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"15513:271:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15626:3:32","nodeType":"YulTypedName","src":"15626:3:32","type":""},{"name":"value0","nativeSrc":"15632:6:32","nodeType":"YulTypedName","src":"15632:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15643:3:32","nodeType":"YulTypedName","src":"15643:3:32","type":""}],"src":"15513:271:32"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$1449(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1449(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1449(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1449(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1449(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1449(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1449(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient account balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a withdrawer\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw is not available\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceed maximum amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c80639010d07c116100ad578063d547741f11610071578063d547741f1461032f578063df74e0281461034b578063f2fde38b14610367578063f3fef3a314610383578063f516440c1461039f5761012c565b80639010d07c1461026557806391d1485414610295578063a217fddf146102c5578063b6b55f25146102e3578063ca15c873146102ff5761012c565b806336568abe116100f457806336568abe146101e7578063715018a614610203578063827a560b1461020d57806385f438c1146102295780638da5cb5b146102475761012c565b806301ffc9a714610131578063144fa6d7146101615780632287e96a1461017d578063248a9ca31461019b5780632f2ff15d146101cb575b600080fd5b61014b60048036038101906101469190611505565b6103bd565b604051610158919061154d565b60405180910390f35b61017b600480360381019061017691906115d8565b610437565b005b610185610483565b604051610192919061154d565b60405180910390f35b6101b560048036038101906101b0919061163b565b610496565b6040516101c29190611677565b60405180910390f35b6101e560048036038101906101e091906116be565b6104b6565b005b61020160048036038101906101fc91906116be565b6104d8565b005b61020b610553565b005b6102276004803603810190610222919061172a565b610567565b005b61023161058c565b60405161023e9190611677565b60405180910390f35b61024f6105b0565b60405161025c9190611766565b60405180910390f35b61027f600480360381019061027a91906117b7565b6105d9565b60405161028c9190611766565b60405180910390f35b6102af60048036038101906102aa91906116be565b610608565b6040516102bc919061154d565b60405180910390f35b6102cd610673565b6040516102da9190611677565b60405180910390f35b6102fd60048036038101906102f891906117f7565b61067a565b005b6103196004803603810190610314919061163b565b610789565b6040516103269190611833565b60405180910390f35b610349600480360381019061034491906116be565b6107ad565b005b610365600480360381019061036091906117f7565b6107cf565b005b610381600480360381019061037c919061184e565b6107e1565b005b61039d6004803603810190610398919061187b565b610867565b005b6103a7610a54565b6040516103b49190611833565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610430575061042f82610a5a565b5b9050919050565b61043f610ad4565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900460ff1681565b600060016000838152602001908152602001600020600101549050919050565b6104bf82610496565b6104c881610b5b565b6104d28383610b6f565b50505050565b6104e0610bb5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610544576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054e8282610bbd565b505050565b61055b610ad4565b6105656000610c03565b565b61056f610ad4565b80600560006101000a81548160ff02191690831515021790555050565b7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006106008260026000868152602001908152602001600020610cc790919063ffffffff16565b905092915050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106d69190611766565b602060405180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906118d0565b1015610758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074f9061195a565b60405180910390fd5b610786600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610ce1565b50565b60006107a660026000848152602001908152602001600020610d63565b9050919050565b6107b682610496565b6107bf81610b5b565b6107c98383610bbd565b50505050565b6107d7610ad4565b8060048190555050565b6107e9610ad4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361085b5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108529190611766565b60405180910390fd5b61086481610c03565b50565b61086f610bb5565b73ffffffffffffffffffffffffffffffffffffffff1661088d6105b0565b73ffffffffffffffffffffffffffffffffffffffff1614806108dc57506108db7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e46108d6610bb5565b610608565b5b61091b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610912906119c6565b60405180910390fd5b600560009054906101000a900460ff1661096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190611a32565b60405180910390fd5b6004548111156109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a690611a9e565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610a0c929190611abe565b6020604051808303816000875af1158015610a2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190611afc565b505050565b60045481565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610acd5750610acc82610d78565b5b9050919050565b610adc610bb5565b73ffffffffffffffffffffffffffffffffffffffff16610afa6105b0565b73ffffffffffffffffffffffffffffffffffffffff1614610b5957610b1d610bb5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b509190611766565b60405180910390fd5b565b610b6c81610b67610bb5565b610de2565b50565b600080610b7c8484610e33565b90508015610bab57610ba98360026000878152602001908152602001600020610f2490919063ffffffff16565b505b8091505092915050565b600033905090565b600080610bca8484610f54565b90508015610bf957610bf7836002600087815260200190815260200160002061104790919063ffffffff16565b505b8091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610cd68360000183611077565b60001c905092915050565b610d5d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d1693929190611b29565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110a2565b50505050565b6000610d7182600001611139565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610dec8282610608565b610e2f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610e26929190611b60565b60405180910390fd5b5050565b6000610e3f8383610608565b610f1957600180600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610eb6610bb5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610f1e565b600090505b92915050565b6000610f4c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61114a565b905092915050565b6000610f608383610608565b1561103c5760006001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610fd9610bb5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611041565b600090505b92915050565b600061106f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6111ba565b905092915050565b600082600001828154811061108f5761108e611b89565b5b9060005260206000200154905092915050565b60006110cd828473ffffffffffffffffffffffffffffffffffffffff166112ce90919063ffffffff16565b905060008151141580156110f25750808060200190518101906110f09190611afc565b155b1561113457826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161112b9190611766565b60405180910390fd5b505050565b600081600001805490509050919050565b600061115683836112e4565b6111af5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506111b4565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146112c25760006001826111ec9190611be7565b90506000600186600001805490506112049190611be7565b905080821461127357600086600001828154811061122557611224611b89565b5b906000526020600020015490508087600001848154811061124957611248611b89565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061128757611286611c1b565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506112c8565b60009150505b92915050565b60606112dc83836000611307565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b60608147101561134e57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016113459190611766565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516113779190611cbb565b60006040518083038185875af1925050503d80600081146113b4576040519150601f19603f3d011682016040523d82523d6000602084013e6113b9565b606091505b50915091506113c98683836113d4565b925050509392505050565b6060826113e9576113e482611463565b61145b565b60008251148015611411575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561145357836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161144a9190611766565b60405180910390fd5b81905061145c565b5b9392505050565b6000815111156114765780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114e2816114ad565b81146114ed57600080fd5b50565b6000813590506114ff816114d9565b92915050565b60006020828403121561151b5761151a6114a8565b5b6000611529848285016114f0565b91505092915050565b60008115159050919050565b61154781611532565b82525050565b6000602082019050611562600083018461153e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061159382611568565b9050919050565b60006115a582611588565b9050919050565b6115b58161159a565b81146115c057600080fd5b50565b6000813590506115d2816115ac565b92915050565b6000602082840312156115ee576115ed6114a8565b5b60006115fc848285016115c3565b91505092915050565b6000819050919050565b61161881611605565b811461162357600080fd5b50565b6000813590506116358161160f565b92915050565b600060208284031215611651576116506114a8565b5b600061165f84828501611626565b91505092915050565b61167181611605565b82525050565b600060208201905061168c6000830184611668565b92915050565b61169b81611588565b81146116a657600080fd5b50565b6000813590506116b881611692565b92915050565b600080604083850312156116d5576116d46114a8565b5b60006116e385828601611626565b92505060206116f4858286016116a9565b9150509250929050565b61170781611532565b811461171257600080fd5b50565b600081359050611724816116fe565b92915050565b6000602082840312156117405761173f6114a8565b5b600061174e84828501611715565b91505092915050565b61176081611588565b82525050565b600060208201905061177b6000830184611757565b92915050565b6000819050919050565b61179481611781565b811461179f57600080fd5b50565b6000813590506117b18161178b565b92915050565b600080604083850312156117ce576117cd6114a8565b5b60006117dc85828601611626565b92505060206117ed858286016117a2565b9150509250929050565b60006020828403121561180d5761180c6114a8565b5b600061181b848285016117a2565b91505092915050565b61182d81611781565b82525050565b60006020820190506118486000830184611824565b92915050565b600060208284031215611864576118636114a8565b5b6000611872848285016116a9565b91505092915050565b60008060408385031215611892576118916114a8565b5b60006118a0858286016116a9565b92505060206118b1858286016117a2565b9150509250929050565b6000815190506118ca8161178b565b92915050565b6000602082840312156118e6576118e56114a8565b5b60006118f4848285016118bb565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b6000611944601c836118fd565b915061194f8261190e565b602082019050919050565b6000602082019050818103600083015261197381611937565b9050919050565b7f43616c6c6572206973206e6f7420612077697468647261776572000000000000600082015250565b60006119b0601a836118fd565b91506119bb8261197a565b602082019050919050565b600060208201905081810360008301526119df816119a3565b9050919050565b7f5769746864726177206973206e6f7420617661696c61626c6500000000000000600082015250565b6000611a1c6019836118fd565b9150611a27826119e6565b602082019050919050565b60006020820190508181036000830152611a4b81611a0f565b9050919050565b7f457863656564206d6178696d756d20616d6f756e740000000000000000000000600082015250565b6000611a886015836118fd565b9150611a9382611a52565b602082019050919050565b60006020820190508181036000830152611ab781611a7b565b9050919050565b6000604082019050611ad36000830185611757565b611ae06020830184611824565b9392505050565b600081519050611af6816116fe565b92915050565b600060208284031215611b1257611b116114a8565b5b6000611b2084828501611ae7565b91505092915050565b6000606082019050611b3e6000830186611757565b611b4b6020830185611757565b611b586040830184611824565b949350505050565b6000604082019050611b756000830185611757565b611b826020830184611668565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bf282611781565b9150611bfd83611781565b9250828203905081811115611c1557611c14611bb8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b600081905092915050565b60005b83811015611c7e578082015181840152602081019050611c63565b60008484015250505050565b6000611c9582611c4a565b611c9f8185611c55565b9350611caf818560208601611c60565b80840191505092915050565b6000611cc78284611c8a565b91508190509291505056fea2646970667358221220c4ac21d6de9a0afa1dcc195dd001ac1a89fc02af28b8a4126cc2a94f246286f464736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xDF74E028 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xF516440C EQ PUSH2 0x39F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x9010D07C EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2FF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x827A560B EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x85F438C1 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x2287E96A EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x430 JUMPI POP PUSH2 0x42F DUP3 PUSH2 0xA5A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43F PUSH2 0xAD4 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BF DUP3 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x4C8 DUP2 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x4D2 DUP4 DUP4 PUSH2 0xB6F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x54E DUP3 DUP3 PUSH2 0xBBD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x55B PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x565 PUSH1 0x0 PUSH2 0xC03 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x56F PUSH2 0xAD4 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xCC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST LT ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x786 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xCE1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A6 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xD63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x7BF DUP2 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x7C9 DUP4 DUP4 PUSH2 0xBBD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0xAD4 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x85B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x864 DUP2 PUSH2 0xC03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x86F PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88D PUSH2 0x5B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x8DC JUMPI POP PUSH2 0x8DB PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 PUSH2 0x8D6 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST JUMPDEST PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x961 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP3 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4F SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xACD JUMPI POP PUSH2 0xACC DUP3 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADC PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAFA PUSH2 0x5B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB59 JUMPI PUSH2 0xB1D PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB6C DUP2 PUSH2 0xB67 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB7C DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xBAB JUMPI PUSH2 0xBA9 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBCA DUP5 DUP5 PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1047 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD6 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD16 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10A2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD71 DUP3 PUSH1 0x0 ADD PUSH2 0x1139 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEC DUP3 DUP3 PUSH2 0x608 JUMP JUMPDEST PUSH2 0xE2F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE26 SWAP3 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3F DUP4 DUP4 PUSH2 0x608 JUMP JUMPDEST PUSH2 0xF19 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEB6 PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4C DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x114A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF60 DUP4 DUP4 PUSH2 0x608 JUMP JUMPDEST ISZERO PUSH2 0x103C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xFD9 PUSH2 0xBB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x11BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x10F2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10F0 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1134 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112B SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1156 DUP4 DUP4 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0x11AF JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x12C2 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1204 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1273 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1225 JUMPI PUSH2 0x1224 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1249 JUMPI PUSH2 0x1248 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x1C1B JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12DC DUP4 DUP4 PUSH1 0x0 PUSH2 0x1307 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x134E JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1345 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1377 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13C9 DUP7 DUP4 DUP4 PUSH2 0x13D4 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x13E9 JUMPI PUSH2 0x13E4 DUP3 PUSH2 0x1463 JUMP JUMPDEST PUSH2 0x145B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1411 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1453 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144A SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x145C JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1476 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E2 DUP2 PUSH2 0x14AD JUMP JUMPDEST DUP2 EQ PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FF DUP2 PUSH2 0x14D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1529 DUP5 DUP3 DUP6 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x1532 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1562 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x153E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1593 DUP3 PUSH2 0x1568 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A5 DUP3 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x159A JUMP JUMPDEST DUP2 EQ PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D2 DUP2 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15ED PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FC DUP5 DUP3 DUP6 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1618 DUP2 PUSH2 0x1605 JUMP JUMPDEST DUP2 EQ PUSH2 0x1623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1635 DUP2 PUSH2 0x160F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH2 0x1650 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x165F DUP5 DUP3 DUP6 ADD PUSH2 0x1626 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1671 DUP2 PUSH2 0x1605 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1668 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169B DUP2 PUSH2 0x1588 JUMP JUMPDEST DUP2 EQ PUSH2 0x16A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B8 DUP2 PUSH2 0x1692 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1626 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16F4 DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x1532 JUMP JUMPDEST DUP2 EQ PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1724 DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1740 JUMPI PUSH2 0x173F PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174E DUP5 DUP3 DUP6 ADD PUSH2 0x1715 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1760 DUP2 PUSH2 0x1588 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1757 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B1 DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CE JUMPI PUSH2 0x17CD PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DC DUP6 DUP3 DUP7 ADD PUSH2 0x1626 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17ED DUP6 DUP3 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181B DUP5 DUP3 DUP6 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x182D DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1848 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1872 DUP5 DUP3 DUP6 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1892 JUMPI PUSH2 0x1891 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A0 DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18B1 DUP6 DUP3 DUP7 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18CA DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E6 JUMPI PUSH2 0x18E5 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18F4 DUP5 DUP3 DUP6 ADD PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206163636F756E742062616C616E636500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1944 PUSH1 0x1C DUP4 PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP PUSH2 0x194F DUP3 PUSH2 0x190E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1973 DUP2 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612077697468647261776572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B0 PUSH1 0x1A DUP4 PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP PUSH2 0x19BB DUP3 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19DF DUP2 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177206973206E6F7420617661696C61626C6500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1C PUSH1 0x19 DUP4 PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1A27 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4B DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457863656564206D6178696D756D20616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A88 PUSH1 0x15 DUP4 PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP PUSH2 0x1A93 DUP3 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB7 DUP2 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x1AE0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF6 DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B12 JUMPI PUSH2 0x1B11 PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B20 DUP5 DUP3 DUP6 ADD PUSH2 0x1AE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B3E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x1B4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x1B58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x1B82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1668 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BF2 DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFD DUP4 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x1BB8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C7E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C95 DUP3 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C9F DUP2 DUP6 PUSH2 0x1C55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C60 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC7 DUP3 DUP5 PUSH2 0x1C8A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xAC 0x21 0xD6 0xDE SWAP11 EXP STATICCALL SAR 0xCC NOT 0x5D 0xD0 ADD 0xAC BYTE DUP10 0xFC MUL 0xAF 0x28 0xB8 LOG4 SLT PUSH13 0xC2A94F246286F464736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"290:1460:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:212:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1134:83:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;563:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:2;;;:::i;:::-;;896:106:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;597:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1526:142:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1489:258:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1836:131:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1010:116:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1225:256:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;524:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:212:3;814:4;852:42;837:57;;;:11;:57;;;;:97;;;;898:36;922:11;898:23;:36::i;:::-;837:97;830:104;;729:212;;;:::o;1134:83:31:-;1531:13:2;:11;:13::i;:::-;1203:6:31::1;1195:5;;:14;;;;;;;;;;;;;;;;;;1134:83:::0;:::o;563:27::-;;;;;;;;;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;896:106:31:-;1531:13:2;:11;:13::i;:::-;985:9:31::1;967:15;;:27;;;;;;;;;;;;;;;;;;896:106:::0;:::o;597:70::-;639:28;597:70;:::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1526:142:3:-;1607:7;1633:28;1655:5;1633:12;:18;1646:4;1633:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1626:35;;1526:142;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;1489:258:31:-;1596:7;1565:5;;;;;;;;;;;:15;;;1581:10;1565:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;1543:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1670:69;1697:5;;;;;;;;;;;1704:10;1724:4;1731:7;1670:26;:69::i;:::-;1489:258;:::o;1836:131:3:-;1907:7;1933:27;:12;:18;1946:4;1933:18;;;;;;;;;;;:25;:27::i;:::-;1926:34;;1836:131;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;1010:116:31:-;1531:13:2;:11;:13::i;:::-;1108:10:31::1;1088:17;:30;;;;1010:116:::0;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1225:256:31:-;760:12;:10;:12::i;:::-;749:23;;:7;:5;:7::i;:::-;:23;;;:65;;;;776:38;639:28;801:12;:10;:12::i;:::-;776:7;:38::i;:::-;749:65;727:141;;;;;;;;;;;;:::i;:::-;;;;;;;;;1316:15:::1;;;;;;;;;;;1308:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1391:17;;1380:7;:28;;1372:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1445:5;;;;;;;;;;;:14;;;1460:3;1465:7;1445:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1225:256:::0;;:::o;524:32::-;;;;:::o;2565:202:0:-;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;2069:257:3:-;2155:4;2171:12;2186:31;2203:4;2209:7;2186:16;:31::i;:::-;2171:46;;2231:7;2227:69;;;2254:31;2277:7;2254:12;:18;2267:4;2254:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;2227:69;2312:7;2305:14;;;2069:257;;;;:::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;2429:262:3:-;2516:4;2532:12;2547:32;2565:4;2571:7;2547:17;:32::i;:::-;2532:47;;2593:7;2589:72;;;2616:34;2642:7;2616:12;:18;2629:4;2616:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2589:72;2677:7;2670:14;;;2429:262;;;;:::o;2912:187:2:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9574:156:29:-;9648:7;9698:22;9702:3;:10;;9714:5;9698:3;:22::i;:::-;9690:31;;9667:56;;9574:156;;;;:::o;1702:188:14:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;9117:115:29:-;9180:7;9206:19;9214:3;:10;;9206:7;:19::i;:::-;9199:26;;9117:115;;;:::o;762:146:25:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;8316:150:29:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;8634:156:29:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;4923:118::-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;;5009:25;;4923:118;;;;:::o;4059:629:14:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;4474:107:29:-;4530:7;4556:3;:11;;:18;;;;4549:25;;4474:107;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;2815:1368::-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;2705:151:15:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;4264:129:29:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;3180:392:15:-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:32;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:111::-;1804:7;1833:24;1851:5;1833:24;:::i;:::-;1822:35;;1752:111;;;:::o;1869:152::-;1957:39;1990:5;1957:39;:::i;:::-;1950:5;1947:50;1937:78;;2011:1;2008;2001:12;1937:78;1869:152;:::o;2027:169::-;2088:5;2126:6;2113:20;2104:29;;2142:48;2184:5;2142:48;:::i;:::-;2027:169;;;;:::o;2202:359::-;2276:6;2325:2;2313:9;2304:7;2300:23;2296:32;2293:119;;;2331:79;;:::i;:::-;2293:119;2451:1;2476:68;2536:7;2527:6;2516:9;2512:22;2476:68;:::i;:::-;2466:78;;2422:132;2202:359;;;;:::o;2567:77::-;2604:7;2633:5;2622:16;;2567:77;;;:::o;2650:122::-;2723:24;2741:5;2723:24;:::i;:::-;2716:5;2713:35;2703:63;;2762:1;2759;2752:12;2703:63;2650:122;:::o;2778:139::-;2824:5;2862:6;2849:20;2840:29;;2878:33;2905:5;2878:33;:::i;:::-;2778:139;;;;:::o;2923:329::-;2982:6;3031:2;3019:9;3010:7;3006:23;3002:32;2999:119;;;3037:79;;:::i;:::-;2999:119;3157:1;3182:53;3227:7;3218:6;3207:9;3203:22;3182:53;:::i;:::-;3172:63;;3128:117;2923:329;;;;:::o;3258:118::-;3345:24;3363:5;3345:24;:::i;:::-;3340:3;3333:37;3258:118;;:::o;3382:222::-;3475:4;3513:2;3502:9;3498:18;3490:26;;3526:71;3594:1;3583:9;3579:17;3570:6;3526:71;:::i;:::-;3382:222;;;;:::o;3610:122::-;3683:24;3701:5;3683:24;:::i;:::-;3676:5;3673:35;3663:63;;3722:1;3719;3712:12;3663:63;3610:122;:::o;3738:139::-;3784:5;3822:6;3809:20;3800:29;;3838:33;3865:5;3838:33;:::i;:::-;3738:139;;;;:::o;3883:474::-;3951:6;3959;4008:2;3996:9;3987:7;3983:23;3979:32;3976:119;;;4014:79;;:::i;:::-;3976:119;4134:1;4159:53;4204:7;4195:6;4184:9;4180:22;4159:53;:::i;:::-;4149:63;;4105:117;4261:2;4287:53;4332:7;4323:6;4312:9;4308:22;4287:53;:::i;:::-;4277:63;;4232:118;3883:474;;;;;:::o;4363:116::-;4433:21;4448:5;4433:21;:::i;:::-;4426:5;4423:32;4413:60;;4469:1;4466;4459:12;4413:60;4363:116;:::o;4485:133::-;4528:5;4566:6;4553:20;4544:29;;4582:30;4606:5;4582:30;:::i;:::-;4485:133;;;;:::o;4624:323::-;4680:6;4729:2;4717:9;4708:7;4704:23;4700:32;4697:119;;;4735:79;;:::i;:::-;4697:119;4855:1;4880:50;4922:7;4913:6;4902:9;4898:22;4880:50;:::i;:::-;4870:60;;4826:114;4624:323;;;;:::o;4953:118::-;5040:24;5058:5;5040:24;:::i;:::-;5035:3;5028:37;4953:118;;:::o;5077:222::-;5170:4;5208:2;5197:9;5193:18;5185:26;;5221:71;5289:1;5278:9;5274:17;5265:6;5221:71;:::i;:::-;5077:222;;;;:::o;5305:77::-;5342:7;5371:5;5360:16;;5305:77;;;:::o;5388:122::-;5461:24;5479:5;5461:24;:::i;:::-;5454:5;5451:35;5441:63;;5500:1;5497;5490:12;5441:63;5388:122;:::o;5516:139::-;5562:5;5600:6;5587:20;5578:29;;5616:33;5643:5;5616:33;:::i;:::-;5516:139;;;;:::o;5661:474::-;5729:6;5737;5786:2;5774:9;5765:7;5761:23;5757:32;5754:119;;;5792:79;;:::i;:::-;5754:119;5912:1;5937:53;5982:7;5973:6;5962:9;5958:22;5937:53;:::i;:::-;5927:63;;5883:117;6039:2;6065:53;6110:7;6101:6;6090:9;6086:22;6065:53;:::i;:::-;6055:63;;6010:118;5661:474;;;;;:::o;6141:329::-;6200:6;6249:2;6237:9;6228:7;6224:23;6220:32;6217:119;;;6255:79;;:::i;:::-;6217:119;6375:1;6400:53;6445:7;6436:6;6425:9;6421:22;6400:53;:::i;:::-;6390:63;;6346:117;6141:329;;;;:::o;6476:118::-;6563:24;6581:5;6563:24;:::i;:::-;6558:3;6551:37;6476:118;;:::o;6600:222::-;6693:4;6731:2;6720:9;6716:18;6708:26;;6744:71;6812:1;6801:9;6797:17;6788:6;6744:71;:::i;:::-;6600:222;;;;:::o;6828:329::-;6887:6;6936:2;6924:9;6915:7;6911:23;6907:32;6904:119;;;6942:79;;:::i;:::-;6904:119;7062:1;7087:53;7132:7;7123:6;7112:9;7108:22;7087:53;:::i;:::-;7077:63;;7033:117;6828:329;;;;:::o;7163:474::-;7231:6;7239;7288:2;7276:9;7267:7;7263:23;7259:32;7256:119;;;7294:79;;:::i;:::-;7256:119;7414:1;7439:53;7484:7;7475:6;7464:9;7460:22;7439:53;:::i;:::-;7429:63;;7385:117;7541:2;7567:53;7612:7;7603:6;7592:9;7588:22;7567:53;:::i;:::-;7557:63;;7512:118;7163:474;;;;;:::o;7643:143::-;7700:5;7731:6;7725:13;7716:22;;7747:33;7774:5;7747:33;:::i;:::-;7643:143;;;;:::o;7792:351::-;7862:6;7911:2;7899:9;7890:7;7886:23;7882:32;7879:119;;;7917:79;;:::i;:::-;7879:119;8037:1;8062:64;8118:7;8109:6;8098:9;8094:22;8062:64;:::i;:::-;8052:74;;8008:128;7792:351;;;;:::o;8149:169::-;8233:11;8267:6;8262:3;8255:19;8307:4;8302:3;8298:14;8283:29;;8149:169;;;;:::o;8324:178::-;8464:30;8460:1;8452:6;8448:14;8441:54;8324:178;:::o;8508:366::-;8650:3;8671:67;8735:2;8730:3;8671:67;:::i;:::-;8664:74;;8747:93;8836:3;8747:93;:::i;:::-;8865:2;8860:3;8856:12;8849:19;;8508:366;;;:::o;8880:419::-;9046:4;9084:2;9073:9;9069:18;9061:26;;9133:9;9127:4;9123:20;9119:1;9108:9;9104:17;9097:47;9161:131;9287:4;9161:131;:::i;:::-;9153:139;;8880:419;;;:::o;9305:176::-;9445:28;9441:1;9433:6;9429:14;9422:52;9305:176;:::o;9487:366::-;9629:3;9650:67;9714:2;9709:3;9650:67;:::i;:::-;9643:74;;9726:93;9815:3;9726:93;:::i;:::-;9844:2;9839:3;9835:12;9828:19;;9487:366;;;:::o;9859:419::-;10025:4;10063:2;10052:9;10048:18;10040:26;;10112:9;10106:4;10102:20;10098:1;10087:9;10083:17;10076:47;10140:131;10266:4;10140:131;:::i;:::-;10132:139;;9859:419;;;:::o;10284:175::-;10424:27;10420:1;10412:6;10408:14;10401:51;10284:175;:::o;10465:366::-;10607:3;10628:67;10692:2;10687:3;10628:67;:::i;:::-;10621:74;;10704:93;10793:3;10704:93;:::i;:::-;10822:2;10817:3;10813:12;10806:19;;10465:366;;;:::o;10837:419::-;11003:4;11041:2;11030:9;11026:18;11018:26;;11090:9;11084:4;11080:20;11076:1;11065:9;11061:17;11054:47;11118:131;11244:4;11118:131;:::i;:::-;11110:139;;10837:419;;;:::o;11262:171::-;11402:23;11398:1;11390:6;11386:14;11379:47;11262:171;:::o;11439:366::-;11581:3;11602:67;11666:2;11661:3;11602:67;:::i;:::-;11595:74;;11678:93;11767:3;11678:93;:::i;:::-;11796:2;11791:3;11787:12;11780:19;;11439:366;;;:::o;11811:419::-;11977:4;12015:2;12004:9;12000:18;11992:26;;12064:9;12058:4;12054:20;12050:1;12039:9;12035:17;12028:47;12092:131;12218:4;12092:131;:::i;:::-;12084:139;;11811:419;;;:::o;12236:332::-;12357:4;12395:2;12384:9;12380:18;12372:26;;12408:71;12476:1;12465:9;12461:17;12452:6;12408:71;:::i;:::-;12489:72;12557:2;12546:9;12542:18;12533:6;12489:72;:::i;:::-;12236:332;;;;;:::o;12574:137::-;12628:5;12659:6;12653:13;12644:22;;12675:30;12699:5;12675:30;:::i;:::-;12574:137;;;;:::o;12717:345::-;12784:6;12833:2;12821:9;12812:7;12808:23;12804:32;12801:119;;;12839:79;;:::i;:::-;12801:119;12959:1;12984:61;13037:7;13028:6;13017:9;13013:22;12984:61;:::i;:::-;12974:71;;12930:125;12717:345;;;;:::o;13068:442::-;13217:4;13255:2;13244:9;13240:18;13232:26;;13268:71;13336:1;13325:9;13321:17;13312:6;13268:71;:::i;:::-;13349:72;13417:2;13406:9;13402:18;13393:6;13349:72;:::i;:::-;13431;13499:2;13488:9;13484:18;13475:6;13431:72;:::i;:::-;13068:442;;;;;;:::o;13516:332::-;13637:4;13675:2;13664:9;13660:18;13652:26;;13688:71;13756:1;13745:9;13741:17;13732:6;13688:71;:::i;:::-;13769:72;13837:2;13826:9;13822:18;13813:6;13769:72;:::i;:::-;13516:332;;;;;:::o;13854:180::-;13902:77;13899:1;13892:88;13999:4;13996:1;13989:15;14023:4;14020:1;14013:15;14040:180;14088:77;14085:1;14078:88;14185:4;14182:1;14175:15;14209:4;14206:1;14199:15;14226:194;14266:4;14286:20;14304:1;14286:20;:::i;:::-;14281:25;;14320:20;14338:1;14320:20;:::i;:::-;14315:25;;14364:1;14361;14357:9;14349:17;;14388:1;14382:4;14379:11;14376:37;;;14393:18;;:::i;:::-;14376:37;14226:194;;;;:::o;14426:180::-;14474:77;14471:1;14464:88;14571:4;14568:1;14561:15;14595:4;14592:1;14585:15;14612:98;14663:6;14697:5;14691:12;14681:22;;14612:98;;;:::o;14716:147::-;14817:11;14854:3;14839:18;;14716:147;;;;:::o;14869:246::-;14950:1;14960:113;14974:6;14971:1;14968:13;14960:113;;;15059:1;15054:3;15050:11;15044:18;15040:1;15035:3;15031:11;15024:39;14996:2;14993:1;14989:10;14984:15;;14960:113;;;15107:1;15098:6;15093:3;15089:16;15082:27;14931:184;14869:246;;;:::o;15121:386::-;15225:3;15253:38;15285:5;15253:38;:::i;:::-;15307:88;15388:6;15383:3;15307:88;:::i;:::-;15300:95;;15404:65;15462:6;15457:3;15450:4;15443:5;15439:16;15404:65;:::i;:::-;15494:6;15489:3;15485:16;15478:23;;15229:278;15121:386;;;;:::o;15513:271::-;15643:3;15665:93;15754:3;15745:6;15665:93;:::i;:::-;15658:100;;15775:3;15768:10;;15513:271;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","WITHDRAWER_ROLE()":"85f438c1","deposit(uint256)":"b6b55f25","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","maxWithdrawAmount()":"f516440c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setMaxWithdrawAmount(uint256)":"df74e028","setToken(address)":"144fa6d7","setWithdrawEnable(bool)":"827a560b","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","withdraw(address,uint256)":"f3fef3a3","withdrawEnabled()":"2287e96a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxWithdrawAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnable\",\"type\":\"bool\"}],\"name\":\"setWithdrawEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb1c906fcd870fc8dfedb63bfb1bc58b4d2a7469bc13cc44d996fda430693850a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd98c7779af61b220166cf952a05f6aca82ec859744d407d29043f8100adfb9c\",\"dweb:/ipfs/Qmd6ftRk6cJgdooybM6F1X26R4SSUeNksv6Gni2NwEnKDw\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/Vault.sol\":{\"keccak256\":\"0x11134cc9184cbf3505b4f33387c4f29eaf9c8ed0c614caa681d67237b1e1592a\",\"urls\":[\"bzz-raw://af90486a64e84a5bd4e765b9214559c2c821c9b29993aa4241261dbe58aad5f4\",\"dweb:/ipfs/QmSTtLsY4aJhRaSFGmJCjUhX8NssepCDxNqnV4874TdpCW\"]}},\"version\":1}"}}}}}